/* Copyright 2024 Esri
 *
 * Licensed under the Apache License Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";
package esriPBuffer.graph;
option java_package = "com.esri.arcgis.protobuf.graph";
option optimize_for = LITE_RUNTIME;
option cc_enable_arenas = true;

import "esriPBuffer/EsriTypes.proto";
import "esriPBuffer/graph/EsriGraphTypes.proto";
import "esriPBuffer/graph/QueryTypes.proto";

// ../KnowledgeGraphServer/graph/search

message GraphSearchRequest {
	reserved 2;
	reserved "globalid_array";

	// Search Query Parameters
	string search_query = 1;                                    // The query string (Lucene query syntax)
	ArrayValue identifier_array = 18;                           // Identifier filtering array
	repeated string named_type_filter = 3;                      // Search execution is limited to specified named types.
	esriNamedTypeCategory type_category_filter = 4;             // Limit search results to entity types, relationship types or both. Check service definition for capabilities of underlying drivers.

	// Input Filter Geometry Parameters
	GeometryValue spatial_filter = 5;                           // The spatial filter geometry.
	Transform input_transform = 6;                              // Transformation parameters for server to decode spatial filter geometry.
	EsriTypes.SpatialReference input_spat_ref = 7;              // The input geometry spatial reference.
	EsriTypes.esriSpatialRel spatial_relation = 8;              // The spatial relationship to be applied to the input geometry. Defaults to `esriSpatialRelIntersects`.

	// Output Geometry Parameters
	bool return_geometry = 9 [deprecated = true];               // Parameter is ignored and marked for deprecation to be replaced by more granular result set filter options in a future release.
	EsriTypes.esriFeatureEncoding feature_encoding = 10;        // Enumeration indicating the method of encoding return geometries.
	EsriTypes.SpatialReference out_spat_ref = 11;               // The output spatial reference of the return geometries.
	EsriTypes.DatumTransformation datum_transform = 12;         // The transformation to apply to the return geometries.
	bool apply_vcs_projection = 13;                             // A flag to indicate whether the vertical coordinate system requires projection.
	QuantizationParameters quantization_params = 14;            // Support for coordinate quantization.

	// Search Result Set Options
	sint32 start_index = 15;                                    // The index of the first result to return.
	sint32 max_num_results = 16;                                // The maximum number results to return.
	bool return_search_context = 17;                            // Include search context fields: `propertyNames`, `scores`, `typeCategory` & `typeName` in the result set. Returns exactly the tuple { id(doc), [propertyName1, ..., propertyNameN], [score1,..., scoreN], typeCategoryOf(doc), typeNameOf(doc)} for each document.
	TimeZone out_time_zone = 19;                                // Return `timestamp_offset` values in the specified time zone.
	TimestampOffsetFormat out_timestamp_offset_format = 20;     // Indicates the method of encoding output `TimestampOffsetValues`.
	DateOnlyFormat out_date_only_format = 21;                   // Indicates the method of encoding output `DateOnlyValues`.
	TimeOnlyFormat out_time_only_format = 22;                   // Indicates the method of encoding output `TimeOnlyValues`.
	DurationFormat out_duration_format = 23;                    // Indicates the method of encoding output `DurationValues`.
}
