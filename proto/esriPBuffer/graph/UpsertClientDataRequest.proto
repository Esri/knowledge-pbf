/* Copyright 2024 Esri
 *
 * Licensed under the Apache License Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";
package esriPBuffer.graph;
option java_package = "com.esri.arcgis.protobuf.graph";
option optimize_for = LITE_RUNTIME;
option cc_enable_arenas = true;

import "esriPBuffer/graph/ClientDataTypes.proto";

// ../KnowledgeGraphServer/clientData/upsert

message ClientDataUpsertRequestParameter {
  ClientDataKey key = 1;
  ClientData value = 2;
  optional ClientDataVTag v_tag = 3;
}

// If there are duplicate keys in the request, reject the entire request and send an error response.
// If a Client Data with the given key is not present in the database, add the value and return its v_tag.
// If a Client Data with the given key is present in the database, and
// a) If a v_tag in the request is not empty and doesn't match with the one in the database, reject the entire request
// and send an error response.
// b) Else update the value and return its new v_tag.
// If there are errors during upsert for some keys/values, other valid client data in the request still pass through
// and get stored successfully in the database (there is no global rollback).
message ClientDataUpsertRequest {
  repeated ClientDataUpsertRequestParameter upsert_client_data = 1;
}