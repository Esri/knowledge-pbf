/* Copyright 2024 Esri
 *
 * Licensed under the Apache License Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";
package esriPBuffer.graph;
option java_package = "com.esri.arcgis.protobuf.graph";
option optimize_for = LITE_RUNTIME;
option cc_enable_arenas = true;

import "esriPBuffer/graph/EsriGraphTypes.proto";

// ../KnowledgeGraphServer/dataModel/syncDataModel

message SyncDataModelResponse {
  // High level error in case there is an error prior to synchronization of data model during discovery phase.
  Error error = 1;

  // High level warnings in case there are privilege access issues during discovery of the graph schema prior to synchronization of the data model.
  repeated Error warnings = 4;

  // Grouped by entity or relationship type name
  // Entity and  relationship type names are populated when a failure or warning is logged.
  repeated SyncDataModelResult named_type_sync_results = 2;

  // Populated when `async` is `true` on the `SyncDataModelRequest`.
  // Clients are expected to poll the `async_status_url` for status of the asynchronous job.
  string async_status_url = 3;

  // Timestamp to indicate the last moment the data model was updated. UTC UNIX epoch in milliseconds.
  // Clients can compare the value given with the local cached data model and refresh as necessary.
  uint64 data_model_timestamp = 5;
}

message SyncDataModelResult {
  string typeName = 1;
  Error error = 2;
  repeated Error warnings = 3;
}