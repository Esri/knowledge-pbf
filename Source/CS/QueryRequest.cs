// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: esriPBuffer/graph/QueryRequest.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EsriPBuffer.Graph {

  /// <summary>Holder for reflection information generated from esriPBuffer/graph/QueryRequest.proto</summary>
  public static partial class QueryRequestReflection {

    #region Descriptor
    /// <summary>File descriptor for esriPBuffer/graph/QueryRequest.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static QueryRequestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiRlc3JpUEJ1ZmZlci9ncmFwaC9RdWVyeVJlcXVlc3QucHJvdG8SEWVzcmlQ",
            "QnVmZmVyLmdyYXBoGhtlc3JpUEJ1ZmZlci9Fc3JpVHlwZXMucHJvdG8aJmVz",
            "cmlQQnVmZmVyL2dyYXBoL0VzcmlHcmFwaFR5cGVzLnByb3RvIpQEChFHcmFw",
            "aFF1ZXJ5UmVxdWVzdBIZChFvcGVuX2N5cGhlcl9xdWVyeRgBIAEoCRJICgpw",
            "YXJhbWV0ZXJzGAIgAygLMjQuZXNyaVBCdWZmZXIuZ3JhcGguR3JhcGhRdWVy",
            "eVJlcXVlc3QuUGFyYW1ldGVyc0VudHJ5EkQKEGZlYXR1cmVfZW5jb2RpbmcY",
            "AyABKA4yKi5lc3JpUEJ1ZmZlci5Fc3JpVHlwZXMuZXNyaUZlYXR1cmVFbmNv",
            "ZGluZxI3CgZvdXRfc3IYBCABKAsyJy5lc3JpUEJ1ZmZlci5Fc3JpVHlwZXMu",
            "U3BhdGlhbFJlZmVyZW5jZRJIChRkYXR1bV90cmFuc2Zvcm1hdGlvbhgFIAEo",
            "CzIqLmVzcmlQQnVmZmVyLkVzcmlUeXBlcy5EYXR1bVRyYW5zZm9ybWF0aW9u",
            "EkoKF3F1YW50aXphdGlvbl9wYXJhbWV0ZXJzGAcgASgLMikuZXNyaVBCdWZm",
            "ZXIuZ3JhcGguUXVhbnRpemF0aW9uUGFyYW1ldGVycxI1Cg9pbnB1dF90cmFu",
            "c2Zvcm0YCCABKAsyHC5lc3JpUEJ1ZmZlci5ncmFwaC5UcmFuc2Zvcm0aTgoP",
            "UGFyYW1ldGVyc0VudHJ5EgsKA2tleRgBIAEoCRIqCgV2YWx1ZRgCIAEoCzIb",
            "LmVzcmlQQnVmZmVyLmdyYXBoLkFueVZhbHVlOgI4AUIlCh5jb20uZXNyaS5h",
            "cmNnaXMucHJvdG9idWYuZ3JhcGhIA/gBAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EsriPBuffer.EsriTypesReflection.Descriptor, global::EsriPBuffer.Graph.EsriGraphTypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.Graph.GraphQueryRequest), global::EsriPBuffer.Graph.GraphQueryRequest.Parser, new[]{ "OpenCypherQuery", "Parameters", "FeatureEncoding", "OutSr", "DatumTransformation", "QuantizationParameters", "InputTransform" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GraphQueryRequest : pb::IMessage<GraphQueryRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GraphQueryRequest> _parser = new pb::MessageParser<GraphQueryRequest>(() => new GraphQueryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GraphQueryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EsriPBuffer.Graph.QueryRequestReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GraphQueryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GraphQueryRequest(GraphQueryRequest other) : this() {
      openCypherQuery_ = other.openCypherQuery_;
      parameters_ = other.parameters_.Clone();
      featureEncoding_ = other.featureEncoding_;
      outSr_ = other.outSr_ != null ? other.outSr_.Clone() : null;
      datumTransformation_ = other.datumTransformation_ != null ? other.datumTransformation_.Clone() : null;
      quantizationParameters_ = other.quantizationParameters_ != null ? other.quantizationParameters_.Clone() : null;
      inputTransform_ = other.inputTransform_ != null ? other.inputTransform_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GraphQueryRequest Clone() {
      return new GraphQueryRequest(this);
    }

    /// <summary>Field number for the "open_cypher_query" field.</summary>
    public const int OpenCypherQueryFieldNumber = 1;
    private string openCypherQuery_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OpenCypherQuery {
      get { return openCypherQuery_; }
      set {
        openCypherQuery_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parameters" field.</summary>
    public const int ParametersFieldNumber = 2;
    private static readonly pbc::MapField<string, global::EsriPBuffer.Graph.AnyValue>.Codec _map_parameters_codec
        = new pbc::MapField<string, global::EsriPBuffer.Graph.AnyValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::EsriPBuffer.Graph.AnyValue.Parser), 18);
    private readonly pbc::MapField<string, global::EsriPBuffer.Graph.AnyValue> parameters_ = new pbc::MapField<string, global::EsriPBuffer.Graph.AnyValue>();
    /// <summary>
    /// 4/7/2020: `parameters` can only contain combinations of:
    ///    - primitive values
    ///    - array values
    ///    - homogeneous arrays
    ///    - anonymous objects
    /// We'll throw a runtime error if the following are encountered:
    ///    - entity values
    ///    - relationship values
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::EsriPBuffer.Graph.AnyValue> Parameters {
      get { return parameters_; }
    }

    /// <summary>Field number for the "feature_encoding" field.</summary>
    public const int FeatureEncodingFieldNumber = 3;
    private global::EsriPBuffer.EsriTypes.Types.esriFeatureEncoding featureEncoding_ = global::EsriPBuffer.EsriTypes.Types.esriFeatureEncoding.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.EsriTypes.Types.esriFeatureEncoding FeatureEncoding {
      get { return featureEncoding_; }
      set {
        featureEncoding_ = value;
      }
    }

    /// <summary>Field number for the "out_sr" field.</summary>
    public const int OutSrFieldNumber = 4;
    private global::EsriPBuffer.EsriTypes.Types.SpatialReference outSr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.EsriTypes.Types.SpatialReference OutSr {
      get { return outSr_; }
      set {
        outSr_ = value;
      }
    }

    /// <summary>Field number for the "datum_transformation" field.</summary>
    public const int DatumTransformationFieldNumber = 5;
    private global::EsriPBuffer.EsriTypes.Types.DatumTransformation datumTransformation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.EsriTypes.Types.DatumTransformation DatumTransformation {
      get { return datumTransformation_; }
      set {
        datumTransformation_ = value;
      }
    }

    /// <summary>Field number for the "quantization_parameters" field.</summary>
    public const int QuantizationParametersFieldNumber = 7;
    private global::EsriPBuffer.Graph.QuantizationParameters quantizationParameters_;
    /// <summary>
    /// code 6 is reserved
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.Graph.QuantizationParameters QuantizationParameters {
      get { return quantizationParameters_; }
      set {
        quantizationParameters_ = value;
      }
    }

    /// <summary>Field number for the "input_transform" field.</summary>
    public const int InputTransformFieldNumber = 8;
    private global::EsriPBuffer.Graph.Transform inputTransform_;
    /// <summary>
    /// Only applies to geometries sent by the client to the server
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.Graph.Transform InputTransform {
      get { return inputTransform_; }
      set {
        inputTransform_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GraphQueryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GraphQueryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OpenCypherQuery != other.OpenCypherQuery) return false;
      if (!Parameters.Equals(other.Parameters)) return false;
      if (FeatureEncoding != other.FeatureEncoding) return false;
      if (!object.Equals(OutSr, other.OutSr)) return false;
      if (!object.Equals(DatumTransformation, other.DatumTransformation)) return false;
      if (!object.Equals(QuantizationParameters, other.QuantizationParameters)) return false;
      if (!object.Equals(InputTransform, other.InputTransform)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OpenCypherQuery.Length != 0) hash ^= OpenCypherQuery.GetHashCode();
      hash ^= Parameters.GetHashCode();
      if (FeatureEncoding != global::EsriPBuffer.EsriTypes.Types.esriFeatureEncoding.Unspecified) hash ^= FeatureEncoding.GetHashCode();
      if (outSr_ != null) hash ^= OutSr.GetHashCode();
      if (datumTransformation_ != null) hash ^= DatumTransformation.GetHashCode();
      if (quantizationParameters_ != null) hash ^= QuantizationParameters.GetHashCode();
      if (inputTransform_ != null) hash ^= InputTransform.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (OpenCypherQuery.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OpenCypherQuery);
      }
      parameters_.WriteTo(output, _map_parameters_codec);
      if (FeatureEncoding != global::EsriPBuffer.EsriTypes.Types.esriFeatureEncoding.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) FeatureEncoding);
      }
      if (outSr_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(OutSr);
      }
      if (datumTransformation_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DatumTransformation);
      }
      if (quantizationParameters_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(QuantizationParameters);
      }
      if (inputTransform_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(InputTransform);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (OpenCypherQuery.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OpenCypherQuery);
      }
      parameters_.WriteTo(ref output, _map_parameters_codec);
      if (FeatureEncoding != global::EsriPBuffer.EsriTypes.Types.esriFeatureEncoding.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) FeatureEncoding);
      }
      if (outSr_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(OutSr);
      }
      if (datumTransformation_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DatumTransformation);
      }
      if (quantizationParameters_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(QuantizationParameters);
      }
      if (inputTransform_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(InputTransform);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OpenCypherQuery.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OpenCypherQuery);
      }
      size += parameters_.CalculateSize(_map_parameters_codec);
      if (FeatureEncoding != global::EsriPBuffer.EsriTypes.Types.esriFeatureEncoding.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FeatureEncoding);
      }
      if (outSr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OutSr);
      }
      if (datumTransformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DatumTransformation);
      }
      if (quantizationParameters_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(QuantizationParameters);
      }
      if (inputTransform_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InputTransform);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GraphQueryRequest other) {
      if (other == null) {
        return;
      }
      if (other.OpenCypherQuery.Length != 0) {
        OpenCypherQuery = other.OpenCypherQuery;
      }
      parameters_.Add(other.parameters_);
      if (other.FeatureEncoding != global::EsriPBuffer.EsriTypes.Types.esriFeatureEncoding.Unspecified) {
        FeatureEncoding = other.FeatureEncoding;
      }
      if (other.outSr_ != null) {
        if (outSr_ == null) {
          OutSr = new global::EsriPBuffer.EsriTypes.Types.SpatialReference();
        }
        OutSr.MergeFrom(other.OutSr);
      }
      if (other.datumTransformation_ != null) {
        if (datumTransformation_ == null) {
          DatumTransformation = new global::EsriPBuffer.EsriTypes.Types.DatumTransformation();
        }
        DatumTransformation.MergeFrom(other.DatumTransformation);
      }
      if (other.quantizationParameters_ != null) {
        if (quantizationParameters_ == null) {
          QuantizationParameters = new global::EsriPBuffer.Graph.QuantizationParameters();
        }
        QuantizationParameters.MergeFrom(other.QuantizationParameters);
      }
      if (other.inputTransform_ != null) {
        if (inputTransform_ == null) {
          InputTransform = new global::EsriPBuffer.Graph.Transform();
        }
        InputTransform.MergeFrom(other.InputTransform);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OpenCypherQuery = input.ReadString();
            break;
          }
          case 18: {
            parameters_.AddEntriesFrom(input, _map_parameters_codec);
            break;
          }
          case 24: {
            FeatureEncoding = (global::EsriPBuffer.EsriTypes.Types.esriFeatureEncoding) input.ReadEnum();
            break;
          }
          case 34: {
            if (outSr_ == null) {
              OutSr = new global::EsriPBuffer.EsriTypes.Types.SpatialReference();
            }
            input.ReadMessage(OutSr);
            break;
          }
          case 42: {
            if (datumTransformation_ == null) {
              DatumTransformation = new global::EsriPBuffer.EsriTypes.Types.DatumTransformation();
            }
            input.ReadMessage(DatumTransformation);
            break;
          }
          case 58: {
            if (quantizationParameters_ == null) {
              QuantizationParameters = new global::EsriPBuffer.Graph.QuantizationParameters();
            }
            input.ReadMessage(QuantizationParameters);
            break;
          }
          case 66: {
            if (inputTransform_ == null) {
              InputTransform = new global::EsriPBuffer.Graph.Transform();
            }
            input.ReadMessage(InputTransform);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            OpenCypherQuery = input.ReadString();
            break;
          }
          case 18: {
            parameters_.AddEntriesFrom(ref input, _map_parameters_codec);
            break;
          }
          case 24: {
            FeatureEncoding = (global::EsriPBuffer.EsriTypes.Types.esriFeatureEncoding) input.ReadEnum();
            break;
          }
          case 34: {
            if (outSr_ == null) {
              OutSr = new global::EsriPBuffer.EsriTypes.Types.SpatialReference();
            }
            input.ReadMessage(OutSr);
            break;
          }
          case 42: {
            if (datumTransformation_ == null) {
              DatumTransformation = new global::EsriPBuffer.EsriTypes.Types.DatumTransformation();
            }
            input.ReadMessage(DatumTransformation);
            break;
          }
          case 58: {
            if (quantizationParameters_ == null) {
              QuantizationParameters = new global::EsriPBuffer.Graph.QuantizationParameters();
            }
            input.ReadMessage(QuantizationParameters);
            break;
          }
          case 66: {
            if (inputTransform_ == null) {
              InputTransform = new global::EsriPBuffer.Graph.Transform();
            }
            input.ReadMessage(InputTransform);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
