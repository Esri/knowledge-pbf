// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: esriPBuffer/graph/EsriGraphTypes.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EsriPBuffer.Graph {

  /// <summary>Holder for reflection information generated from esriPBuffer/graph/EsriGraphTypes.proto</summary>
  public static partial class EsriGraphTypesReflection {

    #region Descriptor
    /// <summary>File descriptor for esriPBuffer/graph/EsriGraphTypes.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EsriGraphTypesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZlc3JpUEJ1ZmZlci9ncmFwaC9Fc3JpR3JhcGhUeXBlcy5wcm90bxIRZXNy",
            "aVBCdWZmZXIuZ3JhcGgaG2VzcmlQQnVmZmVyL0VzcmlUeXBlcy5wcm90byIf",
            "CgpGbG9hdEFycmF5EhEKBXZhbHVlGAEgAygCQgIQASIgCgtEb3VibGVBcnJh",
            "eRIRCgV2YWx1ZRgBIAMoAUICEAEiHwoKSW50MzJBcnJheRIRCgV2YWx1ZRgB",
            "IAMoEUICEAEiHwoKSW50NjRBcnJheRIRCgV2YWx1ZRgBIAMoEkICEAEiHgoJ",
            "Qm9vbEFycmF5EhEKBXZhbHVlGAEgAygIQgIQASIiCg1EYXRlVGltZUFycmF5",
            "EhEKBXZhbHVlGAEgAygDQgIQASIbCglOdWxsQXJyYXkSDgoGbGVuZ3RoGAEg",
            "ASgSIhwKC1N0cmluZ0FycmF5Eg0KBXZhbHVlGAEgAygJIocCCg1HZW9tZXRy",
            "eVZhbHVlEjkKDGdlb21ldHJ5VHlwZRgBIAEoDjIjLmVzcmlQQnVmZmVyLkVz",
            "cmlUeXBlcy5HZW9tZXRyeVR5cGUSSAoIZ2VvbWV0cnkYAiABKAsyNC5lc3Jp",
            "UEJ1ZmZlci5ncmFwaC5HZW9tZXRyeVZhbHVlLkVzcmlEZWZhdWx0R2VvbWV0",
            "cnlIABpaChNFc3JpRGVmYXVsdEdlb21ldHJ5EgwKBGhhc1oYASABKAgSDAoE",
            "aGFzTRgCIAEoCBITCgdsZW5ndGhzGAMgAygNQgIQARISCgZjb29yZHMYBCAD",
            "KBJCAhABQhUKE2NvbXByZXNzZWRfZ2VvbWV0cnkixgEKFlF1YW50aXphdGlv",
            "blBhcmFtZXRlcnMSLwoGZXh0ZW50GAEgASgLMh8uZXNyaVBCdWZmZXIuRXNy",
            "aVR5cGVzLkVudmVsb3BlEkQKBG1vZGUYAiABKA4yNi5lc3JpUEJ1ZmZlci5n",
            "cmFwaC5RdWFudGl6YXRpb25QYXJhbWV0ZXJzLlF1YW50aXplTW9kZRIRCgl0",
            "b2xlcmFuY2UYAyABKAEiIgoMUXVhbnRpemVNb2RlEggKBHZpZXcQABIICgRl",
            "ZGl0EAEibQoJVHJhbnNmb3JtEisKBXNjYWxlGAEgASgLMhwuZXNyaVBCdWZm",
            "ZXIuRXNyaVR5cGVzLlNjYWxlEjMKCXRyYW5zbGF0ZRgCIAEoCzIgLmVzcmlQ",
            "QnVmZmVyLkVzcmlUeXBlcy5UcmFuc2xhdGUiQAoNR2VvbWV0cnlBcnJheRIv",
            "CgV2YWx1ZRgBIAMoCzIgLmVzcmlQQnVmZmVyLmdyYXBoLkdlb21ldHJ5VmFs",
            "dWUihAMKDlByaW1pdGl2ZVZhbHVlEhYKDHN0cmluZ192YWx1ZRgBIAEoCUgA",
            "EhUKC2Zsb2F0X3ZhbHVlGAIgASgCSAASIwoZZmxvYXRfY29tcHJlc3NlZF9h",
            "c19pbnQzMhgDIAEoEUgAEhYKDGRvdWJsZV92YWx1ZRgEIAEoAUgAEiQKGmRv",
            "dWJsZV9jb21wcmVzc2VkX2FzX2Zsb2F0GAUgASgCSAASJAoaZG91YmxlX2Nv",
            "bXByZXNzZWRfYXNfaW50NjQYBiABKBJIABIWCgxzaW50NjRfdmFsdWUYByAB",
            "KBJIABIUCgpib29sX3ZhbHVlGAggASgISAASFAoKdXVpZF92YWx1ZRgJIAEo",
            "DEgAEjoKDmdlb21ldHJ5X3ZhbHVlGAsgASgLMiAuZXNyaVBCdWZmZXIuZ3Jh",
            "cGguR2VvbWV0cnlWYWx1ZUgAEhIKCG51bGxfdGFnGAwgASgISAASGAoOZGF0",
            "ZXRpbWVfdmFsdWUYDSABKANIAEIMCgp2YWx1ZV90eXBlIqEBCgtPYmplY3RW",
            "YWx1ZRJCCgpwcm9wZXJ0aWVzGAEgAygLMi4uZXNyaVBCdWZmZXIuZ3JhcGgu",
            "T2JqZWN0VmFsdWUuUHJvcGVydGllc0VudHJ5Gk4KD1Byb3BlcnRpZXNFbnRy",
            "eRILCgNrZXkYASABKAkSKgoFdmFsdWUYAiABKAsyGy5lc3JpUEJ1ZmZlci5n",
            "cmFwaC5BbnlWYWx1ZToCOAEisAEKC0VudGl0eVZhbHVlEg0KBWxhYmVsGAEg",
            "ASgJEkIKCnByb3BlcnRpZXMYAiADKAsyLi5lc3JpUEJ1ZmZlci5ncmFwaC5F",
            "bnRpdHlWYWx1ZS5Qcm9wZXJ0aWVzRW50cnkaTgoPUHJvcGVydGllc0VudHJ5",
            "EgsKA2tleRgBIAEoCRIqCgV2YWx1ZRgCIAEoCzIbLmVzcmlQQnVmZmVyLmdy",
            "YXBoLkFueVZhbHVlOgI4ASK7AQoRUmVsYXRpb25zaGlwVmFsdWUSDAoEdHlw",
            "ZRgBIAEoCRJICgpwcm9wZXJ0aWVzGAIgAygLMjQuZXNyaVBCdWZmZXIuZ3Jh",
            "cGguUmVsYXRpb25zaGlwVmFsdWUuUHJvcGVydGllc0VudHJ5Gk4KD1Byb3Bl",
            "cnRpZXNFbnRyeRILCgNrZXkYASABKAkSKgoFdmFsdWUYAiABKAsyGy5lc3Jp",
            "UEJ1ZmZlci5ncmFwaC5BbnlWYWx1ZToCOAEiegoJUGF0aFZhbHVlEjAKCGVu",
            "dGl0aWVzGAEgAygLMh4uZXNyaVBCdWZmZXIuZ3JhcGguRW50aXR5VmFsdWUS",
            "OwoNcmVsYXRpb25zaGlwcxgCIAMoCzIkLmVzcmlQQnVmZmVyLmdyYXBoLlJl",
            "bGF0aW9uc2hpcFZhbHVlIjkKCkFycmF5VmFsdWUSKwoGdmFsdWVzGAEgAygL",
            "MhsuZXNyaVBCdWZmZXIuZ3JhcGguQW55VmFsdWUipwgKCEFueVZhbHVlEjwK",
            "D3ByaW1pdGl2ZV92YWx1ZRgBIAEoCzIhLmVzcmlQQnVmZmVyLmdyYXBoLlBy",
            "aW1pdGl2ZVZhbHVlSAASNAoLYXJyYXlfdmFsdWUYAiABKAsyHS5lc3JpUEJ1",
            "ZmZlci5ncmFwaC5BcnJheVZhbHVlSAASNgoMb2JqZWN0X3ZhbHVlGAMgASgL",
            "Mh4uZXNyaVBCdWZmZXIuZ3JhcGguT2JqZWN0VmFsdWVIABI2CgxlbnRpdHlf",
            "dmFsdWUYBCABKAsyHi5lc3JpUEJ1ZmZlci5ncmFwaC5FbnRpdHlWYWx1ZUgA",
            "EkIKEnJlbGF0aW9uc2hpcF92YWx1ZRgFIAEoCzIkLmVzcmlQQnVmZmVyLmdy",
            "YXBoLlJlbGF0aW9uc2hpcFZhbHVlSAASMgoKcGF0aF92YWx1ZRgGIAEoCzIc",
            "LmVzcmlQQnVmZmVyLmdyYXBoLlBhdGhWYWx1ZUgAEjQKC2Zsb2F0X2FycmF5",
            "GAcgASgLMh0uZXNyaVBCdWZmZXIuZ3JhcGguRmxvYXRBcnJheUgAEkgKH2Zs",
            "b2F0X2NvbXByZXNzZWRfYXNfaW50MzJfYXJyYXkYCCABKAsyHS5lc3JpUEJ1",
            "ZmZlci5ncmFwaC5JbnQzMkFycmF5SAASNgoMZG91YmxlX2FycmF5GAkgASgL",
            "Mh4uZXNyaVBCdWZmZXIuZ3JhcGguRG91YmxlQXJyYXlIABJJCiBkb3VibGVf",
            "Y29tcHJlc3NlZF9hc19mbG9hdF9hcnJheRgKIAEoCzIdLmVzcmlQQnVmZmVy",
            "LmdyYXBoLkZsb2F0QXJyYXlIABJJCiBkb3VibGVfY29tcHJlc3NlZF9hc19p",
            "bnQ2NF9hcnJheRgLIAEoCzIdLmVzcmlQQnVmZmVyLmdyYXBoLkludDY0QXJy",
            "YXlIABI1CgxzaW50NjRfYXJyYXkYDCABKAsyHS5lc3JpUEJ1ZmZlci5ncmFw",
            "aC5JbnQ2NEFycmF5SAASMgoKYm9vbF9hcnJheRgNIAEoCzIcLmVzcmlQQnVm",
            "ZmVyLmdyYXBoLkJvb2xBcnJheUgAEjIKCm51bGxfYXJyYXkYDiABKAsyHC5l",
            "c3JpUEJ1ZmZlci5ncmFwaC5OdWxsQXJyYXlIABIUCgp1dWlkX2FycmF5GA8g",
            "ASgMSAASNgoKZGF0ZV9hcnJheRgTIAEoCzIgLmVzcmlQQnVmZmVyLmdyYXBo",
            "LkRhdGVUaW1lQXJyYXlIABI2CgxzdHJpbmdfYXJyYXkYECABKAsyHi5lc3Jp",
            "UEJ1ZmZlci5ncmFwaC5TdHJpbmdBcnJheUgAEjoKDmdlb21ldHJ5X2FycmF5",
            "GBIgASgLMiAuZXNyaVBCdWZmZXIuZ3JhcGguR2VvbWV0cnlBcnJheUgAQhAK",
            "DmFueV92YWx1ZV90eXBlIjIKBUVycm9yEhIKCmVycm9yX2NvZGUYASABKBIS",
            "FQoNZXJyb3JfbWVzc2FnZRgCIAEoCUIlCh5jb20uZXNyaS5hcmNnaXMucHJv",
            "dG9idWYuZ3JhcGhIA/gBAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EsriPBuffer.EsriTypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.Graph.FloatArray), global::EsriPBuffer.Graph.FloatArray.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.Graph.DoubleArray), global::EsriPBuffer.Graph.DoubleArray.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.Graph.Int32Array), global::EsriPBuffer.Graph.Int32Array.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.Graph.Int64Array), global::EsriPBuffer.Graph.Int64Array.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.Graph.BoolArray), global::EsriPBuffer.Graph.BoolArray.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.Graph.DateTimeArray), global::EsriPBuffer.Graph.DateTimeArray.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.Graph.NullArray), global::EsriPBuffer.Graph.NullArray.Parser, new[]{ "Length" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.Graph.StringArray), global::EsriPBuffer.Graph.StringArray.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.Graph.GeometryValue), global::EsriPBuffer.Graph.GeometryValue.Parser, new[]{ "GeometryType", "Geometry" }, new[]{ "CompressedGeometry" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.Graph.GeometryValue.Types.EsriDefaultGeometry), global::EsriPBuffer.Graph.GeometryValue.Types.EsriDefaultGeometry.Parser, new[]{ "HasZ", "HasM", "Lengths", "Coords" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.Graph.QuantizationParameters), global::EsriPBuffer.Graph.QuantizationParameters.Parser, new[]{ "Extent", "Mode", "Tolerance" }, null, new[]{ typeof(global::EsriPBuffer.Graph.QuantizationParameters.Types.QuantizeMode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.Graph.Transform), global::EsriPBuffer.Graph.Transform.Parser, new[]{ "Scale", "Translate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.Graph.GeometryArray), global::EsriPBuffer.Graph.GeometryArray.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.Graph.PrimitiveValue), global::EsriPBuffer.Graph.PrimitiveValue.Parser, new[]{ "StringValue", "FloatValue", "FloatCompressedAsInt32", "DoubleValue", "DoubleCompressedAsFloat", "DoubleCompressedAsInt64", "Sint64Value", "BoolValue", "UuidValue", "GeometryValue", "NullTag", "DatetimeValue" }, new[]{ "ValueType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.Graph.ObjectValue), global::EsriPBuffer.Graph.ObjectValue.Parser, new[]{ "Properties" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.Graph.EntityValue), global::EsriPBuffer.Graph.EntityValue.Parser, new[]{ "Label", "Properties" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.Graph.RelationshipValue), global::EsriPBuffer.Graph.RelationshipValue.Parser, new[]{ "Type", "Properties" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.Graph.PathValue), global::EsriPBuffer.Graph.PathValue.Parser, new[]{ "Entities", "Relationships" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.Graph.ArrayValue), global::EsriPBuffer.Graph.ArrayValue.Parser, new[]{ "Values" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.Graph.AnyValue), global::EsriPBuffer.Graph.AnyValue.Parser, new[]{ "PrimitiveValue", "ArrayValue", "ObjectValue", "EntityValue", "RelationshipValue", "PathValue", "FloatArray", "FloatCompressedAsInt32Array", "DoubleArray", "DoubleCompressedAsFloatArray", "DoubleCompressedAsInt64Array", "Sint64Array", "BoolArray", "NullArray", "UuidArray", "DateArray", "StringArray", "GeometryArray" }, new[]{ "AnyValueType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.Graph.Error), global::EsriPBuffer.Graph.Error.Parser, new[]{ "ErrorCode", "ErrorMessage" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// packed array types
  /// </summary>
  public sealed partial class FloatArray : pb::IMessage<FloatArray>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FloatArray> _parser = new pb::MessageParser<FloatArray>(() => new FloatArray());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FloatArray> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EsriPBuffer.Graph.EsriGraphTypesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FloatArray() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FloatArray(FloatArray other) : this() {
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FloatArray Clone() {
      return new FloatArray(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<float> _repeated_value_codec
        = pb::FieldCodec.ForFloat(10);
    private readonly pbc::RepeatedField<float> value_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FloatArray);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FloatArray other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      value_.WriteTo(ref output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FloatArray other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 13: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 13: {
            value_.AddEntriesFrom(ref input, _repeated_value_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DoubleArray : pb::IMessage<DoubleArray>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DoubleArray> _parser = new pb::MessageParser<DoubleArray>(() => new DoubleArray());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DoubleArray> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EsriPBuffer.Graph.EsriGraphTypesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoubleArray() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoubleArray(DoubleArray other) : this() {
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoubleArray Clone() {
      return new DoubleArray(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<double> _repeated_value_codec
        = pb::FieldCodec.ForDouble(10);
    private readonly pbc::RepeatedField<double> value_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<double> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DoubleArray);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DoubleArray other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      value_.WriteTo(ref output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DoubleArray other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 9: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 9: {
            value_.AddEntriesFrom(ref input, _repeated_value_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Int32Array : pb::IMessage<Int32Array>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Int32Array> _parser = new pb::MessageParser<Int32Array>(() => new Int32Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Int32Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EsriPBuffer.Graph.EsriGraphTypesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Int32Array() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Int32Array(Int32Array other) : this() {
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Int32Array Clone() {
      return new Int32Array(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_value_codec
        = pb::FieldCodec.ForSInt32(10);
    private readonly pbc::RepeatedField<int> value_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Int32Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Int32Array other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      value_.WriteTo(ref output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Int32Array other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            value_.AddEntriesFrom(ref input, _repeated_value_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Int64Array : pb::IMessage<Int64Array>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Int64Array> _parser = new pb::MessageParser<Int64Array>(() => new Int64Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Int64Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EsriPBuffer.Graph.EsriGraphTypesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Int64Array() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Int64Array(Int64Array other) : this() {
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Int64Array Clone() {
      return new Int64Array(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_value_codec
        = pb::FieldCodec.ForSInt64(10);
    private readonly pbc::RepeatedField<long> value_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Int64Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Int64Array other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      value_.WriteTo(ref output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Int64Array other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            value_.AddEntriesFrom(ref input, _repeated_value_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BoolArray : pb::IMessage<BoolArray>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BoolArray> _parser = new pb::MessageParser<BoolArray>(() => new BoolArray());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BoolArray> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EsriPBuffer.Graph.EsriGraphTypesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoolArray() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoolArray(BoolArray other) : this() {
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoolArray Clone() {
      return new BoolArray(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<bool> _repeated_value_codec
        = pb::FieldCodec.ForBool(10);
    private readonly pbc::RepeatedField<bool> value_ = new pbc::RepeatedField<bool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<bool> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BoolArray);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BoolArray other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      value_.WriteTo(ref output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BoolArray other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            value_.AddEntriesFrom(ref input, _repeated_value_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DateTimeArray : pb::IMessage<DateTimeArray>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DateTimeArray> _parser = new pb::MessageParser<DateTimeArray>(() => new DateTimeArray());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DateTimeArray> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EsriPBuffer.Graph.EsriGraphTypesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DateTimeArray() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DateTimeArray(DateTimeArray other) : this() {
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DateTimeArray Clone() {
      return new DateTimeArray(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_value_codec
        = pb::FieldCodec.ForInt64(10);
    private readonly pbc::RepeatedField<long> value_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DateTimeArray);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DateTimeArray other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      value_.WriteTo(ref output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DateTimeArray other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            value_.AddEntriesFrom(ref input, _repeated_value_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class NullArray : pb::IMessage<NullArray>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NullArray> _parser = new pb::MessageParser<NullArray>(() => new NullArray());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NullArray> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EsriPBuffer.Graph.EsriGraphTypesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NullArray() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NullArray(NullArray other) : this() {
      length_ = other.length_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NullArray Clone() {
      return new NullArray(this);
    }

    /// <summary>Field number for the "length" field.</summary>
    public const int LengthFieldNumber = 1;
    private long length_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Length {
      get { return length_; }
      set {
        length_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NullArray);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NullArray other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Length != other.Length) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Length != 0L) hash ^= Length.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Length != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(Length);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Length != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(Length);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Length != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(Length);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NullArray other) {
      if (other == null) {
        return;
      }
      if (other.Length != 0L) {
        Length = other.Length;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Length = input.ReadSInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Length = input.ReadSInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StringArray : pb::IMessage<StringArray>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StringArray> _parser = new pb::MessageParser<StringArray>(() => new StringArray());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StringArray> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EsriPBuffer.Graph.EsriGraphTypesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringArray() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringArray(StringArray other) : this() {
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringArray Clone() {
      return new StringArray(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_value_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> value_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StringArray);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StringArray other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      value_.WriteTo(ref output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StringArray other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            value_.AddEntriesFrom(ref input, _repeated_value_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GeometryValue : pb::IMessage<GeometryValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GeometryValue> _parser = new pb::MessageParser<GeometryValue>(() => new GeometryValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GeometryValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EsriPBuffer.Graph.EsriGraphTypesReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GeometryValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GeometryValue(GeometryValue other) : this() {
      geometryType_ = other.geometryType_;
      switch (other.CompressedGeometryCase) {
        case CompressedGeometryOneofCase.Geometry:
          Geometry = other.Geometry.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GeometryValue Clone() {
      return new GeometryValue(this);
    }

    /// <summary>Field number for the "geometryType" field.</summary>
    public const int GeometryTypeFieldNumber = 1;
    private global::EsriPBuffer.EsriTypes.Types.GeometryType geometryType_ = global::EsriPBuffer.EsriTypes.Types.GeometryType.EsriGeometryTypePoint;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.EsriTypes.Types.GeometryType GeometryType {
      get { return geometryType_; }
      set {
        geometryType_ = value;
      }
    }

    /// <summary>Field number for the "geometry" field.</summary>
    public const int GeometryFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.Graph.GeometryValue.Types.EsriDefaultGeometry Geometry {
      get { return compressedGeometryCase_ == CompressedGeometryOneofCase.Geometry ? (global::EsriPBuffer.Graph.GeometryValue.Types.EsriDefaultGeometry) compressedGeometry_ : null; }
      set {
        compressedGeometry_ = value;
        compressedGeometryCase_ = value == null ? CompressedGeometryOneofCase.None : CompressedGeometryOneofCase.Geometry;
      }
    }

    private object compressedGeometry_;
    /// <summary>Enum of possible cases for the "compressed_geometry" oneof.</summary>
    public enum CompressedGeometryOneofCase {
      None = 0,
      Geometry = 2,
    }
    private CompressedGeometryOneofCase compressedGeometryCase_ = CompressedGeometryOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompressedGeometryOneofCase CompressedGeometryCase {
      get { return compressedGeometryCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCompressedGeometry() {
      compressedGeometryCase_ = CompressedGeometryOneofCase.None;
      compressedGeometry_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GeometryValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GeometryValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GeometryType != other.GeometryType) return false;
      if (!object.Equals(Geometry, other.Geometry)) return false;
      if (CompressedGeometryCase != other.CompressedGeometryCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GeometryType != global::EsriPBuffer.EsriTypes.Types.GeometryType.EsriGeometryTypePoint) hash ^= GeometryType.GetHashCode();
      if (compressedGeometryCase_ == CompressedGeometryOneofCase.Geometry) hash ^= Geometry.GetHashCode();
      hash ^= (int) compressedGeometryCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GeometryType != global::EsriPBuffer.EsriTypes.Types.GeometryType.EsriGeometryTypePoint) {
        output.WriteRawTag(8);
        output.WriteEnum((int) GeometryType);
      }
      if (compressedGeometryCase_ == CompressedGeometryOneofCase.Geometry) {
        output.WriteRawTag(18);
        output.WriteMessage(Geometry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GeometryType != global::EsriPBuffer.EsriTypes.Types.GeometryType.EsriGeometryTypePoint) {
        output.WriteRawTag(8);
        output.WriteEnum((int) GeometryType);
      }
      if (compressedGeometryCase_ == CompressedGeometryOneofCase.Geometry) {
        output.WriteRawTag(18);
        output.WriteMessage(Geometry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GeometryType != global::EsriPBuffer.EsriTypes.Types.GeometryType.EsriGeometryTypePoint) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GeometryType);
      }
      if (compressedGeometryCase_ == CompressedGeometryOneofCase.Geometry) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Geometry);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GeometryValue other) {
      if (other == null) {
        return;
      }
      if (other.GeometryType != global::EsriPBuffer.EsriTypes.Types.GeometryType.EsriGeometryTypePoint) {
        GeometryType = other.GeometryType;
      }
      switch (other.CompressedGeometryCase) {
        case CompressedGeometryOneofCase.Geometry:
          if (Geometry == null) {
            Geometry = new global::EsriPBuffer.Graph.GeometryValue.Types.EsriDefaultGeometry();
          }
          Geometry.MergeFrom(other.Geometry);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GeometryType = (global::EsriPBuffer.EsriTypes.Types.GeometryType) input.ReadEnum();
            break;
          }
          case 18: {
            global::EsriPBuffer.Graph.GeometryValue.Types.EsriDefaultGeometry subBuilder = new global::EsriPBuffer.Graph.GeometryValue.Types.EsriDefaultGeometry();
            if (compressedGeometryCase_ == CompressedGeometryOneofCase.Geometry) {
              subBuilder.MergeFrom(Geometry);
            }
            input.ReadMessage(subBuilder);
            Geometry = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GeometryType = (global::EsriPBuffer.EsriTypes.Types.GeometryType) input.ReadEnum();
            break;
          }
          case 18: {
            global::EsriPBuffer.Graph.GeometryValue.Types.EsriDefaultGeometry subBuilder = new global::EsriPBuffer.Graph.GeometryValue.Types.EsriDefaultGeometry();
            if (compressedGeometryCase_ == CompressedGeometryOneofCase.Geometry) {
              subBuilder.MergeFrom(Geometry);
            }
            input.ReadMessage(subBuilder);
            Geometry = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the GeometryValue message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class EsriDefaultGeometry : pb::IMessage<EsriDefaultGeometry>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<EsriDefaultGeometry> _parser = new pb::MessageParser<EsriDefaultGeometry>(() => new EsriDefaultGeometry());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EsriDefaultGeometry> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::EsriPBuffer.Graph.GeometryValue.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EsriDefaultGeometry() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EsriDefaultGeometry(EsriDefaultGeometry other) : this() {
          hasZ_ = other.hasZ_;
          hasM_ = other.hasM_;
          lengths_ = other.lengths_.Clone();
          coords_ = other.coords_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EsriDefaultGeometry Clone() {
          return new EsriDefaultGeometry(this);
        }

        /// <summary>Field number for the "hasZ" field.</summary>
        public const int HasZFieldNumber = 1;
        private bool hasZ_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasZ {
          get { return hasZ_; }
          set {
            hasZ_ = value;
          }
        }

        /// <summary>Field number for the "hasM" field.</summary>
        public const int HasMFieldNumber = 2;
        private bool hasM_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasM {
          get { return hasM_; }
          set {
            hasM_ = value;
          }
        }

        /// <summary>Field number for the "lengths" field.</summary>
        public const int LengthsFieldNumber = 3;
        private static readonly pb::FieldCodec<uint> _repeated_lengths_codec
            = pb::FieldCodec.ForUInt32(26);
        private readonly pbc::RepeatedField<uint> lengths_ = new pbc::RepeatedField<uint>();
        /// <summary>
        /// coordinate structure in lengths
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<uint> Lengths {
          get { return lengths_; }
        }

        /// <summary>Field number for the "coords" field.</summary>
        public const int CoordsFieldNumber = 4;
        private static readonly pb::FieldCodec<long> _repeated_coords_codec
            = pb::FieldCodec.ForSInt64(34);
        private readonly pbc::RepeatedField<long> coords_ = new pbc::RepeatedField<long>();
        /// <summary>
        /// delta-encoded integer values
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<long> Coords {
          get { return coords_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as EsriDefaultGeometry);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EsriDefaultGeometry other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (HasZ != other.HasZ) return false;
          if (HasM != other.HasM) return false;
          if(!lengths_.Equals(other.lengths_)) return false;
          if(!coords_.Equals(other.coords_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasZ != false) hash ^= HasZ.GetHashCode();
          if (HasM != false) hash ^= HasM.GetHashCode();
          hash ^= lengths_.GetHashCode();
          hash ^= coords_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasZ != false) {
            output.WriteRawTag(8);
            output.WriteBool(HasZ);
          }
          if (HasM != false) {
            output.WriteRawTag(16);
            output.WriteBool(HasM);
          }
          lengths_.WriteTo(output, _repeated_lengths_codec);
          coords_.WriteTo(output, _repeated_coords_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasZ != false) {
            output.WriteRawTag(8);
            output.WriteBool(HasZ);
          }
          if (HasM != false) {
            output.WriteRawTag(16);
            output.WriteBool(HasM);
          }
          lengths_.WriteTo(ref output, _repeated_lengths_codec);
          coords_.WriteTo(ref output, _repeated_coords_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasZ != false) {
            size += 1 + 1;
          }
          if (HasM != false) {
            size += 1 + 1;
          }
          size += lengths_.CalculateSize(_repeated_lengths_codec);
          size += coords_.CalculateSize(_repeated_coords_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EsriDefaultGeometry other) {
          if (other == null) {
            return;
          }
          if (other.HasZ != false) {
            HasZ = other.HasZ;
          }
          if (other.HasM != false) {
            HasM = other.HasM;
          }
          lengths_.Add(other.lengths_);
          coords_.Add(other.coords_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                HasZ = input.ReadBool();
                break;
              }
              case 16: {
                HasM = input.ReadBool();
                break;
              }
              case 26:
              case 24: {
                lengths_.AddEntriesFrom(input, _repeated_lengths_codec);
                break;
              }
              case 34:
              case 32: {
                coords_.AddEntriesFrom(input, _repeated_coords_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                HasZ = input.ReadBool();
                break;
              }
              case 16: {
                HasM = input.ReadBool();
                break;
              }
              case 26:
              case 24: {
                lengths_.AddEntriesFrom(ref input, _repeated_lengths_codec);
                break;
              }
              case 34:
              case 32: {
                coords_.AddEntriesFrom(ref input, _repeated_coords_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class QuantizationParameters : pb::IMessage<QuantizationParameters>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QuantizationParameters> _parser = new pb::MessageParser<QuantizationParameters>(() => new QuantizationParameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QuantizationParameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EsriPBuffer.Graph.EsriGraphTypesReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuantizationParameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuantizationParameters(QuantizationParameters other) : this() {
      extent_ = other.extent_ != null ? other.extent_.Clone() : null;
      mode_ = other.mode_;
      tolerance_ = other.tolerance_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuantizationParameters Clone() {
      return new QuantizationParameters(this);
    }

    /// <summary>Field number for the "extent" field.</summary>
    public const int ExtentFieldNumber = 1;
    private global::EsriPBuffer.EsriTypes.Types.Envelope extent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.EsriTypes.Types.Envelope Extent {
      get { return extent_; }
      set {
        extent_ = value;
      }
    }

    /// <summary>Field number for the "mode" field.</summary>
    public const int ModeFieldNumber = 2;
    private global::EsriPBuffer.Graph.QuantizationParameters.Types.QuantizeMode mode_ = global::EsriPBuffer.Graph.QuantizationParameters.Types.QuantizeMode.View;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.Graph.QuantizationParameters.Types.QuantizeMode Mode {
      get { return mode_; }
      set {
        mode_ = value;
      }
    }

    /// <summary>Field number for the "tolerance" field.</summary>
    public const int ToleranceFieldNumber = 3;
    private double tolerance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Tolerance {
      get { return tolerance_; }
      set {
        tolerance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QuantizationParameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QuantizationParameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Extent, other.Extent)) return false;
      if (Mode != other.Mode) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Tolerance, other.Tolerance)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (extent_ != null) hash ^= Extent.GetHashCode();
      if (Mode != global::EsriPBuffer.Graph.QuantizationParameters.Types.QuantizeMode.View) hash ^= Mode.GetHashCode();
      if (Tolerance != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Tolerance);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (extent_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Extent);
      }
      if (Mode != global::EsriPBuffer.Graph.QuantizationParameters.Types.QuantizeMode.View) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Mode);
      }
      if (Tolerance != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Tolerance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (extent_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Extent);
      }
      if (Mode != global::EsriPBuffer.Graph.QuantizationParameters.Types.QuantizeMode.View) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Mode);
      }
      if (Tolerance != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Tolerance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (extent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Extent);
      }
      if (Mode != global::EsriPBuffer.Graph.QuantizationParameters.Types.QuantizeMode.View) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Mode);
      }
      if (Tolerance != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QuantizationParameters other) {
      if (other == null) {
        return;
      }
      if (other.extent_ != null) {
        if (extent_ == null) {
          Extent = new global::EsriPBuffer.EsriTypes.Types.Envelope();
        }
        Extent.MergeFrom(other.Extent);
      }
      if (other.Mode != global::EsriPBuffer.Graph.QuantizationParameters.Types.QuantizeMode.View) {
        Mode = other.Mode;
      }
      if (other.Tolerance != 0D) {
        Tolerance = other.Tolerance;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (extent_ == null) {
              Extent = new global::EsriPBuffer.EsriTypes.Types.Envelope();
            }
            input.ReadMessage(Extent);
            break;
          }
          case 16: {
            Mode = (global::EsriPBuffer.Graph.QuantizationParameters.Types.QuantizeMode) input.ReadEnum();
            break;
          }
          case 25: {
            Tolerance = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (extent_ == null) {
              Extent = new global::EsriPBuffer.EsriTypes.Types.Envelope();
            }
            input.ReadMessage(Extent);
            break;
          }
          case 16: {
            Mode = (global::EsriPBuffer.Graph.QuantizationParameters.Types.QuantizeMode) input.ReadEnum();
            break;
          }
          case 25: {
            Tolerance = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the QuantizationParameters message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum QuantizeMode {
        [pbr::OriginalName("view")] View = 0,
        [pbr::OriginalName("edit")] Edit = 1,
      }

    }
    #endregion

  }

  public sealed partial class Transform : pb::IMessage<Transform>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Transform> _parser = new pb::MessageParser<Transform>(() => new Transform());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Transform> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EsriPBuffer.Graph.EsriGraphTypesReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transform() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transform(Transform other) : this() {
      scale_ = other.scale_ != null ? other.scale_.Clone() : null;
      translate_ = other.translate_ != null ? other.translate_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transform Clone() {
      return new Transform(this);
    }

    /// <summary>Field number for the "scale" field.</summary>
    public const int ScaleFieldNumber = 1;
    private global::EsriPBuffer.EsriTypes.Types.Scale scale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.EsriTypes.Types.Scale Scale {
      get { return scale_; }
      set {
        scale_ = value;
      }
    }

    /// <summary>Field number for the "translate" field.</summary>
    public const int TranslateFieldNumber = 2;
    private global::EsriPBuffer.EsriTypes.Types.Translate translate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.EsriTypes.Types.Translate Translate {
      get { return translate_; }
      set {
        translate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Transform);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Transform other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Scale, other.Scale)) return false;
      if (!object.Equals(Translate, other.Translate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (scale_ != null) hash ^= Scale.GetHashCode();
      if (translate_ != null) hash ^= Translate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (scale_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Scale);
      }
      if (translate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Translate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (scale_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Scale);
      }
      if (translate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Translate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (scale_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scale);
      }
      if (translate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Translate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Transform other) {
      if (other == null) {
        return;
      }
      if (other.scale_ != null) {
        if (scale_ == null) {
          Scale = new global::EsriPBuffer.EsriTypes.Types.Scale();
        }
        Scale.MergeFrom(other.Scale);
      }
      if (other.translate_ != null) {
        if (translate_ == null) {
          Translate = new global::EsriPBuffer.EsriTypes.Types.Translate();
        }
        Translate.MergeFrom(other.Translate);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (scale_ == null) {
              Scale = new global::EsriPBuffer.EsriTypes.Types.Scale();
            }
            input.ReadMessage(Scale);
            break;
          }
          case 18: {
            if (translate_ == null) {
              Translate = new global::EsriPBuffer.EsriTypes.Types.Translate();
            }
            input.ReadMessage(Translate);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (scale_ == null) {
              Scale = new global::EsriPBuffer.EsriTypes.Types.Scale();
            }
            input.ReadMessage(Scale);
            break;
          }
          case 18: {
            if (translate_ == null) {
              Translate = new global::EsriPBuffer.EsriTypes.Types.Translate();
            }
            input.ReadMessage(Translate);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GeometryArray : pb::IMessage<GeometryArray>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GeometryArray> _parser = new pb::MessageParser<GeometryArray>(() => new GeometryArray());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GeometryArray> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EsriPBuffer.Graph.EsriGraphTypesReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GeometryArray() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GeometryArray(GeometryArray other) : this() {
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GeometryArray Clone() {
      return new GeometryArray(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<global::EsriPBuffer.Graph.GeometryValue> _repeated_value_codec
        = pb::FieldCodec.ForMessage(10, global::EsriPBuffer.Graph.GeometryValue.Parser);
    private readonly pbc::RepeatedField<global::EsriPBuffer.Graph.GeometryValue> value_ = new pbc::RepeatedField<global::EsriPBuffer.Graph.GeometryValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::EsriPBuffer.Graph.GeometryValue> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GeometryArray);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GeometryArray other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      value_.WriteTo(ref output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GeometryArray other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            value_.AddEntriesFrom(ref input, _repeated_value_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PrimitiveValue : pb::IMessage<PrimitiveValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PrimitiveValue> _parser = new pb::MessageParser<PrimitiveValue>(() => new PrimitiveValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PrimitiveValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EsriPBuffer.Graph.EsriGraphTypesReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrimitiveValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrimitiveValue(PrimitiveValue other) : this() {
      switch (other.ValueTypeCase) {
        case ValueTypeOneofCase.StringValue:
          StringValue = other.StringValue;
          break;
        case ValueTypeOneofCase.FloatValue:
          FloatValue = other.FloatValue;
          break;
        case ValueTypeOneofCase.FloatCompressedAsInt32:
          FloatCompressedAsInt32 = other.FloatCompressedAsInt32;
          break;
        case ValueTypeOneofCase.DoubleValue:
          DoubleValue = other.DoubleValue;
          break;
        case ValueTypeOneofCase.DoubleCompressedAsFloat:
          DoubleCompressedAsFloat = other.DoubleCompressedAsFloat;
          break;
        case ValueTypeOneofCase.DoubleCompressedAsInt64:
          DoubleCompressedAsInt64 = other.DoubleCompressedAsInt64;
          break;
        case ValueTypeOneofCase.Sint64Value:
          Sint64Value = other.Sint64Value;
          break;
        case ValueTypeOneofCase.BoolValue:
          BoolValue = other.BoolValue;
          break;
        case ValueTypeOneofCase.UuidValue:
          UuidValue = other.UuidValue;
          break;
        case ValueTypeOneofCase.GeometryValue:
          GeometryValue = other.GeometryValue.Clone();
          break;
        case ValueTypeOneofCase.NullTag:
          NullTag = other.NullTag;
          break;
        case ValueTypeOneofCase.DatetimeValue:
          DatetimeValue = other.DatetimeValue;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrimitiveValue Clone() {
      return new PrimitiveValue(this);
    }

    /// <summary>Field number for the "string_value" field.</summary>
    public const int StringValueFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StringValue {
      get { return valueTypeCase_ == ValueTypeOneofCase.StringValue ? (string) valueType_ : ""; }
      set {
        valueType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        valueTypeCase_ = ValueTypeOneofCase.StringValue;
      }
    }

    /// <summary>Field number for the "float_value" field.</summary>
    public const int FloatValueFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float FloatValue {
      get { return valueTypeCase_ == ValueTypeOneofCase.FloatValue ? (float) valueType_ : 0F; }
      set {
        valueType_ = value;
        valueTypeCase_ = ValueTypeOneofCase.FloatValue;
      }
    }

    /// <summary>Field number for the "float_compressed_as_int32" field.</summary>
    public const int FloatCompressedAsInt32FieldNumber = 3;
    /// <summary>
    /// Only use when `float((int32_t)val) == val &amp;&amp; -1048576 &lt;= val &lt;= 1048575`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FloatCompressedAsInt32 {
      get { return valueTypeCase_ == ValueTypeOneofCase.FloatCompressedAsInt32 ? (int) valueType_ : 0; }
      set {
        valueType_ = value;
        valueTypeCase_ = ValueTypeOneofCase.FloatCompressedAsInt32;
      }
    }

    /// <summary>Field number for the "double_value" field.</summary>
    public const int DoubleValueFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double DoubleValue {
      get { return valueTypeCase_ == ValueTypeOneofCase.DoubleValue ? (double) valueType_ : 0D; }
      set {
        valueType_ = value;
        valueTypeCase_ = ValueTypeOneofCase.DoubleValue;
      }
    }

    /// <summary>Field number for the "double_compressed_as_float" field.</summary>
    public const int DoubleCompressedAsFloatFieldNumber = 5;
    /// <summary>
    /// Only use when `double((float)val) == val`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float DoubleCompressedAsFloat {
      get { return valueTypeCase_ == ValueTypeOneofCase.DoubleCompressedAsFloat ? (float) valueType_ : 0F; }
      set {
        valueType_ = value;
        valueTypeCase_ = ValueTypeOneofCase.DoubleCompressedAsFloat;
      }
    }

    /// <summary>Field number for the "double_compressed_as_int64" field.</summary>
    public const int DoubleCompressedAsInt64FieldNumber = 6;
    /// <summary>
    /// If `double_value` can be compressed as float and int, only compress as int when `-1048576 &lt;= val &lt;= 1048575`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DoubleCompressedAsInt64 {
      get { return valueTypeCase_ == ValueTypeOneofCase.DoubleCompressedAsInt64 ? (long) valueType_ : 0L; }
      set {
        valueType_ = value;
        valueTypeCase_ = ValueTypeOneofCase.DoubleCompressedAsInt64;
      }
    }

    /// <summary>Field number for the "sint64_value" field.</summary>
    public const int Sint64ValueFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Sint64Value {
      get { return valueTypeCase_ == ValueTypeOneofCase.Sint64Value ? (long) valueType_ : 0L; }
      set {
        valueType_ = value;
        valueTypeCase_ = ValueTypeOneofCase.Sint64Value;
      }
    }

    /// <summary>Field number for the "bool_value" field.</summary>
    public const int BoolValueFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool BoolValue {
      get { return valueTypeCase_ == ValueTypeOneofCase.BoolValue ? (bool) valueType_ : false; }
      set {
        valueType_ = value;
        valueTypeCase_ = ValueTypeOneofCase.BoolValue;
      }
    }

    /// <summary>Field number for the "uuid_value" field.</summary>
    public const int UuidValueFieldNumber = 9;
    /// <summary>
    /// 16-byte RFC4122 UUID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString UuidValue {
      get { return valueTypeCase_ == ValueTypeOneofCase.UuidValue ? (pb::ByteString) valueType_ : pb::ByteString.Empty; }
      set {
        valueType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        valueTypeCase_ = ValueTypeOneofCase.UuidValue;
      }
    }

    /// <summary>Field number for the "geometry_value" field.</summary>
    public const int GeometryValueFieldNumber = 11;
    /// <summary>
    /// code 10 is reserved
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.Graph.GeometryValue GeometryValue {
      get { return valueTypeCase_ == ValueTypeOneofCase.GeometryValue ? (global::EsriPBuffer.Graph.GeometryValue) valueType_ : null; }
      set {
        valueType_ = value;
        valueTypeCase_ = value == null ? ValueTypeOneofCase.None : ValueTypeOneofCase.GeometryValue;
      }
    }

    /// <summary>Field number for the "null_tag" field.</summary>
    public const int NullTagFieldNumber = 12;
    /// <summary>
    /// more types
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NullTag {
      get { return valueTypeCase_ == ValueTypeOneofCase.NullTag ? (bool) valueType_ : false; }
      set {
        valueType_ = value;
        valueTypeCase_ = ValueTypeOneofCase.NullTag;
      }
    }

    /// <summary>Field number for the "datetime_value" field.</summary>
    public const int DatetimeValueFieldNumber = 13;
    /// <summary>
    /// UTC UNIX timestamp in milliseconds.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DatetimeValue {
      get { return valueTypeCase_ == ValueTypeOneofCase.DatetimeValue ? (long) valueType_ : 0L; }
      set {
        valueType_ = value;
        valueTypeCase_ = ValueTypeOneofCase.DatetimeValue;
      }
    }

    private object valueType_;
    /// <summary>Enum of possible cases for the "value_type" oneof.</summary>
    public enum ValueTypeOneofCase {
      None = 0,
      StringValue = 1,
      FloatValue = 2,
      FloatCompressedAsInt32 = 3,
      DoubleValue = 4,
      DoubleCompressedAsFloat = 5,
      DoubleCompressedAsInt64 = 6,
      Sint64Value = 7,
      BoolValue = 8,
      UuidValue = 9,
      GeometryValue = 11,
      NullTag = 12,
      DatetimeValue = 13,
    }
    private ValueTypeOneofCase valueTypeCase_ = ValueTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValueTypeOneofCase ValueTypeCase {
      get { return valueTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearValueType() {
      valueTypeCase_ = ValueTypeOneofCase.None;
      valueType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PrimitiveValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PrimitiveValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StringValue != other.StringValue) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FloatValue, other.FloatValue)) return false;
      if (FloatCompressedAsInt32 != other.FloatCompressedAsInt32) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DoubleValue, other.DoubleValue)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DoubleCompressedAsFloat, other.DoubleCompressedAsFloat)) return false;
      if (DoubleCompressedAsInt64 != other.DoubleCompressedAsInt64) return false;
      if (Sint64Value != other.Sint64Value) return false;
      if (BoolValue != other.BoolValue) return false;
      if (UuidValue != other.UuidValue) return false;
      if (!object.Equals(GeometryValue, other.GeometryValue)) return false;
      if (NullTag != other.NullTag) return false;
      if (DatetimeValue != other.DatetimeValue) return false;
      if (ValueTypeCase != other.ValueTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (valueTypeCase_ == ValueTypeOneofCase.StringValue) hash ^= StringValue.GetHashCode();
      if (valueTypeCase_ == ValueTypeOneofCase.FloatValue) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FloatValue);
      if (valueTypeCase_ == ValueTypeOneofCase.FloatCompressedAsInt32) hash ^= FloatCompressedAsInt32.GetHashCode();
      if (valueTypeCase_ == ValueTypeOneofCase.DoubleValue) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DoubleValue);
      if (valueTypeCase_ == ValueTypeOneofCase.DoubleCompressedAsFloat) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DoubleCompressedAsFloat);
      if (valueTypeCase_ == ValueTypeOneofCase.DoubleCompressedAsInt64) hash ^= DoubleCompressedAsInt64.GetHashCode();
      if (valueTypeCase_ == ValueTypeOneofCase.Sint64Value) hash ^= Sint64Value.GetHashCode();
      if (valueTypeCase_ == ValueTypeOneofCase.BoolValue) hash ^= BoolValue.GetHashCode();
      if (valueTypeCase_ == ValueTypeOneofCase.UuidValue) hash ^= UuidValue.GetHashCode();
      if (valueTypeCase_ == ValueTypeOneofCase.GeometryValue) hash ^= GeometryValue.GetHashCode();
      if (valueTypeCase_ == ValueTypeOneofCase.NullTag) hash ^= NullTag.GetHashCode();
      if (valueTypeCase_ == ValueTypeOneofCase.DatetimeValue) hash ^= DatetimeValue.GetHashCode();
      hash ^= (int) valueTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (valueTypeCase_ == ValueTypeOneofCase.StringValue) {
        output.WriteRawTag(10);
        output.WriteString(StringValue);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.FloatValue) {
        output.WriteRawTag(21);
        output.WriteFloat(FloatValue);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.FloatCompressedAsInt32) {
        output.WriteRawTag(24);
        output.WriteSInt32(FloatCompressedAsInt32);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.DoubleValue) {
        output.WriteRawTag(33);
        output.WriteDouble(DoubleValue);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.DoubleCompressedAsFloat) {
        output.WriteRawTag(45);
        output.WriteFloat(DoubleCompressedAsFloat);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.DoubleCompressedAsInt64) {
        output.WriteRawTag(48);
        output.WriteSInt64(DoubleCompressedAsInt64);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.Sint64Value) {
        output.WriteRawTag(56);
        output.WriteSInt64(Sint64Value);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.BoolValue) {
        output.WriteRawTag(64);
        output.WriteBool(BoolValue);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.UuidValue) {
        output.WriteRawTag(74);
        output.WriteBytes(UuidValue);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.GeometryValue) {
        output.WriteRawTag(90);
        output.WriteMessage(GeometryValue);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.NullTag) {
        output.WriteRawTag(96);
        output.WriteBool(NullTag);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.DatetimeValue) {
        output.WriteRawTag(104);
        output.WriteInt64(DatetimeValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (valueTypeCase_ == ValueTypeOneofCase.StringValue) {
        output.WriteRawTag(10);
        output.WriteString(StringValue);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.FloatValue) {
        output.WriteRawTag(21);
        output.WriteFloat(FloatValue);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.FloatCompressedAsInt32) {
        output.WriteRawTag(24);
        output.WriteSInt32(FloatCompressedAsInt32);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.DoubleValue) {
        output.WriteRawTag(33);
        output.WriteDouble(DoubleValue);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.DoubleCompressedAsFloat) {
        output.WriteRawTag(45);
        output.WriteFloat(DoubleCompressedAsFloat);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.DoubleCompressedAsInt64) {
        output.WriteRawTag(48);
        output.WriteSInt64(DoubleCompressedAsInt64);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.Sint64Value) {
        output.WriteRawTag(56);
        output.WriteSInt64(Sint64Value);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.BoolValue) {
        output.WriteRawTag(64);
        output.WriteBool(BoolValue);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.UuidValue) {
        output.WriteRawTag(74);
        output.WriteBytes(UuidValue);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.GeometryValue) {
        output.WriteRawTag(90);
        output.WriteMessage(GeometryValue);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.NullTag) {
        output.WriteRawTag(96);
        output.WriteBool(NullTag);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.DatetimeValue) {
        output.WriteRawTag(104);
        output.WriteInt64(DatetimeValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (valueTypeCase_ == ValueTypeOneofCase.StringValue) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StringValue);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.FloatValue) {
        size += 1 + 4;
      }
      if (valueTypeCase_ == ValueTypeOneofCase.FloatCompressedAsInt32) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(FloatCompressedAsInt32);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.DoubleValue) {
        size += 1 + 8;
      }
      if (valueTypeCase_ == ValueTypeOneofCase.DoubleCompressedAsFloat) {
        size += 1 + 4;
      }
      if (valueTypeCase_ == ValueTypeOneofCase.DoubleCompressedAsInt64) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(DoubleCompressedAsInt64);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.Sint64Value) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(Sint64Value);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.BoolValue) {
        size += 1 + 1;
      }
      if (valueTypeCase_ == ValueTypeOneofCase.UuidValue) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(UuidValue);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.GeometryValue) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GeometryValue);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.NullTag) {
        size += 1 + 1;
      }
      if (valueTypeCase_ == ValueTypeOneofCase.DatetimeValue) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DatetimeValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PrimitiveValue other) {
      if (other == null) {
        return;
      }
      switch (other.ValueTypeCase) {
        case ValueTypeOneofCase.StringValue:
          StringValue = other.StringValue;
          break;
        case ValueTypeOneofCase.FloatValue:
          FloatValue = other.FloatValue;
          break;
        case ValueTypeOneofCase.FloatCompressedAsInt32:
          FloatCompressedAsInt32 = other.FloatCompressedAsInt32;
          break;
        case ValueTypeOneofCase.DoubleValue:
          DoubleValue = other.DoubleValue;
          break;
        case ValueTypeOneofCase.DoubleCompressedAsFloat:
          DoubleCompressedAsFloat = other.DoubleCompressedAsFloat;
          break;
        case ValueTypeOneofCase.DoubleCompressedAsInt64:
          DoubleCompressedAsInt64 = other.DoubleCompressedAsInt64;
          break;
        case ValueTypeOneofCase.Sint64Value:
          Sint64Value = other.Sint64Value;
          break;
        case ValueTypeOneofCase.BoolValue:
          BoolValue = other.BoolValue;
          break;
        case ValueTypeOneofCase.UuidValue:
          UuidValue = other.UuidValue;
          break;
        case ValueTypeOneofCase.GeometryValue:
          if (GeometryValue == null) {
            GeometryValue = new global::EsriPBuffer.Graph.GeometryValue();
          }
          GeometryValue.MergeFrom(other.GeometryValue);
          break;
        case ValueTypeOneofCase.NullTag:
          NullTag = other.NullTag;
          break;
        case ValueTypeOneofCase.DatetimeValue:
          DatetimeValue = other.DatetimeValue;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            StringValue = input.ReadString();
            break;
          }
          case 21: {
            FloatValue = input.ReadFloat();
            break;
          }
          case 24: {
            FloatCompressedAsInt32 = input.ReadSInt32();
            break;
          }
          case 33: {
            DoubleValue = input.ReadDouble();
            break;
          }
          case 45: {
            DoubleCompressedAsFloat = input.ReadFloat();
            break;
          }
          case 48: {
            DoubleCompressedAsInt64 = input.ReadSInt64();
            break;
          }
          case 56: {
            Sint64Value = input.ReadSInt64();
            break;
          }
          case 64: {
            BoolValue = input.ReadBool();
            break;
          }
          case 74: {
            UuidValue = input.ReadBytes();
            break;
          }
          case 90: {
            global::EsriPBuffer.Graph.GeometryValue subBuilder = new global::EsriPBuffer.Graph.GeometryValue();
            if (valueTypeCase_ == ValueTypeOneofCase.GeometryValue) {
              subBuilder.MergeFrom(GeometryValue);
            }
            input.ReadMessage(subBuilder);
            GeometryValue = subBuilder;
            break;
          }
          case 96: {
            NullTag = input.ReadBool();
            break;
          }
          case 104: {
            DatetimeValue = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            StringValue = input.ReadString();
            break;
          }
          case 21: {
            FloatValue = input.ReadFloat();
            break;
          }
          case 24: {
            FloatCompressedAsInt32 = input.ReadSInt32();
            break;
          }
          case 33: {
            DoubleValue = input.ReadDouble();
            break;
          }
          case 45: {
            DoubleCompressedAsFloat = input.ReadFloat();
            break;
          }
          case 48: {
            DoubleCompressedAsInt64 = input.ReadSInt64();
            break;
          }
          case 56: {
            Sint64Value = input.ReadSInt64();
            break;
          }
          case 64: {
            BoolValue = input.ReadBool();
            break;
          }
          case 74: {
            UuidValue = input.ReadBytes();
            break;
          }
          case 90: {
            global::EsriPBuffer.Graph.GeometryValue subBuilder = new global::EsriPBuffer.Graph.GeometryValue();
            if (valueTypeCase_ == ValueTypeOneofCase.GeometryValue) {
              subBuilder.MergeFrom(GeometryValue);
            }
            input.ReadMessage(subBuilder);
            GeometryValue = subBuilder;
            break;
          }
          case 96: {
            NullTag = input.ReadBool();
            break;
          }
          case 104: {
            DatetimeValue = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ObjectValue : pb::IMessage<ObjectValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObjectValue> _parser = new pb::MessageParser<ObjectValue>(() => new ObjectValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjectValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EsriPBuffer.Graph.EsriGraphTypesReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectValue(ObjectValue other) : this() {
      properties_ = other.properties_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectValue Clone() {
      return new ObjectValue(this);
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 1;
    private static readonly pbc::MapField<string, global::EsriPBuffer.Graph.AnyValue>.Codec _map_properties_codec
        = new pbc::MapField<string, global::EsriPBuffer.Graph.AnyValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::EsriPBuffer.Graph.AnyValue.Parser), 10);
    private readonly pbc::MapField<string, global::EsriPBuffer.Graph.AnyValue> properties_ = new pbc::MapField<string, global::EsriPBuffer.Graph.AnyValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::EsriPBuffer.Graph.AnyValue> Properties {
      get { return properties_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjectValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjectValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Properties.Equals(other.Properties)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Properties.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      properties_.WriteTo(output, _map_properties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      properties_.WriteTo(ref output, _map_properties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += properties_.CalculateSize(_map_properties_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjectValue other) {
      if (other == null) {
        return;
      }
      properties_.Add(other.properties_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            properties_.AddEntriesFrom(input, _map_properties_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            properties_.AddEntriesFrom(ref input, _map_properties_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EntityValue : pb::IMessage<EntityValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntityValue> _parser = new pb::MessageParser<EntityValue>(() => new EntityValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EntityValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EsriPBuffer.Graph.EsriGraphTypesReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityValue(EntityValue other) : this() {
      label_ = other.label_;
      properties_ = other.properties_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityValue Clone() {
      return new EntityValue(this);
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 1;
    private string label_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Label {
      get { return label_; }
      set {
        label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 2;
    private static readonly pbc::MapField<string, global::EsriPBuffer.Graph.AnyValue>.Codec _map_properties_codec
        = new pbc::MapField<string, global::EsriPBuffer.Graph.AnyValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::EsriPBuffer.Graph.AnyValue.Parser), 18);
    private readonly pbc::MapField<string, global::EsriPBuffer.Graph.AnyValue> properties_ = new pbc::MapField<string, global::EsriPBuffer.Graph.AnyValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::EsriPBuffer.Graph.AnyValue> Properties {
      get { return properties_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EntityValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EntityValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Label != other.Label) return false;
      if (!Properties.Equals(other.Properties)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Label.Length != 0) hash ^= Label.GetHashCode();
      hash ^= Properties.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Label.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Label);
      }
      properties_.WriteTo(output, _map_properties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Label.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Label);
      }
      properties_.WriteTo(ref output, _map_properties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Label.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
      }
      size += properties_.CalculateSize(_map_properties_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EntityValue other) {
      if (other == null) {
        return;
      }
      if (other.Label.Length != 0) {
        Label = other.Label;
      }
      properties_.Add(other.properties_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Label = input.ReadString();
            break;
          }
          case 18: {
            properties_.AddEntriesFrom(input, _map_properties_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Label = input.ReadString();
            break;
          }
          case 18: {
            properties_.AddEntriesFrom(ref input, _map_properties_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RelationshipValue : pb::IMessage<RelationshipValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RelationshipValue> _parser = new pb::MessageParser<RelationshipValue>(() => new RelationshipValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RelationshipValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EsriPBuffer.Graph.EsriGraphTypesReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelationshipValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelationshipValue(RelationshipValue other) : this() {
      type_ = other.type_;
      properties_ = other.properties_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelationshipValue Clone() {
      return new RelationshipValue(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 2;
    private static readonly pbc::MapField<string, global::EsriPBuffer.Graph.AnyValue>.Codec _map_properties_codec
        = new pbc::MapField<string, global::EsriPBuffer.Graph.AnyValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::EsriPBuffer.Graph.AnyValue.Parser), 18);
    private readonly pbc::MapField<string, global::EsriPBuffer.Graph.AnyValue> properties_ = new pbc::MapField<string, global::EsriPBuffer.Graph.AnyValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::EsriPBuffer.Graph.AnyValue> Properties {
      get { return properties_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RelationshipValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RelationshipValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!Properties.Equals(other.Properties)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      hash ^= Properties.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      properties_.WriteTo(output, _map_properties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      properties_.WriteTo(ref output, _map_properties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      size += properties_.CalculateSize(_map_properties_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RelationshipValue other) {
      if (other == null) {
        return;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      properties_.Add(other.properties_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            properties_.AddEntriesFrom(input, _map_properties_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            properties_.AddEntriesFrom(ref input, _map_properties_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PathValue : pb::IMessage<PathValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PathValue> _parser = new pb::MessageParser<PathValue>(() => new PathValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PathValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EsriPBuffer.Graph.EsriGraphTypesReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PathValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PathValue(PathValue other) : this() {
      entities_ = other.entities_.Clone();
      relationships_ = other.relationships_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PathValue Clone() {
      return new PathValue(this);
    }

    /// <summary>Field number for the "entities" field.</summary>
    public const int EntitiesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::EsriPBuffer.Graph.EntityValue> _repeated_entities_codec
        = pb::FieldCodec.ForMessage(10, global::EsriPBuffer.Graph.EntityValue.Parser);
    private readonly pbc::RepeatedField<global::EsriPBuffer.Graph.EntityValue> entities_ = new pbc::RepeatedField<global::EsriPBuffer.Graph.EntityValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::EsriPBuffer.Graph.EntityValue> Entities {
      get { return entities_; }
    }

    /// <summary>Field number for the "relationships" field.</summary>
    public const int RelationshipsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::EsriPBuffer.Graph.RelationshipValue> _repeated_relationships_codec
        = pb::FieldCodec.ForMessage(18, global::EsriPBuffer.Graph.RelationshipValue.Parser);
    private readonly pbc::RepeatedField<global::EsriPBuffer.Graph.RelationshipValue> relationships_ = new pbc::RepeatedField<global::EsriPBuffer.Graph.RelationshipValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::EsriPBuffer.Graph.RelationshipValue> Relationships {
      get { return relationships_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PathValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PathValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entities_.Equals(other.entities_)) return false;
      if(!relationships_.Equals(other.relationships_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entities_.GetHashCode();
      hash ^= relationships_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      entities_.WriteTo(output, _repeated_entities_codec);
      relationships_.WriteTo(output, _repeated_relationships_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      entities_.WriteTo(ref output, _repeated_entities_codec);
      relationships_.WriteTo(ref output, _repeated_relationships_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entities_.CalculateSize(_repeated_entities_codec);
      size += relationships_.CalculateSize(_repeated_relationships_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PathValue other) {
      if (other == null) {
        return;
      }
      entities_.Add(other.entities_);
      relationships_.Add(other.relationships_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entities_.AddEntriesFrom(input, _repeated_entities_codec);
            break;
          }
          case 18: {
            relationships_.AddEntriesFrom(input, _repeated_relationships_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            entities_.AddEntriesFrom(ref input, _repeated_entities_codec);
            break;
          }
          case 18: {
            relationships_.AddEntriesFrom(ref input, _repeated_relationships_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ArrayValue : pb::IMessage<ArrayValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ArrayValue> _parser = new pb::MessageParser<ArrayValue>(() => new ArrayValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArrayValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EsriPBuffer.Graph.EsriGraphTypesReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArrayValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArrayValue(ArrayValue other) : this() {
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArrayValue Clone() {
      return new ArrayValue(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::EsriPBuffer.Graph.AnyValue> _repeated_values_codec
        = pb::FieldCodec.ForMessage(10, global::EsriPBuffer.Graph.AnyValue.Parser);
    private readonly pbc::RepeatedField<global::EsriPBuffer.Graph.AnyValue> values_ = new pbc::RepeatedField<global::EsriPBuffer.Graph.AnyValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::EsriPBuffer.Graph.AnyValue> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArrayValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArrayValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      values_.WriteTo(output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      values_.WriteTo(ref output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArrayValue other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            values_.AddEntriesFrom(ref input, _repeated_values_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AnyValue : pb::IMessage<AnyValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AnyValue> _parser = new pb::MessageParser<AnyValue>(() => new AnyValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnyValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EsriPBuffer.Graph.EsriGraphTypesReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnyValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnyValue(AnyValue other) : this() {
      switch (other.AnyValueTypeCase) {
        case AnyValueTypeOneofCase.PrimitiveValue:
          PrimitiveValue = other.PrimitiveValue.Clone();
          break;
        case AnyValueTypeOneofCase.ArrayValue:
          ArrayValue = other.ArrayValue.Clone();
          break;
        case AnyValueTypeOneofCase.ObjectValue:
          ObjectValue = other.ObjectValue.Clone();
          break;
        case AnyValueTypeOneofCase.EntityValue:
          EntityValue = other.EntityValue.Clone();
          break;
        case AnyValueTypeOneofCase.RelationshipValue:
          RelationshipValue = other.RelationshipValue.Clone();
          break;
        case AnyValueTypeOneofCase.PathValue:
          PathValue = other.PathValue.Clone();
          break;
        case AnyValueTypeOneofCase.FloatArray:
          FloatArray = other.FloatArray.Clone();
          break;
        case AnyValueTypeOneofCase.FloatCompressedAsInt32Array:
          FloatCompressedAsInt32Array = other.FloatCompressedAsInt32Array.Clone();
          break;
        case AnyValueTypeOneofCase.DoubleArray:
          DoubleArray = other.DoubleArray.Clone();
          break;
        case AnyValueTypeOneofCase.DoubleCompressedAsFloatArray:
          DoubleCompressedAsFloatArray = other.DoubleCompressedAsFloatArray.Clone();
          break;
        case AnyValueTypeOneofCase.DoubleCompressedAsInt64Array:
          DoubleCompressedAsInt64Array = other.DoubleCompressedAsInt64Array.Clone();
          break;
        case AnyValueTypeOneofCase.Sint64Array:
          Sint64Array = other.Sint64Array.Clone();
          break;
        case AnyValueTypeOneofCase.BoolArray:
          BoolArray = other.BoolArray.Clone();
          break;
        case AnyValueTypeOneofCase.NullArray:
          NullArray = other.NullArray.Clone();
          break;
        case AnyValueTypeOneofCase.UuidArray:
          UuidArray = other.UuidArray;
          break;
        case AnyValueTypeOneofCase.DateArray:
          DateArray = other.DateArray.Clone();
          break;
        case AnyValueTypeOneofCase.StringArray:
          StringArray = other.StringArray.Clone();
          break;
        case AnyValueTypeOneofCase.GeometryArray:
          GeometryArray = other.GeometryArray.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnyValue Clone() {
      return new AnyValue(this);
    }

    /// <summary>Field number for the "primitive_value" field.</summary>
    public const int PrimitiveValueFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.Graph.PrimitiveValue PrimitiveValue {
      get { return anyValueTypeCase_ == AnyValueTypeOneofCase.PrimitiveValue ? (global::EsriPBuffer.Graph.PrimitiveValue) anyValueType_ : null; }
      set {
        anyValueType_ = value;
        anyValueTypeCase_ = value == null ? AnyValueTypeOneofCase.None : AnyValueTypeOneofCase.PrimitiveValue;
      }
    }

    /// <summary>Field number for the "array_value" field.</summary>
    public const int ArrayValueFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.Graph.ArrayValue ArrayValue {
      get { return anyValueTypeCase_ == AnyValueTypeOneofCase.ArrayValue ? (global::EsriPBuffer.Graph.ArrayValue) anyValueType_ : null; }
      set {
        anyValueType_ = value;
        anyValueTypeCase_ = value == null ? AnyValueTypeOneofCase.None : AnyValueTypeOneofCase.ArrayValue;
      }
    }

    /// <summary>Field number for the "object_value" field.</summary>
    public const int ObjectValueFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.Graph.ObjectValue ObjectValue {
      get { return anyValueTypeCase_ == AnyValueTypeOneofCase.ObjectValue ? (global::EsriPBuffer.Graph.ObjectValue) anyValueType_ : null; }
      set {
        anyValueType_ = value;
        anyValueTypeCase_ = value == null ? AnyValueTypeOneofCase.None : AnyValueTypeOneofCase.ObjectValue;
      }
    }

    /// <summary>Field number for the "entity_value" field.</summary>
    public const int EntityValueFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.Graph.EntityValue EntityValue {
      get { return anyValueTypeCase_ == AnyValueTypeOneofCase.EntityValue ? (global::EsriPBuffer.Graph.EntityValue) anyValueType_ : null; }
      set {
        anyValueType_ = value;
        anyValueTypeCase_ = value == null ? AnyValueTypeOneofCase.None : AnyValueTypeOneofCase.EntityValue;
      }
    }

    /// <summary>Field number for the "relationship_value" field.</summary>
    public const int RelationshipValueFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.Graph.RelationshipValue RelationshipValue {
      get { return anyValueTypeCase_ == AnyValueTypeOneofCase.RelationshipValue ? (global::EsriPBuffer.Graph.RelationshipValue) anyValueType_ : null; }
      set {
        anyValueType_ = value;
        anyValueTypeCase_ = value == null ? AnyValueTypeOneofCase.None : AnyValueTypeOneofCase.RelationshipValue;
      }
    }

    /// <summary>Field number for the "path_value" field.</summary>
    public const int PathValueFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.Graph.PathValue PathValue {
      get { return anyValueTypeCase_ == AnyValueTypeOneofCase.PathValue ? (global::EsriPBuffer.Graph.PathValue) anyValueType_ : null; }
      set {
        anyValueType_ = value;
        anyValueTypeCase_ = value == null ? AnyValueTypeOneofCase.None : AnyValueTypeOneofCase.PathValue;
      }
    }

    /// <summary>Field number for the "float_array" field.</summary>
    public const int FloatArrayFieldNumber = 7;
    /// <summary>
    /// packed array types (only works for primitive numeric types)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.Graph.FloatArray FloatArray {
      get { return anyValueTypeCase_ == AnyValueTypeOneofCase.FloatArray ? (global::EsriPBuffer.Graph.FloatArray) anyValueType_ : null; }
      set {
        anyValueType_ = value;
        anyValueTypeCase_ = value == null ? AnyValueTypeOneofCase.None : AnyValueTypeOneofCase.FloatArray;
      }
    }

    /// <summary>Field number for the "float_compressed_as_int32_array" field.</summary>
    public const int FloatCompressedAsInt32ArrayFieldNumber = 8;
    /// <summary>
    /// see usage info in PrimitiveValue
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.Graph.Int32Array FloatCompressedAsInt32Array {
      get { return anyValueTypeCase_ == AnyValueTypeOneofCase.FloatCompressedAsInt32Array ? (global::EsriPBuffer.Graph.Int32Array) anyValueType_ : null; }
      set {
        anyValueType_ = value;
        anyValueTypeCase_ = value == null ? AnyValueTypeOneofCase.None : AnyValueTypeOneofCase.FloatCompressedAsInt32Array;
      }
    }

    /// <summary>Field number for the "double_array" field.</summary>
    public const int DoubleArrayFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.Graph.DoubleArray DoubleArray {
      get { return anyValueTypeCase_ == AnyValueTypeOneofCase.DoubleArray ? (global::EsriPBuffer.Graph.DoubleArray) anyValueType_ : null; }
      set {
        anyValueType_ = value;
        anyValueTypeCase_ = value == null ? AnyValueTypeOneofCase.None : AnyValueTypeOneofCase.DoubleArray;
      }
    }

    /// <summary>Field number for the "double_compressed_as_float_array" field.</summary>
    public const int DoubleCompressedAsFloatArrayFieldNumber = 10;
    /// <summary>
    /// see usage info in PrimitiveValue
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.Graph.FloatArray DoubleCompressedAsFloatArray {
      get { return anyValueTypeCase_ == AnyValueTypeOneofCase.DoubleCompressedAsFloatArray ? (global::EsriPBuffer.Graph.FloatArray) anyValueType_ : null; }
      set {
        anyValueType_ = value;
        anyValueTypeCase_ = value == null ? AnyValueTypeOneofCase.None : AnyValueTypeOneofCase.DoubleCompressedAsFloatArray;
      }
    }

    /// <summary>Field number for the "double_compressed_as_int64_array" field.</summary>
    public const int DoubleCompressedAsInt64ArrayFieldNumber = 11;
    /// <summary>
    /// see usage info in PrimitiveValue
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.Graph.Int64Array DoubleCompressedAsInt64Array {
      get { return anyValueTypeCase_ == AnyValueTypeOneofCase.DoubleCompressedAsInt64Array ? (global::EsriPBuffer.Graph.Int64Array) anyValueType_ : null; }
      set {
        anyValueType_ = value;
        anyValueTypeCase_ = value == null ? AnyValueTypeOneofCase.None : AnyValueTypeOneofCase.DoubleCompressedAsInt64Array;
      }
    }

    /// <summary>Field number for the "sint64_array" field.</summary>
    public const int Sint64ArrayFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.Graph.Int64Array Sint64Array {
      get { return anyValueTypeCase_ == AnyValueTypeOneofCase.Sint64Array ? (global::EsriPBuffer.Graph.Int64Array) anyValueType_ : null; }
      set {
        anyValueType_ = value;
        anyValueTypeCase_ = value == null ? AnyValueTypeOneofCase.None : AnyValueTypeOneofCase.Sint64Array;
      }
    }

    /// <summary>Field number for the "bool_array" field.</summary>
    public const int BoolArrayFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.Graph.BoolArray BoolArray {
      get { return anyValueTypeCase_ == AnyValueTypeOneofCase.BoolArray ? (global::EsriPBuffer.Graph.BoolArray) anyValueType_ : null; }
      set {
        anyValueType_ = value;
        anyValueTypeCase_ = value == null ? AnyValueTypeOneofCase.None : AnyValueTypeOneofCase.BoolArray;
      }
    }

    /// <summary>Field number for the "null_array" field.</summary>
    public const int NullArrayFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.Graph.NullArray NullArray {
      get { return anyValueTypeCase_ == AnyValueTypeOneofCase.NullArray ? (global::EsriPBuffer.Graph.NullArray) anyValueType_ : null; }
      set {
        anyValueType_ = value;
        anyValueTypeCase_ = value == null ? AnyValueTypeOneofCase.None : AnyValueTypeOneofCase.NullArray;
      }
    }

    /// <summary>Field number for the "uuid_array" field.</summary>
    public const int UuidArrayFieldNumber = 15;
    /// <summary>
    /// `uuid_array` is a concatenation of 1..N RFC4122 UUIDs. Size must be multiple of 16.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString UuidArray {
      get { return anyValueTypeCase_ == AnyValueTypeOneofCase.UuidArray ? (pb::ByteString) anyValueType_ : pb::ByteString.Empty; }
      set {
        anyValueType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        anyValueTypeCase_ = AnyValueTypeOneofCase.UuidArray;
      }
    }

    /// <summary>Field number for the "date_array" field.</summary>
    public const int DateArrayFieldNumber = 19;
    /// <summary>
    /// UTC UNIX timestamp in milliseconds.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.Graph.DateTimeArray DateArray {
      get { return anyValueTypeCase_ == AnyValueTypeOneofCase.DateArray ? (global::EsriPBuffer.Graph.DateTimeArray) anyValueType_ : null; }
      set {
        anyValueType_ = value;
        anyValueTypeCase_ = value == null ? AnyValueTypeOneofCase.None : AnyValueTypeOneofCase.DateArray;
      }
    }

    /// <summary>Field number for the "string_array" field.</summary>
    public const int StringArrayFieldNumber = 16;
    /// <summary>
    /// unpacked array types
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.Graph.StringArray StringArray {
      get { return anyValueTypeCase_ == AnyValueTypeOneofCase.StringArray ? (global::EsriPBuffer.Graph.StringArray) anyValueType_ : null; }
      set {
        anyValueType_ = value;
        anyValueTypeCase_ = value == null ? AnyValueTypeOneofCase.None : AnyValueTypeOneofCase.StringArray;
      }
    }

    /// <summary>Field number for the "geometry_array" field.</summary>
    public const int GeometryArrayFieldNumber = 18;
    /// <summary>
    /// code 17 is reserved
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.Graph.GeometryArray GeometryArray {
      get { return anyValueTypeCase_ == AnyValueTypeOneofCase.GeometryArray ? (global::EsriPBuffer.Graph.GeometryArray) anyValueType_ : null; }
      set {
        anyValueType_ = value;
        anyValueTypeCase_ = value == null ? AnyValueTypeOneofCase.None : AnyValueTypeOneofCase.GeometryArray;
      }
    }

    private object anyValueType_;
    /// <summary>Enum of possible cases for the "any_value_type" oneof.</summary>
    public enum AnyValueTypeOneofCase {
      None = 0,
      PrimitiveValue = 1,
      ArrayValue = 2,
      ObjectValue = 3,
      EntityValue = 4,
      RelationshipValue = 5,
      PathValue = 6,
      FloatArray = 7,
      FloatCompressedAsInt32Array = 8,
      DoubleArray = 9,
      DoubleCompressedAsFloatArray = 10,
      DoubleCompressedAsInt64Array = 11,
      Sint64Array = 12,
      BoolArray = 13,
      NullArray = 14,
      UuidArray = 15,
      DateArray = 19,
      StringArray = 16,
      GeometryArray = 18,
    }
    private AnyValueTypeOneofCase anyValueTypeCase_ = AnyValueTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnyValueTypeOneofCase AnyValueTypeCase {
      get { return anyValueTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAnyValueType() {
      anyValueTypeCase_ = AnyValueTypeOneofCase.None;
      anyValueType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnyValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnyValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PrimitiveValue, other.PrimitiveValue)) return false;
      if (!object.Equals(ArrayValue, other.ArrayValue)) return false;
      if (!object.Equals(ObjectValue, other.ObjectValue)) return false;
      if (!object.Equals(EntityValue, other.EntityValue)) return false;
      if (!object.Equals(RelationshipValue, other.RelationshipValue)) return false;
      if (!object.Equals(PathValue, other.PathValue)) return false;
      if (!object.Equals(FloatArray, other.FloatArray)) return false;
      if (!object.Equals(FloatCompressedAsInt32Array, other.FloatCompressedAsInt32Array)) return false;
      if (!object.Equals(DoubleArray, other.DoubleArray)) return false;
      if (!object.Equals(DoubleCompressedAsFloatArray, other.DoubleCompressedAsFloatArray)) return false;
      if (!object.Equals(DoubleCompressedAsInt64Array, other.DoubleCompressedAsInt64Array)) return false;
      if (!object.Equals(Sint64Array, other.Sint64Array)) return false;
      if (!object.Equals(BoolArray, other.BoolArray)) return false;
      if (!object.Equals(NullArray, other.NullArray)) return false;
      if (UuidArray != other.UuidArray) return false;
      if (!object.Equals(DateArray, other.DateArray)) return false;
      if (!object.Equals(StringArray, other.StringArray)) return false;
      if (!object.Equals(GeometryArray, other.GeometryArray)) return false;
      if (AnyValueTypeCase != other.AnyValueTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.PrimitiveValue) hash ^= PrimitiveValue.GetHashCode();
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.ArrayValue) hash ^= ArrayValue.GetHashCode();
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.ObjectValue) hash ^= ObjectValue.GetHashCode();
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.EntityValue) hash ^= EntityValue.GetHashCode();
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.RelationshipValue) hash ^= RelationshipValue.GetHashCode();
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.PathValue) hash ^= PathValue.GetHashCode();
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.FloatArray) hash ^= FloatArray.GetHashCode();
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.FloatCompressedAsInt32Array) hash ^= FloatCompressedAsInt32Array.GetHashCode();
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.DoubleArray) hash ^= DoubleArray.GetHashCode();
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.DoubleCompressedAsFloatArray) hash ^= DoubleCompressedAsFloatArray.GetHashCode();
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.DoubleCompressedAsInt64Array) hash ^= DoubleCompressedAsInt64Array.GetHashCode();
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.Sint64Array) hash ^= Sint64Array.GetHashCode();
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.BoolArray) hash ^= BoolArray.GetHashCode();
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.NullArray) hash ^= NullArray.GetHashCode();
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.UuidArray) hash ^= UuidArray.GetHashCode();
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.DateArray) hash ^= DateArray.GetHashCode();
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.StringArray) hash ^= StringArray.GetHashCode();
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.GeometryArray) hash ^= GeometryArray.GetHashCode();
      hash ^= (int) anyValueTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.PrimitiveValue) {
        output.WriteRawTag(10);
        output.WriteMessage(PrimitiveValue);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.ArrayValue) {
        output.WriteRawTag(18);
        output.WriteMessage(ArrayValue);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.ObjectValue) {
        output.WriteRawTag(26);
        output.WriteMessage(ObjectValue);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.EntityValue) {
        output.WriteRawTag(34);
        output.WriteMessage(EntityValue);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.RelationshipValue) {
        output.WriteRawTag(42);
        output.WriteMessage(RelationshipValue);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.PathValue) {
        output.WriteRawTag(50);
        output.WriteMessage(PathValue);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.FloatArray) {
        output.WriteRawTag(58);
        output.WriteMessage(FloatArray);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.FloatCompressedAsInt32Array) {
        output.WriteRawTag(66);
        output.WriteMessage(FloatCompressedAsInt32Array);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.DoubleArray) {
        output.WriteRawTag(74);
        output.WriteMessage(DoubleArray);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.DoubleCompressedAsFloatArray) {
        output.WriteRawTag(82);
        output.WriteMessage(DoubleCompressedAsFloatArray);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.DoubleCompressedAsInt64Array) {
        output.WriteRawTag(90);
        output.WriteMessage(DoubleCompressedAsInt64Array);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.Sint64Array) {
        output.WriteRawTag(98);
        output.WriteMessage(Sint64Array);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.BoolArray) {
        output.WriteRawTag(106);
        output.WriteMessage(BoolArray);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.NullArray) {
        output.WriteRawTag(114);
        output.WriteMessage(NullArray);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.UuidArray) {
        output.WriteRawTag(122);
        output.WriteBytes(UuidArray);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.StringArray) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(StringArray);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.GeometryArray) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(GeometryArray);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.DateArray) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(DateArray);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.PrimitiveValue) {
        output.WriteRawTag(10);
        output.WriteMessage(PrimitiveValue);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.ArrayValue) {
        output.WriteRawTag(18);
        output.WriteMessage(ArrayValue);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.ObjectValue) {
        output.WriteRawTag(26);
        output.WriteMessage(ObjectValue);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.EntityValue) {
        output.WriteRawTag(34);
        output.WriteMessage(EntityValue);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.RelationshipValue) {
        output.WriteRawTag(42);
        output.WriteMessage(RelationshipValue);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.PathValue) {
        output.WriteRawTag(50);
        output.WriteMessage(PathValue);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.FloatArray) {
        output.WriteRawTag(58);
        output.WriteMessage(FloatArray);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.FloatCompressedAsInt32Array) {
        output.WriteRawTag(66);
        output.WriteMessage(FloatCompressedAsInt32Array);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.DoubleArray) {
        output.WriteRawTag(74);
        output.WriteMessage(DoubleArray);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.DoubleCompressedAsFloatArray) {
        output.WriteRawTag(82);
        output.WriteMessage(DoubleCompressedAsFloatArray);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.DoubleCompressedAsInt64Array) {
        output.WriteRawTag(90);
        output.WriteMessage(DoubleCompressedAsInt64Array);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.Sint64Array) {
        output.WriteRawTag(98);
        output.WriteMessage(Sint64Array);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.BoolArray) {
        output.WriteRawTag(106);
        output.WriteMessage(BoolArray);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.NullArray) {
        output.WriteRawTag(114);
        output.WriteMessage(NullArray);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.UuidArray) {
        output.WriteRawTag(122);
        output.WriteBytes(UuidArray);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.StringArray) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(StringArray);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.GeometryArray) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(GeometryArray);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.DateArray) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(DateArray);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.PrimitiveValue) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PrimitiveValue);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.ArrayValue) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArrayValue);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.ObjectValue) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ObjectValue);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.EntityValue) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EntityValue);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.RelationshipValue) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RelationshipValue);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.PathValue) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PathValue);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.FloatArray) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FloatArray);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.FloatCompressedAsInt32Array) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FloatCompressedAsInt32Array);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.DoubleArray) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DoubleArray);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.DoubleCompressedAsFloatArray) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DoubleCompressedAsFloatArray);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.DoubleCompressedAsInt64Array) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DoubleCompressedAsInt64Array);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.Sint64Array) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sint64Array);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.BoolArray) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BoolArray);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.NullArray) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NullArray);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.UuidArray) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(UuidArray);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.DateArray) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DateArray);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.StringArray) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StringArray);
      }
      if (anyValueTypeCase_ == AnyValueTypeOneofCase.GeometryArray) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GeometryArray);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnyValue other) {
      if (other == null) {
        return;
      }
      switch (other.AnyValueTypeCase) {
        case AnyValueTypeOneofCase.PrimitiveValue:
          if (PrimitiveValue == null) {
            PrimitiveValue = new global::EsriPBuffer.Graph.PrimitiveValue();
          }
          PrimitiveValue.MergeFrom(other.PrimitiveValue);
          break;
        case AnyValueTypeOneofCase.ArrayValue:
          if (ArrayValue == null) {
            ArrayValue = new global::EsriPBuffer.Graph.ArrayValue();
          }
          ArrayValue.MergeFrom(other.ArrayValue);
          break;
        case AnyValueTypeOneofCase.ObjectValue:
          if (ObjectValue == null) {
            ObjectValue = new global::EsriPBuffer.Graph.ObjectValue();
          }
          ObjectValue.MergeFrom(other.ObjectValue);
          break;
        case AnyValueTypeOneofCase.EntityValue:
          if (EntityValue == null) {
            EntityValue = new global::EsriPBuffer.Graph.EntityValue();
          }
          EntityValue.MergeFrom(other.EntityValue);
          break;
        case AnyValueTypeOneofCase.RelationshipValue:
          if (RelationshipValue == null) {
            RelationshipValue = new global::EsriPBuffer.Graph.RelationshipValue();
          }
          RelationshipValue.MergeFrom(other.RelationshipValue);
          break;
        case AnyValueTypeOneofCase.PathValue:
          if (PathValue == null) {
            PathValue = new global::EsriPBuffer.Graph.PathValue();
          }
          PathValue.MergeFrom(other.PathValue);
          break;
        case AnyValueTypeOneofCase.FloatArray:
          if (FloatArray == null) {
            FloatArray = new global::EsriPBuffer.Graph.FloatArray();
          }
          FloatArray.MergeFrom(other.FloatArray);
          break;
        case AnyValueTypeOneofCase.FloatCompressedAsInt32Array:
          if (FloatCompressedAsInt32Array == null) {
            FloatCompressedAsInt32Array = new global::EsriPBuffer.Graph.Int32Array();
          }
          FloatCompressedAsInt32Array.MergeFrom(other.FloatCompressedAsInt32Array);
          break;
        case AnyValueTypeOneofCase.DoubleArray:
          if (DoubleArray == null) {
            DoubleArray = new global::EsriPBuffer.Graph.DoubleArray();
          }
          DoubleArray.MergeFrom(other.DoubleArray);
          break;
        case AnyValueTypeOneofCase.DoubleCompressedAsFloatArray:
          if (DoubleCompressedAsFloatArray == null) {
            DoubleCompressedAsFloatArray = new global::EsriPBuffer.Graph.FloatArray();
          }
          DoubleCompressedAsFloatArray.MergeFrom(other.DoubleCompressedAsFloatArray);
          break;
        case AnyValueTypeOneofCase.DoubleCompressedAsInt64Array:
          if (DoubleCompressedAsInt64Array == null) {
            DoubleCompressedAsInt64Array = new global::EsriPBuffer.Graph.Int64Array();
          }
          DoubleCompressedAsInt64Array.MergeFrom(other.DoubleCompressedAsInt64Array);
          break;
        case AnyValueTypeOneofCase.Sint64Array:
          if (Sint64Array == null) {
            Sint64Array = new global::EsriPBuffer.Graph.Int64Array();
          }
          Sint64Array.MergeFrom(other.Sint64Array);
          break;
        case AnyValueTypeOneofCase.BoolArray:
          if (BoolArray == null) {
            BoolArray = new global::EsriPBuffer.Graph.BoolArray();
          }
          BoolArray.MergeFrom(other.BoolArray);
          break;
        case AnyValueTypeOneofCase.NullArray:
          if (NullArray == null) {
            NullArray = new global::EsriPBuffer.Graph.NullArray();
          }
          NullArray.MergeFrom(other.NullArray);
          break;
        case AnyValueTypeOneofCase.UuidArray:
          UuidArray = other.UuidArray;
          break;
        case AnyValueTypeOneofCase.DateArray:
          if (DateArray == null) {
            DateArray = new global::EsriPBuffer.Graph.DateTimeArray();
          }
          DateArray.MergeFrom(other.DateArray);
          break;
        case AnyValueTypeOneofCase.StringArray:
          if (StringArray == null) {
            StringArray = new global::EsriPBuffer.Graph.StringArray();
          }
          StringArray.MergeFrom(other.StringArray);
          break;
        case AnyValueTypeOneofCase.GeometryArray:
          if (GeometryArray == null) {
            GeometryArray = new global::EsriPBuffer.Graph.GeometryArray();
          }
          GeometryArray.MergeFrom(other.GeometryArray);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::EsriPBuffer.Graph.PrimitiveValue subBuilder = new global::EsriPBuffer.Graph.PrimitiveValue();
            if (anyValueTypeCase_ == AnyValueTypeOneofCase.PrimitiveValue) {
              subBuilder.MergeFrom(PrimitiveValue);
            }
            input.ReadMessage(subBuilder);
            PrimitiveValue = subBuilder;
            break;
          }
          case 18: {
            global::EsriPBuffer.Graph.ArrayValue subBuilder = new global::EsriPBuffer.Graph.ArrayValue();
            if (anyValueTypeCase_ == AnyValueTypeOneofCase.ArrayValue) {
              subBuilder.MergeFrom(ArrayValue);
            }
            input.ReadMessage(subBuilder);
            ArrayValue = subBuilder;
            break;
          }
          case 26: {
            global::EsriPBuffer.Graph.ObjectValue subBuilder = new global::EsriPBuffer.Graph.ObjectValue();
            if (anyValueTypeCase_ == AnyValueTypeOneofCase.ObjectValue) {
              subBuilder.MergeFrom(ObjectValue);
            }
            input.ReadMessage(subBuilder);
            ObjectValue = subBuilder;
            break;
          }
          case 34: {
            global::EsriPBuffer.Graph.EntityValue subBuilder = new global::EsriPBuffer.Graph.EntityValue();
            if (anyValueTypeCase_ == AnyValueTypeOneofCase.EntityValue) {
              subBuilder.MergeFrom(EntityValue);
            }
            input.ReadMessage(subBuilder);
            EntityValue = subBuilder;
            break;
          }
          case 42: {
            global::EsriPBuffer.Graph.RelationshipValue subBuilder = new global::EsriPBuffer.Graph.RelationshipValue();
            if (anyValueTypeCase_ == AnyValueTypeOneofCase.RelationshipValue) {
              subBuilder.MergeFrom(RelationshipValue);
            }
            input.ReadMessage(subBuilder);
            RelationshipValue = subBuilder;
            break;
          }
          case 50: {
            global::EsriPBuffer.Graph.PathValue subBuilder = new global::EsriPBuffer.Graph.PathValue();
            if (anyValueTypeCase_ == AnyValueTypeOneofCase.PathValue) {
              subBuilder.MergeFrom(PathValue);
            }
            input.ReadMessage(subBuilder);
            PathValue = subBuilder;
            break;
          }
          case 58: {
            global::EsriPBuffer.Graph.FloatArray subBuilder = new global::EsriPBuffer.Graph.FloatArray();
            if (anyValueTypeCase_ == AnyValueTypeOneofCase.FloatArray) {
              subBuilder.MergeFrom(FloatArray);
            }
            input.ReadMessage(subBuilder);
            FloatArray = subBuilder;
            break;
          }
          case 66: {
            global::EsriPBuffer.Graph.Int32Array subBuilder = new global::EsriPBuffer.Graph.Int32Array();
            if (anyValueTypeCase_ == AnyValueTypeOneofCase.FloatCompressedAsInt32Array) {
              subBuilder.MergeFrom(FloatCompressedAsInt32Array);
            }
            input.ReadMessage(subBuilder);
            FloatCompressedAsInt32Array = subBuilder;
            break;
          }
          case 74: {
            global::EsriPBuffer.Graph.DoubleArray subBuilder = new global::EsriPBuffer.Graph.DoubleArray();
            if (anyValueTypeCase_ == AnyValueTypeOneofCase.DoubleArray) {
              subBuilder.MergeFrom(DoubleArray);
            }
            input.ReadMessage(subBuilder);
            DoubleArray = subBuilder;
            break;
          }
          case 82: {
            global::EsriPBuffer.Graph.FloatArray subBuilder = new global::EsriPBuffer.Graph.FloatArray();
            if (anyValueTypeCase_ == AnyValueTypeOneofCase.DoubleCompressedAsFloatArray) {
              subBuilder.MergeFrom(DoubleCompressedAsFloatArray);
            }
            input.ReadMessage(subBuilder);
            DoubleCompressedAsFloatArray = subBuilder;
            break;
          }
          case 90: {
            global::EsriPBuffer.Graph.Int64Array subBuilder = new global::EsriPBuffer.Graph.Int64Array();
            if (anyValueTypeCase_ == AnyValueTypeOneofCase.DoubleCompressedAsInt64Array) {
              subBuilder.MergeFrom(DoubleCompressedAsInt64Array);
            }
            input.ReadMessage(subBuilder);
            DoubleCompressedAsInt64Array = subBuilder;
            break;
          }
          case 98: {
            global::EsriPBuffer.Graph.Int64Array subBuilder = new global::EsriPBuffer.Graph.Int64Array();
            if (anyValueTypeCase_ == AnyValueTypeOneofCase.Sint64Array) {
              subBuilder.MergeFrom(Sint64Array);
            }
            input.ReadMessage(subBuilder);
            Sint64Array = subBuilder;
            break;
          }
          case 106: {
            global::EsriPBuffer.Graph.BoolArray subBuilder = new global::EsriPBuffer.Graph.BoolArray();
            if (anyValueTypeCase_ == AnyValueTypeOneofCase.BoolArray) {
              subBuilder.MergeFrom(BoolArray);
            }
            input.ReadMessage(subBuilder);
            BoolArray = subBuilder;
            break;
          }
          case 114: {
            global::EsriPBuffer.Graph.NullArray subBuilder = new global::EsriPBuffer.Graph.NullArray();
            if (anyValueTypeCase_ == AnyValueTypeOneofCase.NullArray) {
              subBuilder.MergeFrom(NullArray);
            }
            input.ReadMessage(subBuilder);
            NullArray = subBuilder;
            break;
          }
          case 122: {
            UuidArray = input.ReadBytes();
            break;
          }
          case 130: {
            global::EsriPBuffer.Graph.StringArray subBuilder = new global::EsriPBuffer.Graph.StringArray();
            if (anyValueTypeCase_ == AnyValueTypeOneofCase.StringArray) {
              subBuilder.MergeFrom(StringArray);
            }
            input.ReadMessage(subBuilder);
            StringArray = subBuilder;
            break;
          }
          case 146: {
            global::EsriPBuffer.Graph.GeometryArray subBuilder = new global::EsriPBuffer.Graph.GeometryArray();
            if (anyValueTypeCase_ == AnyValueTypeOneofCase.GeometryArray) {
              subBuilder.MergeFrom(GeometryArray);
            }
            input.ReadMessage(subBuilder);
            GeometryArray = subBuilder;
            break;
          }
          case 154: {
            global::EsriPBuffer.Graph.DateTimeArray subBuilder = new global::EsriPBuffer.Graph.DateTimeArray();
            if (anyValueTypeCase_ == AnyValueTypeOneofCase.DateArray) {
              subBuilder.MergeFrom(DateArray);
            }
            input.ReadMessage(subBuilder);
            DateArray = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::EsriPBuffer.Graph.PrimitiveValue subBuilder = new global::EsriPBuffer.Graph.PrimitiveValue();
            if (anyValueTypeCase_ == AnyValueTypeOneofCase.PrimitiveValue) {
              subBuilder.MergeFrom(PrimitiveValue);
            }
            input.ReadMessage(subBuilder);
            PrimitiveValue = subBuilder;
            break;
          }
          case 18: {
            global::EsriPBuffer.Graph.ArrayValue subBuilder = new global::EsriPBuffer.Graph.ArrayValue();
            if (anyValueTypeCase_ == AnyValueTypeOneofCase.ArrayValue) {
              subBuilder.MergeFrom(ArrayValue);
            }
            input.ReadMessage(subBuilder);
            ArrayValue = subBuilder;
            break;
          }
          case 26: {
            global::EsriPBuffer.Graph.ObjectValue subBuilder = new global::EsriPBuffer.Graph.ObjectValue();
            if (anyValueTypeCase_ == AnyValueTypeOneofCase.ObjectValue) {
              subBuilder.MergeFrom(ObjectValue);
            }
            input.ReadMessage(subBuilder);
            ObjectValue = subBuilder;
            break;
          }
          case 34: {
            global::EsriPBuffer.Graph.EntityValue subBuilder = new global::EsriPBuffer.Graph.EntityValue();
            if (anyValueTypeCase_ == AnyValueTypeOneofCase.EntityValue) {
              subBuilder.MergeFrom(EntityValue);
            }
            input.ReadMessage(subBuilder);
            EntityValue = subBuilder;
            break;
          }
          case 42: {
            global::EsriPBuffer.Graph.RelationshipValue subBuilder = new global::EsriPBuffer.Graph.RelationshipValue();
            if (anyValueTypeCase_ == AnyValueTypeOneofCase.RelationshipValue) {
              subBuilder.MergeFrom(RelationshipValue);
            }
            input.ReadMessage(subBuilder);
            RelationshipValue = subBuilder;
            break;
          }
          case 50: {
            global::EsriPBuffer.Graph.PathValue subBuilder = new global::EsriPBuffer.Graph.PathValue();
            if (anyValueTypeCase_ == AnyValueTypeOneofCase.PathValue) {
              subBuilder.MergeFrom(PathValue);
            }
            input.ReadMessage(subBuilder);
            PathValue = subBuilder;
            break;
          }
          case 58: {
            global::EsriPBuffer.Graph.FloatArray subBuilder = new global::EsriPBuffer.Graph.FloatArray();
            if (anyValueTypeCase_ == AnyValueTypeOneofCase.FloatArray) {
              subBuilder.MergeFrom(FloatArray);
            }
            input.ReadMessage(subBuilder);
            FloatArray = subBuilder;
            break;
          }
          case 66: {
            global::EsriPBuffer.Graph.Int32Array subBuilder = new global::EsriPBuffer.Graph.Int32Array();
            if (anyValueTypeCase_ == AnyValueTypeOneofCase.FloatCompressedAsInt32Array) {
              subBuilder.MergeFrom(FloatCompressedAsInt32Array);
            }
            input.ReadMessage(subBuilder);
            FloatCompressedAsInt32Array = subBuilder;
            break;
          }
          case 74: {
            global::EsriPBuffer.Graph.DoubleArray subBuilder = new global::EsriPBuffer.Graph.DoubleArray();
            if (anyValueTypeCase_ == AnyValueTypeOneofCase.DoubleArray) {
              subBuilder.MergeFrom(DoubleArray);
            }
            input.ReadMessage(subBuilder);
            DoubleArray = subBuilder;
            break;
          }
          case 82: {
            global::EsriPBuffer.Graph.FloatArray subBuilder = new global::EsriPBuffer.Graph.FloatArray();
            if (anyValueTypeCase_ == AnyValueTypeOneofCase.DoubleCompressedAsFloatArray) {
              subBuilder.MergeFrom(DoubleCompressedAsFloatArray);
            }
            input.ReadMessage(subBuilder);
            DoubleCompressedAsFloatArray = subBuilder;
            break;
          }
          case 90: {
            global::EsriPBuffer.Graph.Int64Array subBuilder = new global::EsriPBuffer.Graph.Int64Array();
            if (anyValueTypeCase_ == AnyValueTypeOneofCase.DoubleCompressedAsInt64Array) {
              subBuilder.MergeFrom(DoubleCompressedAsInt64Array);
            }
            input.ReadMessage(subBuilder);
            DoubleCompressedAsInt64Array = subBuilder;
            break;
          }
          case 98: {
            global::EsriPBuffer.Graph.Int64Array subBuilder = new global::EsriPBuffer.Graph.Int64Array();
            if (anyValueTypeCase_ == AnyValueTypeOneofCase.Sint64Array) {
              subBuilder.MergeFrom(Sint64Array);
            }
            input.ReadMessage(subBuilder);
            Sint64Array = subBuilder;
            break;
          }
          case 106: {
            global::EsriPBuffer.Graph.BoolArray subBuilder = new global::EsriPBuffer.Graph.BoolArray();
            if (anyValueTypeCase_ == AnyValueTypeOneofCase.BoolArray) {
              subBuilder.MergeFrom(BoolArray);
            }
            input.ReadMessage(subBuilder);
            BoolArray = subBuilder;
            break;
          }
          case 114: {
            global::EsriPBuffer.Graph.NullArray subBuilder = new global::EsriPBuffer.Graph.NullArray();
            if (anyValueTypeCase_ == AnyValueTypeOneofCase.NullArray) {
              subBuilder.MergeFrom(NullArray);
            }
            input.ReadMessage(subBuilder);
            NullArray = subBuilder;
            break;
          }
          case 122: {
            UuidArray = input.ReadBytes();
            break;
          }
          case 130: {
            global::EsriPBuffer.Graph.StringArray subBuilder = new global::EsriPBuffer.Graph.StringArray();
            if (anyValueTypeCase_ == AnyValueTypeOneofCase.StringArray) {
              subBuilder.MergeFrom(StringArray);
            }
            input.ReadMessage(subBuilder);
            StringArray = subBuilder;
            break;
          }
          case 146: {
            global::EsriPBuffer.Graph.GeometryArray subBuilder = new global::EsriPBuffer.Graph.GeometryArray();
            if (anyValueTypeCase_ == AnyValueTypeOneofCase.GeometryArray) {
              subBuilder.MergeFrom(GeometryArray);
            }
            input.ReadMessage(subBuilder);
            GeometryArray = subBuilder;
            break;
          }
          case 154: {
            global::EsriPBuffer.Graph.DateTimeArray subBuilder = new global::EsriPBuffer.Graph.DateTimeArray();
            if (anyValueTypeCase_ == AnyValueTypeOneofCase.DateArray) {
              subBuilder.MergeFrom(DateArray);
            }
            input.ReadMessage(subBuilder);
            DateArray = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Error : pb::IMessage<Error>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Error> _parser = new pb::MessageParser<Error>(() => new Error());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Error> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EsriPBuffer.Graph.EsriGraphTypesReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error(Error other) : this() {
      errorCode_ = other.errorCode_;
      errorMessage_ = other.errorMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error Clone() {
      return new Error(this);
    }

    /// <summary>Field number for the "error_code" field.</summary>
    public const int ErrorCodeFieldNumber = 1;
    private long errorCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    /// <summary>Field number for the "error_message" field.</summary>
    public const int ErrorMessageFieldNumber = 2;
    private string errorMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorMessage {
      get { return errorMessage_; }
      set {
        errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Error);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Error other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorCode != other.ErrorCode) return false;
      if (ErrorMessage != other.ErrorMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorCode != 0L) hash ^= ErrorCode.GetHashCode();
      if (ErrorMessage.Length != 0) hash ^= ErrorMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ErrorCode != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(ErrorCode);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ErrorMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ErrorCode != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(ErrorCode);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ErrorMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ErrorCode != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(ErrorCode);
      }
      if (ErrorMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Error other) {
      if (other == null) {
        return;
      }
      if (other.ErrorCode != 0L) {
        ErrorCode = other.ErrorCode;
      }
      if (other.ErrorMessage.Length != 0) {
        ErrorMessage = other.ErrorMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ErrorCode = input.ReadSInt64();
            break;
          }
          case 18: {
            ErrorMessage = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ErrorCode = input.ReadSInt64();
            break;
          }
          case 18: {
            ErrorMessage = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
