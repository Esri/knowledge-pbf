// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: esriPBuffer/graph/DataModelTypes.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EsriPBuffer.Graph {

  /// <summary>Holder for reflection information generated from esriPBuffer/graph/DataModelTypes.proto</summary>
  public static partial class DataModelTypesReflection {

    #region Descriptor
    /// <summary>File descriptor for esriPBuffer/graph/DataModelTypes.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DataModelTypesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZlc3JpUEJ1ZmZlci9ncmFwaC9EYXRhTW9kZWxUeXBlcy5wcm90bxIRZXNy",
            "aVBCdWZmZXIuZ3JhcGgaG2VzcmlQQnVmZmVyL0VzcmlUeXBlcy5wcm90bxo1",
            "ZXNyaVBCdWZmZXIvRXNyaUV4dGVuZGVkVHlwZXMvRXNyaUV4dGVuZGVkVHlw",
            "ZXMucHJvdG8aJmVzcmlQQnVmZmVyL2dyYXBoL0VzcmlHcmFwaFR5cGVzLnBy",
            "b3RvIukBCg9OYW1lZE9iamVjdFR5cGUSDAoEbmFtZRgBIAEoCRINCgVhbGlh",
            "cxgCIAEoCRI5CgRyb2xlGAQgASgOMisuZXNyaVBCdWZmZXIuZ3JhcGguZXNy",
            "aUdyYXBoTmFtZWRPYmplY3RSb2xlEjQKCnByb3BlcnRpZXMYBSADKAsyIC5l",
            "c3JpUEJ1ZmZlci5ncmFwaC5HcmFwaFByb3BlcnR5EjgKDWZpZWxkX2luZGV4",
            "ZXMYBiADKAsyIS5lc3JpUEJ1ZmZlci5Fc3JpVHlwZXMuRmllbGRJbmRleBIO",
            "CgZzdHJpY3QYByABKAgiQAoKRW50aXR5VHlwZRIyCgZlbnRpdHkYASABKAsy",
            "Ii5lc3JpUEJ1ZmZlci5ncmFwaC5OYW1lZE9iamVjdFR5cGUisAEKEFJlbGF0",
            "aW9uc2hpcFR5cGUSGwoTb3JpZ2luX2VudGl0eV90eXBlcxgBIAMoCRIZChFk",
            "ZXN0X2VudGl0eV90eXBlcxgCIAMoCRI4CgxyZWxhdGlvbnNoaXAYAyABKAsy",
            "Ii5lc3JpUEJ1ZmZlci5ncmFwaC5OYW1lZE9iamVjdFR5cGUSFQoNc3RyaWN0",
            "X29yaWdpbhgEIAEoCBITCgtzdHJpY3RfZGVzdBgFIAEoCCKMAwoNR3JhcGhQ",
            "cm9wZXJ0eRIMCgRuYW1lGAEgASgJEg0KBWFsaWFzGAIgASgJEjsKCWZpZWxk",
            "VHlwZRgDIAEoDjIoLmVzcmlQQnVmZmVyLkVzcmlFeHRlbmRlZFR5cGVzLkZp",
            "ZWxkVHlwZRI5CgxnZW9tZXRyeVR5cGUYBCABKA4yIy5lc3JpUEJ1ZmZlci5F",
            "c3JpVHlwZXMuR2VvbWV0cnlUeXBlEjcKDGRlZmF1bHRWYWx1ZRgFIAMoCzIh",
            "LmVzcmlQQnVmZmVyLmdyYXBoLlByaW1pdGl2ZVZhbHVlEhQKDG5vdF9udWxs",
            "YWJsZRgGIAEoCBIUCgxub3RfZWRpdGFibGUYByABKAgSEwoLbm90X3Zpc2li",
            "bGUYCCABKAgSEAoIcmVxdWlyZWQYCSABKAgSGgoSaXNTeXN0ZW1NYWludGFp",
            "bmVkGAogASgIEg4KBmRvbWFpbhgLIAEoCRIMCgRoYXNaGA0gASgIEgwKBGhh",
            "c00YDiABKAgSEgoKc2VhcmNoYWJsZRgPIAEoCCLvAQobR3JhcGhEb2N1bWVu",
            "dEVudGl0eVR5cGVJbmZvEhUKDW5hbWVfcHJvcGVydHkYASABKAkSFgoOdGl0",
            "bGVfcHJvcGVydHkYAiABKAkSFAoMdXJsX3Byb3BlcnR5GAMgASgJEhUKDXRl",
            "eHRfcHJvcGVydHkYBCABKAkSGQoRa2V5d29yZHNfcHJvcGVydHkYBSABKAkS",
            "HQoVY29udGVudF90eXBlX3Byb3BlcnR5GAYgASgJEhkKEW1ldGFkYXRhX3By",
            "b3BlcnR5GAcgASgJEh8KF2ZpbGVfZXh0ZW5zaW9uX3Byb3BlcnR5GAggASgJ",
            "KoEBChhlc3JpR3JhcGhOYW1lZE9iamVjdFJvbGUSHwobZXNyaUdyYXBoTmFt",
            "ZWRPYmplY3RSZWd1bGFyEAASIgoeZXNyaUdyYXBoTmFtZWRPYmplY3RQcm92",
            "ZW5hbmNlEAESIAocZXNyaUdyYXBoTmFtZWRPYmplY3REb2N1bWVudBACQiUK",
            "HmNvbS5lc3JpLmFyY2dpcy5wcm90b2J1Zi5ncmFwaEgD+AEBYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EsriPBuffer.EsriTypesReflection.Descriptor, global::EsriPBuffer.EsriExtendedTypes.EsriExtendedTypesReflection.Descriptor, global::EsriPBuffer.Graph.EsriGraphTypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::EsriPBuffer.Graph.esriGraphNamedObjectRole), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.Graph.NamedObjectType), global::EsriPBuffer.Graph.NamedObjectType.Parser, new[]{ "Name", "Alias", "Role", "Properties", "FieldIndexes", "Strict" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.Graph.EntityType), global::EsriPBuffer.Graph.EntityType.Parser, new[]{ "Entity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.Graph.RelationshipType), global::EsriPBuffer.Graph.RelationshipType.Parser, new[]{ "OriginEntityTypes", "DestEntityTypes", "Relationship", "StrictOrigin", "StrictDest" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.Graph.GraphProperty), global::EsriPBuffer.Graph.GraphProperty.Parser, new[]{ "Name", "Alias", "FieldType", "GeometryType", "DefaultValue", "NotNullable", "NotEditable", "NotVisible", "Required", "IsSystemMaintained", "Domain", "HasZ", "HasM", "Searchable" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.Graph.GraphDocumentEntityTypeInfo), global::EsriPBuffer.Graph.GraphDocumentEntityTypeInfo.Parser, new[]{ "NameProperty", "TitleProperty", "UrlProperty", "TextProperty", "KeywordsProperty", "ContentTypeProperty", "MetadataProperty", "FileExtensionProperty" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum esriGraphNamedObjectRole {
    /// <summary>
    /// default
    /// </summary>
    [pbr::OriginalName("esriGraphNamedObjectRegular")] EsriGraphNamedObjectRegular = 0,
    [pbr::OriginalName("esriGraphNamedObjectProvenance")] EsriGraphNamedObjectProvenance = 1,
    [pbr::OriginalName("esriGraphNamedObjectDocument")] EsriGraphNamedObjectDocument = 2,
  }

  #endregion

  #region Messages
  public sealed partial class NamedObjectType : pb::IMessage<NamedObjectType>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NamedObjectType> _parser = new pb::MessageParser<NamedObjectType>(() => new NamedObjectType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NamedObjectType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EsriPBuffer.Graph.DataModelTypesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NamedObjectType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NamedObjectType(NamedObjectType other) : this() {
      name_ = other.name_;
      alias_ = other.alias_;
      role_ = other.role_;
      properties_ = other.properties_.Clone();
      fieldIndexes_ = other.fieldIndexes_.Clone();
      strict_ = other.strict_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NamedObjectType Clone() {
      return new NamedObjectType(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "alias" field.</summary>
    public const int AliasFieldNumber = 2;
    private string alias_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Alias {
      get { return alias_; }
      set {
        alias_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "role" field.</summary>
    public const int RoleFieldNumber = 4;
    private global::EsriPBuffer.Graph.esriGraphNamedObjectRole role_ = global::EsriPBuffer.Graph.esriGraphNamedObjectRole.EsriGraphNamedObjectRegular;
    /// <summary>
    ///code 3 is reserved to be used for display_expression
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.Graph.esriGraphNamedObjectRole Role {
      get { return role_; }
      set {
        role_ = value;
      }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::EsriPBuffer.Graph.GraphProperty> _repeated_properties_codec
        = pb::FieldCodec.ForMessage(42, global::EsriPBuffer.Graph.GraphProperty.Parser);
    private readonly pbc::RepeatedField<global::EsriPBuffer.Graph.GraphProperty> properties_ = new pbc::RepeatedField<global::EsriPBuffer.Graph.GraphProperty>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::EsriPBuffer.Graph.GraphProperty> Properties {
      get { return properties_; }
    }

    /// <summary>Field number for the "field_indexes" field.</summary>
    public const int FieldIndexesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::EsriPBuffer.EsriTypes.Types.FieldIndex> _repeated_fieldIndexes_codec
        = pb::FieldCodec.ForMessage(50, global::EsriPBuffer.EsriTypes.Types.FieldIndex.Parser);
    private readonly pbc::RepeatedField<global::EsriPBuffer.EsriTypes.Types.FieldIndex> fieldIndexes_ = new pbc::RepeatedField<global::EsriPBuffer.EsriTypes.Types.FieldIndex>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::EsriPBuffer.EsriTypes.Types.FieldIndex> FieldIndexes {
      get { return fieldIndexes_; }
    }

    /// <summary>Field number for the "strict" field.</summary>
    public const int StrictFieldNumber = 7;
    private bool strict_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Strict {
      get { return strict_; }
      set {
        strict_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NamedObjectType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NamedObjectType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Alias != other.Alias) return false;
      if (Role != other.Role) return false;
      if(!properties_.Equals(other.properties_)) return false;
      if(!fieldIndexes_.Equals(other.fieldIndexes_)) return false;
      if (Strict != other.Strict) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Alias.Length != 0) hash ^= Alias.GetHashCode();
      if (Role != global::EsriPBuffer.Graph.esriGraphNamedObjectRole.EsriGraphNamedObjectRegular) hash ^= Role.GetHashCode();
      hash ^= properties_.GetHashCode();
      hash ^= fieldIndexes_.GetHashCode();
      if (Strict != false) hash ^= Strict.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Alias.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Alias);
      }
      if (Role != global::EsriPBuffer.Graph.esriGraphNamedObjectRole.EsriGraphNamedObjectRegular) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Role);
      }
      properties_.WriteTo(output, _repeated_properties_codec);
      fieldIndexes_.WriteTo(output, _repeated_fieldIndexes_codec);
      if (Strict != false) {
        output.WriteRawTag(56);
        output.WriteBool(Strict);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Alias.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Alias);
      }
      if (Role != global::EsriPBuffer.Graph.esriGraphNamedObjectRole.EsriGraphNamedObjectRegular) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Role);
      }
      properties_.WriteTo(ref output, _repeated_properties_codec);
      fieldIndexes_.WriteTo(ref output, _repeated_fieldIndexes_codec);
      if (Strict != false) {
        output.WriteRawTag(56);
        output.WriteBool(Strict);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Alias.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Alias);
      }
      if (Role != global::EsriPBuffer.Graph.esriGraphNamedObjectRole.EsriGraphNamedObjectRegular) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Role);
      }
      size += properties_.CalculateSize(_repeated_properties_codec);
      size += fieldIndexes_.CalculateSize(_repeated_fieldIndexes_codec);
      if (Strict != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NamedObjectType other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Alias.Length != 0) {
        Alias = other.Alias;
      }
      if (other.Role != global::EsriPBuffer.Graph.esriGraphNamedObjectRole.EsriGraphNamedObjectRegular) {
        Role = other.Role;
      }
      properties_.Add(other.properties_);
      fieldIndexes_.Add(other.fieldIndexes_);
      if (other.Strict != false) {
        Strict = other.Strict;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Alias = input.ReadString();
            break;
          }
          case 32: {
            Role = (global::EsriPBuffer.Graph.esriGraphNamedObjectRole) input.ReadEnum();
            break;
          }
          case 42: {
            properties_.AddEntriesFrom(input, _repeated_properties_codec);
            break;
          }
          case 50: {
            fieldIndexes_.AddEntriesFrom(input, _repeated_fieldIndexes_codec);
            break;
          }
          case 56: {
            Strict = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Alias = input.ReadString();
            break;
          }
          case 32: {
            Role = (global::EsriPBuffer.Graph.esriGraphNamedObjectRole) input.ReadEnum();
            break;
          }
          case 42: {
            properties_.AddEntriesFrom(ref input, _repeated_properties_codec);
            break;
          }
          case 50: {
            fieldIndexes_.AddEntriesFrom(ref input, _repeated_fieldIndexes_codec);
            break;
          }
          case 56: {
            Strict = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EntityType : pb::IMessage<EntityType>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntityType> _parser = new pb::MessageParser<EntityType>(() => new EntityType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EntityType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EsriPBuffer.Graph.DataModelTypesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityType(EntityType other) : this() {
      entity_ = other.entity_ != null ? other.entity_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityType Clone() {
      return new EntityType(this);
    }

    /// <summary>Field number for the "entity" field.</summary>
    public const int EntityFieldNumber = 1;
    private global::EsriPBuffer.Graph.NamedObjectType entity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.Graph.NamedObjectType Entity {
      get { return entity_; }
      set {
        entity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EntityType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EntityType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Entity, other.Entity)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (entity_ != null) hash ^= Entity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (entity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Entity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (entity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Entity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (entity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Entity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EntityType other) {
      if (other == null) {
        return;
      }
      if (other.entity_ != null) {
        if (entity_ == null) {
          Entity = new global::EsriPBuffer.Graph.NamedObjectType();
        }
        Entity.MergeFrom(other.Entity);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (entity_ == null) {
              Entity = new global::EsriPBuffer.Graph.NamedObjectType();
            }
            input.ReadMessage(Entity);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (entity_ == null) {
              Entity = new global::EsriPBuffer.Graph.NamedObjectType();
            }
            input.ReadMessage(Entity);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RelationshipType : pb::IMessage<RelationshipType>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RelationshipType> _parser = new pb::MessageParser<RelationshipType>(() => new RelationshipType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RelationshipType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EsriPBuffer.Graph.DataModelTypesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelationshipType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelationshipType(RelationshipType other) : this() {
      originEntityTypes_ = other.originEntityTypes_.Clone();
      destEntityTypes_ = other.destEntityTypes_.Clone();
      relationship_ = other.relationship_ != null ? other.relationship_.Clone() : null;
      strictOrigin_ = other.strictOrigin_;
      strictDest_ = other.strictDest_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelationshipType Clone() {
      return new RelationshipType(this);
    }

    /// <summary>Field number for the "origin_entity_types" field.</summary>
    public const int OriginEntityTypesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_originEntityTypes_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> originEntityTypes_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> OriginEntityTypes {
      get { return originEntityTypes_; }
    }

    /// <summary>Field number for the "dest_entity_types" field.</summary>
    public const int DestEntityTypesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_destEntityTypes_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> destEntityTypes_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> DestEntityTypes {
      get { return destEntityTypes_; }
    }

    /// <summary>Field number for the "relationship" field.</summary>
    public const int RelationshipFieldNumber = 3;
    private global::EsriPBuffer.Graph.NamedObjectType relationship_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.Graph.NamedObjectType Relationship {
      get { return relationship_; }
      set {
        relationship_ = value;
      }
    }

    /// <summary>Field number for the "strict_origin" field.</summary>
    public const int StrictOriginFieldNumber = 4;
    private bool strictOrigin_;
    /// <summary>
    /// If strict_origin is true, origin entity types for this relationship will be restricted to entity types defined in origin_entity_types list. This also means that origin_entity_types list is static and will not be modified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool StrictOrigin {
      get { return strictOrigin_; }
      set {
        strictOrigin_ = value;
      }
    }

    /// <summary>Field number for the "strict_dest" field.</summary>
    public const int StrictDestFieldNumber = 5;
    private bool strictDest_;
    /// <summary>
    /// If strict_dest is true, destination entity types for this relationship will be restricted to entity types defined in dest_entity_types list. This also means that dest_entity_types list is static and will not be modified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool StrictDest {
      get { return strictDest_; }
      set {
        strictDest_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RelationshipType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RelationshipType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!originEntityTypes_.Equals(other.originEntityTypes_)) return false;
      if(!destEntityTypes_.Equals(other.destEntityTypes_)) return false;
      if (!object.Equals(Relationship, other.Relationship)) return false;
      if (StrictOrigin != other.StrictOrigin) return false;
      if (StrictDest != other.StrictDest) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= originEntityTypes_.GetHashCode();
      hash ^= destEntityTypes_.GetHashCode();
      if (relationship_ != null) hash ^= Relationship.GetHashCode();
      if (StrictOrigin != false) hash ^= StrictOrigin.GetHashCode();
      if (StrictDest != false) hash ^= StrictDest.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      originEntityTypes_.WriteTo(output, _repeated_originEntityTypes_codec);
      destEntityTypes_.WriteTo(output, _repeated_destEntityTypes_codec);
      if (relationship_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Relationship);
      }
      if (StrictOrigin != false) {
        output.WriteRawTag(32);
        output.WriteBool(StrictOrigin);
      }
      if (StrictDest != false) {
        output.WriteRawTag(40);
        output.WriteBool(StrictDest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      originEntityTypes_.WriteTo(ref output, _repeated_originEntityTypes_codec);
      destEntityTypes_.WriteTo(ref output, _repeated_destEntityTypes_codec);
      if (relationship_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Relationship);
      }
      if (StrictOrigin != false) {
        output.WriteRawTag(32);
        output.WriteBool(StrictOrigin);
      }
      if (StrictDest != false) {
        output.WriteRawTag(40);
        output.WriteBool(StrictDest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += originEntityTypes_.CalculateSize(_repeated_originEntityTypes_codec);
      size += destEntityTypes_.CalculateSize(_repeated_destEntityTypes_codec);
      if (relationship_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Relationship);
      }
      if (StrictOrigin != false) {
        size += 1 + 1;
      }
      if (StrictDest != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RelationshipType other) {
      if (other == null) {
        return;
      }
      originEntityTypes_.Add(other.originEntityTypes_);
      destEntityTypes_.Add(other.destEntityTypes_);
      if (other.relationship_ != null) {
        if (relationship_ == null) {
          Relationship = new global::EsriPBuffer.Graph.NamedObjectType();
        }
        Relationship.MergeFrom(other.Relationship);
      }
      if (other.StrictOrigin != false) {
        StrictOrigin = other.StrictOrigin;
      }
      if (other.StrictDest != false) {
        StrictDest = other.StrictDest;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            originEntityTypes_.AddEntriesFrom(input, _repeated_originEntityTypes_codec);
            break;
          }
          case 18: {
            destEntityTypes_.AddEntriesFrom(input, _repeated_destEntityTypes_codec);
            break;
          }
          case 26: {
            if (relationship_ == null) {
              Relationship = new global::EsriPBuffer.Graph.NamedObjectType();
            }
            input.ReadMessage(Relationship);
            break;
          }
          case 32: {
            StrictOrigin = input.ReadBool();
            break;
          }
          case 40: {
            StrictDest = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            originEntityTypes_.AddEntriesFrom(ref input, _repeated_originEntityTypes_codec);
            break;
          }
          case 18: {
            destEntityTypes_.AddEntriesFrom(ref input, _repeated_destEntityTypes_codec);
            break;
          }
          case 26: {
            if (relationship_ == null) {
              Relationship = new global::EsriPBuffer.Graph.NamedObjectType();
            }
            input.ReadMessage(Relationship);
            break;
          }
          case 32: {
            StrictOrigin = input.ReadBool();
            break;
          }
          case 40: {
            StrictDest = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GraphProperty : pb::IMessage<GraphProperty>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GraphProperty> _parser = new pb::MessageParser<GraphProperty>(() => new GraphProperty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GraphProperty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EsriPBuffer.Graph.DataModelTypesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GraphProperty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GraphProperty(GraphProperty other) : this() {
      name_ = other.name_;
      alias_ = other.alias_;
      fieldType_ = other.fieldType_;
      geometryType_ = other.geometryType_;
      defaultValue_ = other.defaultValue_.Clone();
      notNullable_ = other.notNullable_;
      notEditable_ = other.notEditable_;
      notVisible_ = other.notVisible_;
      required_ = other.required_;
      isSystemMaintained_ = other.isSystemMaintained_;
      domain_ = other.domain_;
      hasZ_ = other.hasZ_;
      hasM_ = other.hasM_;
      searchable_ = other.searchable_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GraphProperty Clone() {
      return new GraphProperty(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "alias" field.</summary>
    public const int AliasFieldNumber = 2;
    private string alias_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Alias {
      get { return alias_; }
      set {
        alias_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fieldType" field.</summary>
    public const int FieldTypeFieldNumber = 3;
    private global::EsriPBuffer.EsriExtendedTypes.FieldType fieldType_ = global::EsriPBuffer.EsriExtendedTypes.FieldType.EsriFieldTypeUnspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.EsriExtendedTypes.FieldType FieldType {
      get { return fieldType_; }
      set {
        fieldType_ = value;
      }
    }

    /// <summary>Field number for the "geometryType" field.</summary>
    public const int GeometryTypeFieldNumber = 4;
    private global::EsriPBuffer.EsriTypes.Types.GeometryType geometryType_ = global::EsriPBuffer.EsriTypes.Types.GeometryType.EsriGeometryTypePoint;
    /// <summary>
    /// not present if property is not of type `geometry`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.EsriTypes.Types.GeometryType GeometryType {
      get { return geometryType_; }
      set {
        geometryType_ = value;
      }
    }

    /// <summary>Field number for the "defaultValue" field.</summary>
    public const int DefaultValueFieldNumber = 5;
    private static readonly pb::FieldCodec<global::EsriPBuffer.Graph.PrimitiveValue> _repeated_defaultValue_codec
        = pb::FieldCodec.ForMessage(42, global::EsriPBuffer.Graph.PrimitiveValue.Parser);
    private readonly pbc::RepeatedField<global::EsriPBuffer.Graph.PrimitiveValue> defaultValue_ = new pbc::RepeatedField<global::EsriPBuffer.Graph.PrimitiveValue>();
    /// <summary>
    /// may be more than 1 for arrays
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::EsriPBuffer.Graph.PrimitiveValue> DefaultValue {
      get { return defaultValue_; }
    }

    /// <summary>Field number for the "not_nullable" field.</summary>
    public const int NotNullableFieldNumber = 6;
    private bool notNullable_;
    /// <summary>
    /// by default props are nullable
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NotNullable {
      get { return notNullable_; }
      set {
        notNullable_ = value;
      }
    }

    /// <summary>Field number for the "not_editable" field.</summary>
    public const int NotEditableFieldNumber = 7;
    private bool notEditable_;
    /// <summary>
    /// by default props are editable
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NotEditable {
      get { return notEditable_; }
      set {
        notEditable_ = value;
      }
    }

    /// <summary>Field number for the "not_visible" field.</summary>
    public const int NotVisibleFieldNumber = 8;
    private bool notVisible_;
    /// <summary>
    /// by default props are visible
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NotVisible {
      get { return notVisible_; }
      set {
        notVisible_ = value;
      }
    }

    /// <summary>Field number for the "required" field.</summary>
    public const int RequiredFieldNumber = 9;
    private bool required_;
    /// <summary>
    /// by default props are not required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Required {
      get { return required_; }
      set {
        required_ = value;
      }
    }

    /// <summary>Field number for the "isSystemMaintained" field.</summary>
    public const int IsSystemMaintainedFieldNumber = 10;
    private bool isSystemMaintained_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSystemMaintained {
      get { return isSystemMaintained_; }
      set {
        isSystemMaintained_ = value;
      }
    }

    /// <summary>Field number for the "domain" field.</summary>
    public const int DomainFieldNumber = 11;
    private string domain_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Domain {
      get { return domain_; }
      set {
        domain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hasZ" field.</summary>
    public const int HasZFieldNumber = 13;
    private bool hasZ_;
    /// <summary>
    /// only applies if type is geometry
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasZ {
      get { return hasZ_; }
      set {
        hasZ_ = value;
      }
    }

    /// <summary>Field number for the "hasM" field.</summary>
    public const int HasMFieldNumber = 14;
    private bool hasM_;
    /// <summary>
    /// only applies if type is geometry
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasM {
      get { return hasM_; }
      set {
        hasM_ = value;
      }
    }

    /// <summary>Field number for the "searchable" field.</summary>
    public const int SearchableFieldNumber = 15;
    private bool searchable_;
    /// <summary>
    /// by default props are not searchable
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Searchable {
      get { return searchable_; }
      set {
        searchable_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GraphProperty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GraphProperty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Alias != other.Alias) return false;
      if (FieldType != other.FieldType) return false;
      if (GeometryType != other.GeometryType) return false;
      if(!defaultValue_.Equals(other.defaultValue_)) return false;
      if (NotNullable != other.NotNullable) return false;
      if (NotEditable != other.NotEditable) return false;
      if (NotVisible != other.NotVisible) return false;
      if (Required != other.Required) return false;
      if (IsSystemMaintained != other.IsSystemMaintained) return false;
      if (Domain != other.Domain) return false;
      if (HasZ != other.HasZ) return false;
      if (HasM != other.HasM) return false;
      if (Searchable != other.Searchable) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Alias.Length != 0) hash ^= Alias.GetHashCode();
      if (FieldType != global::EsriPBuffer.EsriExtendedTypes.FieldType.EsriFieldTypeUnspecified) hash ^= FieldType.GetHashCode();
      if (GeometryType != global::EsriPBuffer.EsriTypes.Types.GeometryType.EsriGeometryTypePoint) hash ^= GeometryType.GetHashCode();
      hash ^= defaultValue_.GetHashCode();
      if (NotNullable != false) hash ^= NotNullable.GetHashCode();
      if (NotEditable != false) hash ^= NotEditable.GetHashCode();
      if (NotVisible != false) hash ^= NotVisible.GetHashCode();
      if (Required != false) hash ^= Required.GetHashCode();
      if (IsSystemMaintained != false) hash ^= IsSystemMaintained.GetHashCode();
      if (Domain.Length != 0) hash ^= Domain.GetHashCode();
      if (HasZ != false) hash ^= HasZ.GetHashCode();
      if (HasM != false) hash ^= HasM.GetHashCode();
      if (Searchable != false) hash ^= Searchable.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Alias.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Alias);
      }
      if (FieldType != global::EsriPBuffer.EsriExtendedTypes.FieldType.EsriFieldTypeUnspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) FieldType);
      }
      if (GeometryType != global::EsriPBuffer.EsriTypes.Types.GeometryType.EsriGeometryTypePoint) {
        output.WriteRawTag(32);
        output.WriteEnum((int) GeometryType);
      }
      defaultValue_.WriteTo(output, _repeated_defaultValue_codec);
      if (NotNullable != false) {
        output.WriteRawTag(48);
        output.WriteBool(NotNullable);
      }
      if (NotEditable != false) {
        output.WriteRawTag(56);
        output.WriteBool(NotEditable);
      }
      if (NotVisible != false) {
        output.WriteRawTag(64);
        output.WriteBool(NotVisible);
      }
      if (Required != false) {
        output.WriteRawTag(72);
        output.WriteBool(Required);
      }
      if (IsSystemMaintained != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsSystemMaintained);
      }
      if (Domain.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Domain);
      }
      if (HasZ != false) {
        output.WriteRawTag(104);
        output.WriteBool(HasZ);
      }
      if (HasM != false) {
        output.WriteRawTag(112);
        output.WriteBool(HasM);
      }
      if (Searchable != false) {
        output.WriteRawTag(120);
        output.WriteBool(Searchable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Alias.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Alias);
      }
      if (FieldType != global::EsriPBuffer.EsriExtendedTypes.FieldType.EsriFieldTypeUnspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) FieldType);
      }
      if (GeometryType != global::EsriPBuffer.EsriTypes.Types.GeometryType.EsriGeometryTypePoint) {
        output.WriteRawTag(32);
        output.WriteEnum((int) GeometryType);
      }
      defaultValue_.WriteTo(ref output, _repeated_defaultValue_codec);
      if (NotNullable != false) {
        output.WriteRawTag(48);
        output.WriteBool(NotNullable);
      }
      if (NotEditable != false) {
        output.WriteRawTag(56);
        output.WriteBool(NotEditable);
      }
      if (NotVisible != false) {
        output.WriteRawTag(64);
        output.WriteBool(NotVisible);
      }
      if (Required != false) {
        output.WriteRawTag(72);
        output.WriteBool(Required);
      }
      if (IsSystemMaintained != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsSystemMaintained);
      }
      if (Domain.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Domain);
      }
      if (HasZ != false) {
        output.WriteRawTag(104);
        output.WriteBool(HasZ);
      }
      if (HasM != false) {
        output.WriteRawTag(112);
        output.WriteBool(HasM);
      }
      if (Searchable != false) {
        output.WriteRawTag(120);
        output.WriteBool(Searchable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Alias.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Alias);
      }
      if (FieldType != global::EsriPBuffer.EsriExtendedTypes.FieldType.EsriFieldTypeUnspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FieldType);
      }
      if (GeometryType != global::EsriPBuffer.EsriTypes.Types.GeometryType.EsriGeometryTypePoint) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GeometryType);
      }
      size += defaultValue_.CalculateSize(_repeated_defaultValue_codec);
      if (NotNullable != false) {
        size += 1 + 1;
      }
      if (NotEditable != false) {
        size += 1 + 1;
      }
      if (NotVisible != false) {
        size += 1 + 1;
      }
      if (Required != false) {
        size += 1 + 1;
      }
      if (IsSystemMaintained != false) {
        size += 1 + 1;
      }
      if (Domain.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Domain);
      }
      if (HasZ != false) {
        size += 1 + 1;
      }
      if (HasM != false) {
        size += 1 + 1;
      }
      if (Searchable != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GraphProperty other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Alias.Length != 0) {
        Alias = other.Alias;
      }
      if (other.FieldType != global::EsriPBuffer.EsriExtendedTypes.FieldType.EsriFieldTypeUnspecified) {
        FieldType = other.FieldType;
      }
      if (other.GeometryType != global::EsriPBuffer.EsriTypes.Types.GeometryType.EsriGeometryTypePoint) {
        GeometryType = other.GeometryType;
      }
      defaultValue_.Add(other.defaultValue_);
      if (other.NotNullable != false) {
        NotNullable = other.NotNullable;
      }
      if (other.NotEditable != false) {
        NotEditable = other.NotEditable;
      }
      if (other.NotVisible != false) {
        NotVisible = other.NotVisible;
      }
      if (other.Required != false) {
        Required = other.Required;
      }
      if (other.IsSystemMaintained != false) {
        IsSystemMaintained = other.IsSystemMaintained;
      }
      if (other.Domain.Length != 0) {
        Domain = other.Domain;
      }
      if (other.HasZ != false) {
        HasZ = other.HasZ;
      }
      if (other.HasM != false) {
        HasM = other.HasM;
      }
      if (other.Searchable != false) {
        Searchable = other.Searchable;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Alias = input.ReadString();
            break;
          }
          case 24: {
            FieldType = (global::EsriPBuffer.EsriExtendedTypes.FieldType) input.ReadEnum();
            break;
          }
          case 32: {
            GeometryType = (global::EsriPBuffer.EsriTypes.Types.GeometryType) input.ReadEnum();
            break;
          }
          case 42: {
            defaultValue_.AddEntriesFrom(input, _repeated_defaultValue_codec);
            break;
          }
          case 48: {
            NotNullable = input.ReadBool();
            break;
          }
          case 56: {
            NotEditable = input.ReadBool();
            break;
          }
          case 64: {
            NotVisible = input.ReadBool();
            break;
          }
          case 72: {
            Required = input.ReadBool();
            break;
          }
          case 80: {
            IsSystemMaintained = input.ReadBool();
            break;
          }
          case 90: {
            Domain = input.ReadString();
            break;
          }
          case 104: {
            HasZ = input.ReadBool();
            break;
          }
          case 112: {
            HasM = input.ReadBool();
            break;
          }
          case 120: {
            Searchable = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Alias = input.ReadString();
            break;
          }
          case 24: {
            FieldType = (global::EsriPBuffer.EsriExtendedTypes.FieldType) input.ReadEnum();
            break;
          }
          case 32: {
            GeometryType = (global::EsriPBuffer.EsriTypes.Types.GeometryType) input.ReadEnum();
            break;
          }
          case 42: {
            defaultValue_.AddEntriesFrom(ref input, _repeated_defaultValue_codec);
            break;
          }
          case 48: {
            NotNullable = input.ReadBool();
            break;
          }
          case 56: {
            NotEditable = input.ReadBool();
            break;
          }
          case 64: {
            NotVisible = input.ReadBool();
            break;
          }
          case 72: {
            Required = input.ReadBool();
            break;
          }
          case 80: {
            IsSystemMaintained = input.ReadBool();
            break;
          }
          case 90: {
            Domain = input.ReadString();
            break;
          }
          case 104: {
            HasZ = input.ReadBool();
            break;
          }
          case 112: {
            HasM = input.ReadBool();
            break;
          }
          case 120: {
            Searchable = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GraphDocumentEntityTypeInfo : pb::IMessage<GraphDocumentEntityTypeInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GraphDocumentEntityTypeInfo> _parser = new pb::MessageParser<GraphDocumentEntityTypeInfo>(() => new GraphDocumentEntityTypeInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GraphDocumentEntityTypeInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EsriPBuffer.Graph.DataModelTypesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GraphDocumentEntityTypeInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GraphDocumentEntityTypeInfo(GraphDocumentEntityTypeInfo other) : this() {
      nameProperty_ = other.nameProperty_;
      titleProperty_ = other.titleProperty_;
      urlProperty_ = other.urlProperty_;
      textProperty_ = other.textProperty_;
      keywordsProperty_ = other.keywordsProperty_;
      contentTypeProperty_ = other.contentTypeProperty_;
      metadataProperty_ = other.metadataProperty_;
      fileExtensionProperty_ = other.fileExtensionProperty_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GraphDocumentEntityTypeInfo Clone() {
      return new GraphDocumentEntityTypeInfo(this);
    }

    /// <summary>Field number for the "name_property" field.</summary>
    public const int NamePropertyFieldNumber = 1;
    private string nameProperty_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NameProperty {
      get { return nameProperty_; }
      set {
        nameProperty_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title_property" field.</summary>
    public const int TitlePropertyFieldNumber = 2;
    private string titleProperty_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TitleProperty {
      get { return titleProperty_; }
      set {
        titleProperty_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "url_property" field.</summary>
    public const int UrlPropertyFieldNumber = 3;
    private string urlProperty_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UrlProperty {
      get { return urlProperty_; }
      set {
        urlProperty_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "text_property" field.</summary>
    public const int TextPropertyFieldNumber = 4;
    private string textProperty_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TextProperty {
      get { return textProperty_; }
      set {
        textProperty_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "keywords_property" field.</summary>
    public const int KeywordsPropertyFieldNumber = 5;
    private string keywordsProperty_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string KeywordsProperty {
      get { return keywordsProperty_; }
      set {
        keywordsProperty_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_type_property" field.</summary>
    public const int ContentTypePropertyFieldNumber = 6;
    private string contentTypeProperty_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentTypeProperty {
      get { return contentTypeProperty_; }
      set {
        contentTypeProperty_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "metadata_property" field.</summary>
    public const int MetadataPropertyFieldNumber = 7;
    private string metadataProperty_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MetadataProperty {
      get { return metadataProperty_; }
      set {
        metadataProperty_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "file_extension_property" field.</summary>
    public const int FileExtensionPropertyFieldNumber = 8;
    private string fileExtensionProperty_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FileExtensionProperty {
      get { return fileExtensionProperty_; }
      set {
        fileExtensionProperty_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GraphDocumentEntityTypeInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GraphDocumentEntityTypeInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NameProperty != other.NameProperty) return false;
      if (TitleProperty != other.TitleProperty) return false;
      if (UrlProperty != other.UrlProperty) return false;
      if (TextProperty != other.TextProperty) return false;
      if (KeywordsProperty != other.KeywordsProperty) return false;
      if (ContentTypeProperty != other.ContentTypeProperty) return false;
      if (MetadataProperty != other.MetadataProperty) return false;
      if (FileExtensionProperty != other.FileExtensionProperty) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NameProperty.Length != 0) hash ^= NameProperty.GetHashCode();
      if (TitleProperty.Length != 0) hash ^= TitleProperty.GetHashCode();
      if (UrlProperty.Length != 0) hash ^= UrlProperty.GetHashCode();
      if (TextProperty.Length != 0) hash ^= TextProperty.GetHashCode();
      if (KeywordsProperty.Length != 0) hash ^= KeywordsProperty.GetHashCode();
      if (ContentTypeProperty.Length != 0) hash ^= ContentTypeProperty.GetHashCode();
      if (MetadataProperty.Length != 0) hash ^= MetadataProperty.GetHashCode();
      if (FileExtensionProperty.Length != 0) hash ^= FileExtensionProperty.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (NameProperty.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NameProperty);
      }
      if (TitleProperty.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TitleProperty);
      }
      if (UrlProperty.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UrlProperty);
      }
      if (TextProperty.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TextProperty);
      }
      if (KeywordsProperty.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(KeywordsProperty);
      }
      if (ContentTypeProperty.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ContentTypeProperty);
      }
      if (MetadataProperty.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(MetadataProperty);
      }
      if (FileExtensionProperty.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(FileExtensionProperty);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (NameProperty.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NameProperty);
      }
      if (TitleProperty.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TitleProperty);
      }
      if (UrlProperty.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UrlProperty);
      }
      if (TextProperty.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TextProperty);
      }
      if (KeywordsProperty.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(KeywordsProperty);
      }
      if (ContentTypeProperty.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ContentTypeProperty);
      }
      if (MetadataProperty.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(MetadataProperty);
      }
      if (FileExtensionProperty.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(FileExtensionProperty);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NameProperty.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameProperty);
      }
      if (TitleProperty.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TitleProperty);
      }
      if (UrlProperty.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UrlProperty);
      }
      if (TextProperty.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TextProperty);
      }
      if (KeywordsProperty.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(KeywordsProperty);
      }
      if (ContentTypeProperty.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentTypeProperty);
      }
      if (MetadataProperty.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MetadataProperty);
      }
      if (FileExtensionProperty.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FileExtensionProperty);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GraphDocumentEntityTypeInfo other) {
      if (other == null) {
        return;
      }
      if (other.NameProperty.Length != 0) {
        NameProperty = other.NameProperty;
      }
      if (other.TitleProperty.Length != 0) {
        TitleProperty = other.TitleProperty;
      }
      if (other.UrlProperty.Length != 0) {
        UrlProperty = other.UrlProperty;
      }
      if (other.TextProperty.Length != 0) {
        TextProperty = other.TextProperty;
      }
      if (other.KeywordsProperty.Length != 0) {
        KeywordsProperty = other.KeywordsProperty;
      }
      if (other.ContentTypeProperty.Length != 0) {
        ContentTypeProperty = other.ContentTypeProperty;
      }
      if (other.MetadataProperty.Length != 0) {
        MetadataProperty = other.MetadataProperty;
      }
      if (other.FileExtensionProperty.Length != 0) {
        FileExtensionProperty = other.FileExtensionProperty;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NameProperty = input.ReadString();
            break;
          }
          case 18: {
            TitleProperty = input.ReadString();
            break;
          }
          case 26: {
            UrlProperty = input.ReadString();
            break;
          }
          case 34: {
            TextProperty = input.ReadString();
            break;
          }
          case 42: {
            KeywordsProperty = input.ReadString();
            break;
          }
          case 50: {
            ContentTypeProperty = input.ReadString();
            break;
          }
          case 58: {
            MetadataProperty = input.ReadString();
            break;
          }
          case 66: {
            FileExtensionProperty = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            NameProperty = input.ReadString();
            break;
          }
          case 18: {
            TitleProperty = input.ReadString();
            break;
          }
          case 26: {
            UrlProperty = input.ReadString();
            break;
          }
          case 34: {
            TextProperty = input.ReadString();
            break;
          }
          case 42: {
            KeywordsProperty = input.ReadString();
            break;
          }
          case 50: {
            ContentTypeProperty = input.ReadString();
            break;
          }
          case 58: {
            MetadataProperty = input.ReadString();
            break;
          }
          case 66: {
            FileExtensionProperty = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
