// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: esriPBuffer/EsriTypes.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EsriPBuffer {

  /// <summary>Holder for reflection information generated from esriPBuffer/EsriTypes.proto</summary>
  public static partial class EsriTypesReflection {

    #region Descriptor
    /// <summary>File descriptor for esriPBuffer/EsriTypes.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EsriTypesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chtlc3JpUEJ1ZmZlci9Fc3JpVHlwZXMucHJvdG8SC2VzcmlQQnVmZmVyGjVl",
            "c3JpUEJ1ZmZlci9Fc3JpRXh0ZW5kZWRUeXBlcy9Fc3JpRXh0ZW5kZWRUeXBl",
            "cy5wcm90byKNFwoJRXNyaVR5cGVzGkcKBVNjYWxlEg4KBnhTY2FsZRgBIAEo",
            "ARIOCgZ5U2NhbGUYAiABKAESDgoGbVNjYWxlGAMgASgBEg4KBnpTY2FsZRgE",
            "IAEoARpbCglUcmFuc2xhdGUSEgoKeFRyYW5zbGF0ZRgBIAEoARISCgp5VHJh",
            "bnNsYXRlGAIgASgBEhIKCm1UcmFuc2xhdGUYAyABKAESEgoKelRyYW5zbGF0",
            "ZRgEIAEoARq6AQoJVHJhbnNmb3JtEksKFXF1YW50aXplT3JpZ2luUG9zdGlv",
            "bhgBIAEoDjIsLmVzcmlQQnVmZmVyLkVzcmlUeXBlcy5RdWFudGl6ZU9yaWdp",
            "blBvc3Rpb24SKwoFc2NhbGUYAiABKAsyHC5lc3JpUEJ1ZmZlci5Fc3JpVHlw",
            "ZXMuU2NhbGUSMwoJdHJhbnNsYXRlGAMgASgLMiAuZXNyaVBCdWZmZXIuRXNy",
            "aVR5cGVzLlRyYW5zbGF0ZRrcAQoWUXVhbnRpemF0aW9uUGFyYW1ldGVycxIv",
            "CgZleHRlbnQYASABKAsyHy5lc3JpUEJ1ZmZlci5Fc3JpVHlwZXMuRW52ZWxv",
            "cGUSMQoEbW9kZRgCIAEoDjIjLmVzcmlQQnVmZmVyLkVzcmlUeXBlcy5RdWFu",
            "dGl6ZU1vZGUSSwoVcXVhbnRpemVPcmlnaW5Qb3N0aW9uGAMgASgOMiwuZXNy",
            "aVBCdWZmZXIuRXNyaVR5cGVzLlF1YW50aXplT3JpZ2luUG9zdGlvbhIRCgl0",
            "b2xlcmFuY2UYBCABKAEaewoQU3BhdGlhbFJlZmVyZW5jZRIMCgR3a2lkGAEg",
            "ASgNEhMKC2xhc3Rlc3RXa2lkGAIgASgNEg8KB3Zjc1draWQYAyABKA0SFQoN",
            "bGF0ZXN0VmNzV2tpZBgEIAEoDRILCgN3a3QYBSABKAkSDwoHc2Rlc3JpZBgG",
            "IAEoDRpmCgpGaWVsZEluZGV4EgwKBG5hbWUYASABKAkSDgoGZmllbGRzGAIg",
            "ASgJEhMKC2lzQXNjZW5kaW5nGAMgASgIEhAKCGlzVW5pcXVlGAQgASgIEhMK",
            "C2Rlc2NyaXB0aW9uGAUgASgJGuUBCgVWYWx1ZRIWCgxzdHJpbmdfdmFsdWUY",
            "ASABKAlIABIVCgtmbG9hdF92YWx1ZRgCIAEoAkgAEhYKDGRvdWJsZV92YWx1",
            "ZRgDIAEoAUgAEhQKCnNpbnRfdmFsdWUYBCABKBFIABIUCgp1aW50X3ZhbHVl",
            "GAUgASgNSAASFQoLaW50NjRfdmFsdWUYBiABKANIABIWCgx1aW50NjRfdmFs",
            "dWUYByABKARIABIWCgxzaW50NjRfdmFsdWUYCCABKBJIABIUCgpib29sX3Zh",
            "bHVlGAkgASgISABCDAoKdmFsdWVfdHlwZRqFAQoIRW52ZWxvcGUSDAoEWE1p",
            "bhgBIAEoARIMCgRZTWluGAIgASgBEgwKBFhNYXgYAyABKAESDAoEWU1heBgE",
            "IAEoARJBChBTcGF0aWFsUmVmZXJlbmNlGAUgASgLMicuZXNyaVBCdWZmZXIu",
            "RXNyaVR5cGVzLlNwYXRpYWxSZWZlcmVuY2UaRgoKQ29kZWRWYWx1ZRIMCgRu",
            "YW1lGAEgASgJEioKBGNvZGUYAiABKAsyHC5lc3JpUEJ1ZmZlci5Fc3JpVHlw",
            "ZXMuVmFsdWUaSgoQQ29kZWRWYWx1ZURvbWFpbhI2Cgtjb2Rlc1ZhbHVlcxgD",
            "IAMoCzIhLmVzcmlQQnVmZmVyLkVzcmlUeXBlcy5Db2RlZFZhbHVlGjoKC1Jh",
            "bmdlRG9tYWluEisKBXJhbmdlGAMgAygLMhwuZXNyaVBCdWZmZXIuRXNyaVR5",
            "cGVzLlZhbHVlGukCCgZEb21haW4SDAoEdHlwZRgBIAEoCRIMCgRuYW1lGAIg",
            "ASgJEkMKEGNvZGVkVmFsdWVEb21haW4YAyABKAsyJy5lc3JpUEJ1ZmZlci5F",
            "c3JpVHlwZXMuQ29kZWRWYWx1ZURvbWFpbkgAEjkKC3JhbmdlRG9tYWluGAQg",
            "ASgLMiIuZXNyaVBCdWZmZXIuRXNyaVR5cGVzLlJhbmdlRG9tYWluSAASOwoJ",
            "ZmllbGRUeXBlGAUgASgOMiguZXNyaVBCdWZmZXIuRXNyaUV4dGVuZGVkVHlw",
            "ZXMuRmllbGRUeXBlEj8KD21lcmdlUG9saWN5VHlwZRgGIAEoDjImLmVzcmlQ",
            "QnVmZmVyLkVzcmlUeXBlcy5NZXJnZVBvbGljeVR5cGUSPwoPc3BsaXRQb2xp",
            "Y3lUeXBlGAcgASgOMiYuZXNyaVBCdWZmZXIuRXNyaVR5cGVzLlNwbGl0UG9s",
            "aWN5VHlwZUIECgJvZhrTAQoTRGF0dW1UcmFuc2Zvcm1hdGlvbhIMCgR3a2lk",
            "GAEgASgNEgsKA3drdBgCIAEoCRIaChJ0cmFuc2Zvcm1EaXJlY3Rpb24YAyAB",
            "KAkSFQoNdHJhbnNmb3JtSnNvbhgEIAEoCRI3CgZmcm9tU1IYBSABKAsyJy5l",
            "c3JpUEJ1ZmZlci5Fc3JpVHlwZXMuU3BhdGlhbFJlZmVyZW5jZRI1CgR0b1NS",
            "GAYgASgLMicuZXNyaVBCdWZmZXIuRXNyaVR5cGVzLlNwYXRpYWxSZWZlcmVu",
            "Y2UiwgEKDEdlb21ldHJ5VHlwZRIZChVlc3JpR2VvbWV0cnlUeXBlUG9pbnQQ",
            "ABIeChplc3JpR2VvbWV0cnlUeXBlTXVsdGlwb2ludBABEhwKGGVzcmlHZW9t",
            "ZXRyeVR5cGVQb2x5bGluZRACEhsKF2VzcmlHZW9tZXRyeVR5cGVQb2x5Z29u",
            "EAMSHgoaZXNyaUdlb21ldHJ5VHlwZU11bHRpcGF0Y2gQBBIcChhlc3JpR2Vv",
            "bWV0cnlUeXBlRW52ZWxvcGUQBSL/AQoOZXNyaVNwYXRpYWxSZWwSHAoYZXNy",
            "aVNwYXRpYWxSZWxJbnRlcnNlY3RzEAASGgoWZXNyaVNwYXRpYWxSZWxDb250",
            "YWlucxABEhkKFWVzcmlTcGF0aWFsUmVsQ3Jvc3NlcxACEiQKIGVzcmlTcGF0",
            "aWFsUmVsRW52ZWxvcGVJbnRlcnNlY3RzEAMSIQodZXNyaVNwYXRpYWxSZWxJ",
            "bmRleEludGVyc2VjdHMQBBIaChZlc3JpU3BhdGlhbFJlbE92ZXJsYXBzEAUS",
            "GQoVZXNyaVNwYXRpYWxSZWxUb3VjaGVzEAYSGAoUZXNyaVNwYXRpYWxSZWxX",
            "aXRoaW4QByJqChNlc3JpRmVhdHVyZUVuY29kaW5nEiMKH2VzcmlGZWF0dXJl",
            "RW5jb2RpbmdfVU5TUEVDSUZJRUQQABIPCgtlc3JpRGVmYXVsdBABEh0KGWVz",
            "cmlDb21wcmVzc2VkU2hhcGVCdWZmZXIQAiKiAQoPTWVyZ2VQb2xpY3lUeXBl",
            "EiMKH2VzcmlNZXJnZVBvbGljeVR5cGVfVU5TUEVDSUZJRUQQABIgChxlc3Jp",
            "TWVyZ2VQb2xpY3lUeXBlU3VtVmFsdWVzEAESIwofZXNyaU1lcmdlUG9saWN5",
            "VHlwZUFyZWFXZWlnaHRlZBACEiMKH2VzcmlNZXJnZVBvbGljeVR5cGVEZWZh",
            "dWx0VmFsdWUQAyKjAQoPU3BsaXRQb2xpY3lUeXBlEiMKH2VzcmlTcGxpdFBv",
            "bGljeVR5cGVfVU5TUEVDSUZJRUQQABIkCiBlc3JpU3BsaXRQb2xpY3lUeXBl",
            "R2VvbWV0cnlSYXRpbxABEiAKHGVzcmlTcGxpdFBvbGljeVR5cGVEdXBsaWNh",
            "dGUQAhIjCh9lc3JpU3BsaXRQb2xpY3lUeXBlRGVmYXVsdFZhbHVlEAMiNQoV",
            "UXVhbnRpemVPcmlnaW5Qb3N0aW9uEg0KCXVwcGVyTGVmdBAAEg0KCWxvd2Vy",
            "TGVmdBABIiIKDFF1YW50aXplTW9kZRIICgR2aWV3EAASCAoEZWRpdBABQh8K",
            "GGNvbS5lc3JpLmFyY2dpcy5wcm90b2J1ZkgD+AEBYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EsriPBuffer.EsriExtendedTypes.EsriExtendedTypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.EsriTypes), global::EsriPBuffer.EsriTypes.Parser, null, null, new[]{ typeof(global::EsriPBuffer.EsriTypes.Types.GeometryType), typeof(global::EsriPBuffer.EsriTypes.Types.esriSpatialRel), typeof(global::EsriPBuffer.EsriTypes.Types.esriFeatureEncoding), typeof(global::EsriPBuffer.EsriTypes.Types.MergePolicyType), typeof(global::EsriPBuffer.EsriTypes.Types.SplitPolicyType), typeof(global::EsriPBuffer.EsriTypes.Types.QuantizeOriginPostion), typeof(global::EsriPBuffer.EsriTypes.Types.QuantizeMode) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.EsriTypes.Types.Scale), global::EsriPBuffer.EsriTypes.Types.Scale.Parser, new[]{ "XScale", "YScale", "MScale", "ZScale" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.EsriTypes.Types.Translate), global::EsriPBuffer.EsriTypes.Types.Translate.Parser, new[]{ "XTranslate", "YTranslate", "MTranslate", "ZTranslate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.EsriTypes.Types.Transform), global::EsriPBuffer.EsriTypes.Types.Transform.Parser, new[]{ "QuantizeOriginPostion", "Scale", "Translate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.EsriTypes.Types.QuantizationParameters), global::EsriPBuffer.EsriTypes.Types.QuantizationParameters.Parser, new[]{ "Extent", "Mode", "QuantizeOriginPostion", "Tolerance" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.EsriTypes.Types.SpatialReference), global::EsriPBuffer.EsriTypes.Types.SpatialReference.Parser, new[]{ "Wkid", "LastestWkid", "VcsWkid", "LatestVcsWkid", "Wkt", "Sdesrid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.EsriTypes.Types.FieldIndex), global::EsriPBuffer.EsriTypes.Types.FieldIndex.Parser, new[]{ "Name", "Fields", "IsAscending", "IsUnique", "Description" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.EsriTypes.Types.Value), global::EsriPBuffer.EsriTypes.Types.Value.Parser, new[]{ "StringValue", "FloatValue", "DoubleValue", "SintValue", "UintValue", "Int64Value", "Uint64Value", "Sint64Value", "BoolValue" }, new[]{ "ValueType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.EsriTypes.Types.Envelope), global::EsriPBuffer.EsriTypes.Types.Envelope.Parser, new[]{ "XMin", "YMin", "XMax", "YMax", "SpatialReference" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.EsriTypes.Types.CodedValue), global::EsriPBuffer.EsriTypes.Types.CodedValue.Parser, new[]{ "Name", "Code" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.EsriTypes.Types.CodedValueDomain), global::EsriPBuffer.EsriTypes.Types.CodedValueDomain.Parser, new[]{ "CodesValues" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.EsriTypes.Types.RangeDomain), global::EsriPBuffer.EsriTypes.Types.RangeDomain.Parser, new[]{ "Range" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.EsriTypes.Types.Domain), global::EsriPBuffer.EsriTypes.Types.Domain.Parser, new[]{ "Type", "Name", "CodedValueDomain", "RangeDomain", "FieldType", "MergePolicyType", "SplitPolicyType" }, new[]{ "Of" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.EsriTypes.Types.DatumTransformation), global::EsriPBuffer.EsriTypes.Types.DatumTransformation.Parser, new[]{ "Wkid", "Wkt", "TransformDirection", "TransformJson", "FromSR", "ToSR" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class EsriTypes : pb::IMessage<EsriTypes>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EsriTypes> _parser = new pb::MessageParser<EsriTypes>(() => new EsriTypes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EsriTypes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EsriPBuffer.EsriTypesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EsriTypes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EsriTypes(EsriTypes other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EsriTypes Clone() {
      return new EsriTypes(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EsriTypes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EsriTypes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EsriTypes other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the EsriTypes message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum GeometryType {
        [pbr::OriginalName("esriGeometryTypePoint")] EsriGeometryTypePoint = 0,
        [pbr::OriginalName("esriGeometryTypeMultipoint")] EsriGeometryTypeMultipoint = 1,
        [pbr::OriginalName("esriGeometryTypePolyline")] EsriGeometryTypePolyline = 2,
        [pbr::OriginalName("esriGeometryTypePolygon")] EsriGeometryTypePolygon = 3,
        [pbr::OriginalName("esriGeometryTypeMultipatch")] EsriGeometryTypeMultipatch = 4,
        [pbr::OriginalName("esriGeometryTypeEnvelope")] EsriGeometryTypeEnvelope = 5,
      }

      public enum esriSpatialRel {
        [pbr::OriginalName("esriSpatialRelIntersects")] Intersects = 0,
        [pbr::OriginalName("esriSpatialRelContains")] Contains = 1,
        [pbr::OriginalName("esriSpatialRelCrosses")] Crosses = 2,
        [pbr::OriginalName("esriSpatialRelEnvelopeIntersects")] EnvelopeIntersects = 3,
        [pbr::OriginalName("esriSpatialRelIndexIntersects")] IndexIntersects = 4,
        [pbr::OriginalName("esriSpatialRelOverlaps")] Overlaps = 5,
        [pbr::OriginalName("esriSpatialRelTouches")] Touches = 6,
        [pbr::OriginalName("esriSpatialRelWithin")] Within = 7,
      }

      public enum esriFeatureEncoding {
        [pbr::OriginalName("esriFeatureEncoding_UNSPECIFIED")] Unspecified = 0,
        [pbr::OriginalName("esriDefault")] EsriDefault = 1,
        [pbr::OriginalName("esriCompressedShapeBuffer")] EsriCompressedShapeBuffer = 2,
      }

      public enum MergePolicyType {
        /// <summary>
        /// This means the value was not set in the PBF message.
        /// </summary>
        [pbr::OriginalName("esriMergePolicyType_UNSPECIFIED")] EsriMergePolicyTypeUnspecified = 0,
        [pbr::OriginalName("esriMergePolicyTypeSumValues")] EsriMergePolicyTypeSumValues = 1,
        [pbr::OriginalName("esriMergePolicyTypeAreaWeighted")] EsriMergePolicyTypeAreaWeighted = 2,
        [pbr::OriginalName("esriMergePolicyTypeDefaultValue")] EsriMergePolicyTypeDefaultValue = 3,
      }

      public enum SplitPolicyType {
        /// <summary>
        /// This means the value was not set in the PBF message.
        /// </summary>
        [pbr::OriginalName("esriSplitPolicyType_UNSPECIFIED")] EsriSplitPolicyTypeUnspecified = 0,
        [pbr::OriginalName("esriSplitPolicyTypeGeometryRatio")] EsriSplitPolicyTypeGeometryRatio = 1,
        [pbr::OriginalName("esriSplitPolicyTypeDuplicate")] EsriSplitPolicyTypeDuplicate = 2,
        [pbr::OriginalName("esriSplitPolicyTypeDefaultValue")] EsriSplitPolicyTypeDefaultValue = 3,
      }

      public enum QuantizeOriginPostion {
        [pbr::OriginalName("upperLeft")] UpperLeft = 0,
        [pbr::OriginalName("lowerLeft")] LowerLeft = 1,
      }

      public enum QuantizeMode {
        [pbr::OriginalName("view")] View = 0,
        [pbr::OriginalName("edit")] Edit = 1,
      }

      public sealed partial class Scale : pb::IMessage<Scale>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Scale> _parser = new pb::MessageParser<Scale>(() => new Scale());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Scale> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::EsriPBuffer.EsriTypes.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Scale() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Scale(Scale other) : this() {
          xScale_ = other.xScale_;
          yScale_ = other.yScale_;
          mScale_ = other.mScale_;
          zScale_ = other.zScale_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Scale Clone() {
          return new Scale(this);
        }

        /// <summary>Field number for the "xScale" field.</summary>
        public const int XScaleFieldNumber = 1;
        private double xScale_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double XScale {
          get { return xScale_; }
          set {
            xScale_ = value;
          }
        }

        /// <summary>Field number for the "yScale" field.</summary>
        public const int YScaleFieldNumber = 2;
        private double yScale_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double YScale {
          get { return yScale_; }
          set {
            yScale_ = value;
          }
        }

        /// <summary>Field number for the "mScale" field.</summary>
        public const int MScaleFieldNumber = 3;
        private double mScale_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double MScale {
          get { return mScale_; }
          set {
            mScale_ = value;
          }
        }

        /// <summary>Field number for the "zScale" field.</summary>
        public const int ZScaleFieldNumber = 4;
        private double zScale_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double ZScale {
          get { return zScale_; }
          set {
            zScale_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Scale);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Scale other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(XScale, other.XScale)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(YScale, other.YScale)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MScale, other.MScale)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ZScale, other.ZScale)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (XScale != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(XScale);
          if (YScale != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(YScale);
          if (MScale != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MScale);
          if (ZScale != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ZScale);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (XScale != 0D) {
            output.WriteRawTag(9);
            output.WriteDouble(XScale);
          }
          if (YScale != 0D) {
            output.WriteRawTag(17);
            output.WriteDouble(YScale);
          }
          if (MScale != 0D) {
            output.WriteRawTag(25);
            output.WriteDouble(MScale);
          }
          if (ZScale != 0D) {
            output.WriteRawTag(33);
            output.WriteDouble(ZScale);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (XScale != 0D) {
            output.WriteRawTag(9);
            output.WriteDouble(XScale);
          }
          if (YScale != 0D) {
            output.WriteRawTag(17);
            output.WriteDouble(YScale);
          }
          if (MScale != 0D) {
            output.WriteRawTag(25);
            output.WriteDouble(MScale);
          }
          if (ZScale != 0D) {
            output.WriteRawTag(33);
            output.WriteDouble(ZScale);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (XScale != 0D) {
            size += 1 + 8;
          }
          if (YScale != 0D) {
            size += 1 + 8;
          }
          if (MScale != 0D) {
            size += 1 + 8;
          }
          if (ZScale != 0D) {
            size += 1 + 8;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Scale other) {
          if (other == null) {
            return;
          }
          if (other.XScale != 0D) {
            XScale = other.XScale;
          }
          if (other.YScale != 0D) {
            YScale = other.YScale;
          }
          if (other.MScale != 0D) {
            MScale = other.MScale;
          }
          if (other.ZScale != 0D) {
            ZScale = other.ZScale;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 9: {
                XScale = input.ReadDouble();
                break;
              }
              case 17: {
                YScale = input.ReadDouble();
                break;
              }
              case 25: {
                MScale = input.ReadDouble();
                break;
              }
              case 33: {
                ZScale = input.ReadDouble();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 9: {
                XScale = input.ReadDouble();
                break;
              }
              case 17: {
                YScale = input.ReadDouble();
                break;
              }
              case 25: {
                MScale = input.ReadDouble();
                break;
              }
              case 33: {
                ZScale = input.ReadDouble();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Translate : pb::IMessage<Translate>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Translate> _parser = new pb::MessageParser<Translate>(() => new Translate());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Translate> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::EsriPBuffer.EsriTypes.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Translate() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Translate(Translate other) : this() {
          xTranslate_ = other.xTranslate_;
          yTranslate_ = other.yTranslate_;
          mTranslate_ = other.mTranslate_;
          zTranslate_ = other.zTranslate_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Translate Clone() {
          return new Translate(this);
        }

        /// <summary>Field number for the "xTranslate" field.</summary>
        public const int XTranslateFieldNumber = 1;
        private double xTranslate_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double XTranslate {
          get { return xTranslate_; }
          set {
            xTranslate_ = value;
          }
        }

        /// <summary>Field number for the "yTranslate" field.</summary>
        public const int YTranslateFieldNumber = 2;
        private double yTranslate_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double YTranslate {
          get { return yTranslate_; }
          set {
            yTranslate_ = value;
          }
        }

        /// <summary>Field number for the "mTranslate" field.</summary>
        public const int MTranslateFieldNumber = 3;
        private double mTranslate_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double MTranslate {
          get { return mTranslate_; }
          set {
            mTranslate_ = value;
          }
        }

        /// <summary>Field number for the "zTranslate" field.</summary>
        public const int ZTranslateFieldNumber = 4;
        private double zTranslate_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double ZTranslate {
          get { return zTranslate_; }
          set {
            zTranslate_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Translate);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Translate other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(XTranslate, other.XTranslate)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(YTranslate, other.YTranslate)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MTranslate, other.MTranslate)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ZTranslate, other.ZTranslate)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (XTranslate != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(XTranslate);
          if (YTranslate != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(YTranslate);
          if (MTranslate != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MTranslate);
          if (ZTranslate != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ZTranslate);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (XTranslate != 0D) {
            output.WriteRawTag(9);
            output.WriteDouble(XTranslate);
          }
          if (YTranslate != 0D) {
            output.WriteRawTag(17);
            output.WriteDouble(YTranslate);
          }
          if (MTranslate != 0D) {
            output.WriteRawTag(25);
            output.WriteDouble(MTranslate);
          }
          if (ZTranslate != 0D) {
            output.WriteRawTag(33);
            output.WriteDouble(ZTranslate);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (XTranslate != 0D) {
            output.WriteRawTag(9);
            output.WriteDouble(XTranslate);
          }
          if (YTranslate != 0D) {
            output.WriteRawTag(17);
            output.WriteDouble(YTranslate);
          }
          if (MTranslate != 0D) {
            output.WriteRawTag(25);
            output.WriteDouble(MTranslate);
          }
          if (ZTranslate != 0D) {
            output.WriteRawTag(33);
            output.WriteDouble(ZTranslate);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (XTranslate != 0D) {
            size += 1 + 8;
          }
          if (YTranslate != 0D) {
            size += 1 + 8;
          }
          if (MTranslate != 0D) {
            size += 1 + 8;
          }
          if (ZTranslate != 0D) {
            size += 1 + 8;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Translate other) {
          if (other == null) {
            return;
          }
          if (other.XTranslate != 0D) {
            XTranslate = other.XTranslate;
          }
          if (other.YTranslate != 0D) {
            YTranslate = other.YTranslate;
          }
          if (other.MTranslate != 0D) {
            MTranslate = other.MTranslate;
          }
          if (other.ZTranslate != 0D) {
            ZTranslate = other.ZTranslate;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 9: {
                XTranslate = input.ReadDouble();
                break;
              }
              case 17: {
                YTranslate = input.ReadDouble();
                break;
              }
              case 25: {
                MTranslate = input.ReadDouble();
                break;
              }
              case 33: {
                ZTranslate = input.ReadDouble();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 9: {
                XTranslate = input.ReadDouble();
                break;
              }
              case 17: {
                YTranslate = input.ReadDouble();
                break;
              }
              case 25: {
                MTranslate = input.ReadDouble();
                break;
              }
              case 33: {
                ZTranslate = input.ReadDouble();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Transform : pb::IMessage<Transform>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Transform> _parser = new pb::MessageParser<Transform>(() => new Transform());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Transform> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::EsriPBuffer.EsriTypes.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Transform() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Transform(Transform other) : this() {
          quantizeOriginPostion_ = other.quantizeOriginPostion_;
          scale_ = other.scale_ != null ? other.scale_.Clone() : null;
          translate_ = other.translate_ != null ? other.translate_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Transform Clone() {
          return new Transform(this);
        }

        /// <summary>Field number for the "quantizeOriginPostion" field.</summary>
        public const int QuantizeOriginPostionFieldNumber = 1;
        private global::EsriPBuffer.EsriTypes.Types.QuantizeOriginPostion quantizeOriginPostion_ = global::EsriPBuffer.EsriTypes.Types.QuantizeOriginPostion.UpperLeft;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::EsriPBuffer.EsriTypes.Types.QuantizeOriginPostion QuantizeOriginPostion {
          get { return quantizeOriginPostion_; }
          set {
            quantizeOriginPostion_ = value;
          }
        }

        /// <summary>Field number for the "scale" field.</summary>
        public const int ScaleFieldNumber = 2;
        private global::EsriPBuffer.EsriTypes.Types.Scale scale_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::EsriPBuffer.EsriTypes.Types.Scale Scale {
          get { return scale_; }
          set {
            scale_ = value;
          }
        }

        /// <summary>Field number for the "translate" field.</summary>
        public const int TranslateFieldNumber = 3;
        private global::EsriPBuffer.EsriTypes.Types.Translate translate_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::EsriPBuffer.EsriTypes.Types.Translate Translate {
          get { return translate_; }
          set {
            translate_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Transform);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Transform other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (QuantizeOriginPostion != other.QuantizeOriginPostion) return false;
          if (!object.Equals(Scale, other.Scale)) return false;
          if (!object.Equals(Translate, other.Translate)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (QuantizeOriginPostion != global::EsriPBuffer.EsriTypes.Types.QuantizeOriginPostion.UpperLeft) hash ^= QuantizeOriginPostion.GetHashCode();
          if (scale_ != null) hash ^= Scale.GetHashCode();
          if (translate_ != null) hash ^= Translate.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (QuantizeOriginPostion != global::EsriPBuffer.EsriTypes.Types.QuantizeOriginPostion.UpperLeft) {
            output.WriteRawTag(8);
            output.WriteEnum((int) QuantizeOriginPostion);
          }
          if (scale_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Scale);
          }
          if (translate_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Translate);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (QuantizeOriginPostion != global::EsriPBuffer.EsriTypes.Types.QuantizeOriginPostion.UpperLeft) {
            output.WriteRawTag(8);
            output.WriteEnum((int) QuantizeOriginPostion);
          }
          if (scale_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Scale);
          }
          if (translate_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Translate);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (QuantizeOriginPostion != global::EsriPBuffer.EsriTypes.Types.QuantizeOriginPostion.UpperLeft) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) QuantizeOriginPostion);
          }
          if (scale_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scale);
          }
          if (translate_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Translate);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Transform other) {
          if (other == null) {
            return;
          }
          if (other.QuantizeOriginPostion != global::EsriPBuffer.EsriTypes.Types.QuantizeOriginPostion.UpperLeft) {
            QuantizeOriginPostion = other.QuantizeOriginPostion;
          }
          if (other.scale_ != null) {
            if (scale_ == null) {
              Scale = new global::EsriPBuffer.EsriTypes.Types.Scale();
            }
            Scale.MergeFrom(other.Scale);
          }
          if (other.translate_ != null) {
            if (translate_ == null) {
              Translate = new global::EsriPBuffer.EsriTypes.Types.Translate();
            }
            Translate.MergeFrom(other.Translate);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                QuantizeOriginPostion = (global::EsriPBuffer.EsriTypes.Types.QuantizeOriginPostion) input.ReadEnum();
                break;
              }
              case 18: {
                if (scale_ == null) {
                  Scale = new global::EsriPBuffer.EsriTypes.Types.Scale();
                }
                input.ReadMessage(Scale);
                break;
              }
              case 26: {
                if (translate_ == null) {
                  Translate = new global::EsriPBuffer.EsriTypes.Types.Translate();
                }
                input.ReadMessage(Translate);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                QuantizeOriginPostion = (global::EsriPBuffer.EsriTypes.Types.QuantizeOriginPostion) input.ReadEnum();
                break;
              }
              case 18: {
                if (scale_ == null) {
                  Scale = new global::EsriPBuffer.EsriTypes.Types.Scale();
                }
                input.ReadMessage(Scale);
                break;
              }
              case 26: {
                if (translate_ == null) {
                  Translate = new global::EsriPBuffer.EsriTypes.Types.Translate();
                }
                input.ReadMessage(Translate);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class QuantizationParameters : pb::IMessage<QuantizationParameters>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<QuantizationParameters> _parser = new pb::MessageParser<QuantizationParameters>(() => new QuantizationParameters());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<QuantizationParameters> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::EsriPBuffer.EsriTypes.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public QuantizationParameters() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public QuantizationParameters(QuantizationParameters other) : this() {
          extent_ = other.extent_ != null ? other.extent_.Clone() : null;
          mode_ = other.mode_;
          quantizeOriginPostion_ = other.quantizeOriginPostion_;
          tolerance_ = other.tolerance_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public QuantizationParameters Clone() {
          return new QuantizationParameters(this);
        }

        /// <summary>Field number for the "extent" field.</summary>
        public const int ExtentFieldNumber = 1;
        private global::EsriPBuffer.EsriTypes.Types.Envelope extent_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::EsriPBuffer.EsriTypes.Types.Envelope Extent {
          get { return extent_; }
          set {
            extent_ = value;
          }
        }

        /// <summary>Field number for the "mode" field.</summary>
        public const int ModeFieldNumber = 2;
        private global::EsriPBuffer.EsriTypes.Types.QuantizeMode mode_ = global::EsriPBuffer.EsriTypes.Types.QuantizeMode.View;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::EsriPBuffer.EsriTypes.Types.QuantizeMode Mode {
          get { return mode_; }
          set {
            mode_ = value;
          }
        }

        /// <summary>Field number for the "quantizeOriginPostion" field.</summary>
        public const int QuantizeOriginPostionFieldNumber = 3;
        private global::EsriPBuffer.EsriTypes.Types.QuantizeOriginPostion quantizeOriginPostion_ = global::EsriPBuffer.EsriTypes.Types.QuantizeOriginPostion.UpperLeft;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::EsriPBuffer.EsriTypes.Types.QuantizeOriginPostion QuantizeOriginPostion {
          get { return quantizeOriginPostion_; }
          set {
            quantizeOriginPostion_ = value;
          }
        }

        /// <summary>Field number for the "tolerance" field.</summary>
        public const int ToleranceFieldNumber = 4;
        private double tolerance_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double Tolerance {
          get { return tolerance_; }
          set {
            tolerance_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as QuantizationParameters);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(QuantizationParameters other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Extent, other.Extent)) return false;
          if (Mode != other.Mode) return false;
          if (QuantizeOriginPostion != other.QuantizeOriginPostion) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Tolerance, other.Tolerance)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (extent_ != null) hash ^= Extent.GetHashCode();
          if (Mode != global::EsriPBuffer.EsriTypes.Types.QuantizeMode.View) hash ^= Mode.GetHashCode();
          if (QuantizeOriginPostion != global::EsriPBuffer.EsriTypes.Types.QuantizeOriginPostion.UpperLeft) hash ^= QuantizeOriginPostion.GetHashCode();
          if (Tolerance != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Tolerance);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (extent_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Extent);
          }
          if (Mode != global::EsriPBuffer.EsriTypes.Types.QuantizeMode.View) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Mode);
          }
          if (QuantizeOriginPostion != global::EsriPBuffer.EsriTypes.Types.QuantizeOriginPostion.UpperLeft) {
            output.WriteRawTag(24);
            output.WriteEnum((int) QuantizeOriginPostion);
          }
          if (Tolerance != 0D) {
            output.WriteRawTag(33);
            output.WriteDouble(Tolerance);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (extent_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Extent);
          }
          if (Mode != global::EsriPBuffer.EsriTypes.Types.QuantizeMode.View) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Mode);
          }
          if (QuantizeOriginPostion != global::EsriPBuffer.EsriTypes.Types.QuantizeOriginPostion.UpperLeft) {
            output.WriteRawTag(24);
            output.WriteEnum((int) QuantizeOriginPostion);
          }
          if (Tolerance != 0D) {
            output.WriteRawTag(33);
            output.WriteDouble(Tolerance);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (extent_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Extent);
          }
          if (Mode != global::EsriPBuffer.EsriTypes.Types.QuantizeMode.View) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Mode);
          }
          if (QuantizeOriginPostion != global::EsriPBuffer.EsriTypes.Types.QuantizeOriginPostion.UpperLeft) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) QuantizeOriginPostion);
          }
          if (Tolerance != 0D) {
            size += 1 + 8;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(QuantizationParameters other) {
          if (other == null) {
            return;
          }
          if (other.extent_ != null) {
            if (extent_ == null) {
              Extent = new global::EsriPBuffer.EsriTypes.Types.Envelope();
            }
            Extent.MergeFrom(other.Extent);
          }
          if (other.Mode != global::EsriPBuffer.EsriTypes.Types.QuantizeMode.View) {
            Mode = other.Mode;
          }
          if (other.QuantizeOriginPostion != global::EsriPBuffer.EsriTypes.Types.QuantizeOriginPostion.UpperLeft) {
            QuantizeOriginPostion = other.QuantizeOriginPostion;
          }
          if (other.Tolerance != 0D) {
            Tolerance = other.Tolerance;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (extent_ == null) {
                  Extent = new global::EsriPBuffer.EsriTypes.Types.Envelope();
                }
                input.ReadMessage(Extent);
                break;
              }
              case 16: {
                Mode = (global::EsriPBuffer.EsriTypes.Types.QuantizeMode) input.ReadEnum();
                break;
              }
              case 24: {
                QuantizeOriginPostion = (global::EsriPBuffer.EsriTypes.Types.QuantizeOriginPostion) input.ReadEnum();
                break;
              }
              case 33: {
                Tolerance = input.ReadDouble();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (extent_ == null) {
                  Extent = new global::EsriPBuffer.EsriTypes.Types.Envelope();
                }
                input.ReadMessage(Extent);
                break;
              }
              case 16: {
                Mode = (global::EsriPBuffer.EsriTypes.Types.QuantizeMode) input.ReadEnum();
                break;
              }
              case 24: {
                QuantizeOriginPostion = (global::EsriPBuffer.EsriTypes.Types.QuantizeOriginPostion) input.ReadEnum();
                break;
              }
              case 33: {
                Tolerance = input.ReadDouble();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class SpatialReference : pb::IMessage<SpatialReference>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SpatialReference> _parser = new pb::MessageParser<SpatialReference>(() => new SpatialReference());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SpatialReference> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::EsriPBuffer.EsriTypes.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SpatialReference() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SpatialReference(SpatialReference other) : this() {
          wkid_ = other.wkid_;
          lastestWkid_ = other.lastestWkid_;
          vcsWkid_ = other.vcsWkid_;
          latestVcsWkid_ = other.latestVcsWkid_;
          wkt_ = other.wkt_;
          sdesrid_ = other.sdesrid_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SpatialReference Clone() {
          return new SpatialReference(this);
        }

        /// <summary>Field number for the "wkid" field.</summary>
        public const int WkidFieldNumber = 1;
        private uint wkid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Wkid {
          get { return wkid_; }
          set {
            wkid_ = value;
          }
        }

        /// <summary>Field number for the "lastestWkid" field.</summary>
        public const int LastestWkidFieldNumber = 2;
        private uint lastestWkid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint LastestWkid {
          get { return lastestWkid_; }
          set {
            lastestWkid_ = value;
          }
        }

        /// <summary>Field number for the "vcsWkid" field.</summary>
        public const int VcsWkidFieldNumber = 3;
        private uint vcsWkid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint VcsWkid {
          get { return vcsWkid_; }
          set {
            vcsWkid_ = value;
          }
        }

        /// <summary>Field number for the "latestVcsWkid" field.</summary>
        public const int LatestVcsWkidFieldNumber = 4;
        private uint latestVcsWkid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint LatestVcsWkid {
          get { return latestVcsWkid_; }
          set {
            latestVcsWkid_ = value;
          }
        }

        /// <summary>Field number for the "wkt" field.</summary>
        public const int WktFieldNumber = 5;
        private string wkt_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Wkt {
          get { return wkt_; }
          set {
            wkt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "sdesrid" field.</summary>
        public const int SdesridFieldNumber = 6;
        private uint sdesrid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Sdesrid {
          get { return sdesrid_; }
          set {
            sdesrid_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SpatialReference);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SpatialReference other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Wkid != other.Wkid) return false;
          if (LastestWkid != other.LastestWkid) return false;
          if (VcsWkid != other.VcsWkid) return false;
          if (LatestVcsWkid != other.LatestVcsWkid) return false;
          if (Wkt != other.Wkt) return false;
          if (Sdesrid != other.Sdesrid) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Wkid != 0) hash ^= Wkid.GetHashCode();
          if (LastestWkid != 0) hash ^= LastestWkid.GetHashCode();
          if (VcsWkid != 0) hash ^= VcsWkid.GetHashCode();
          if (LatestVcsWkid != 0) hash ^= LatestVcsWkid.GetHashCode();
          if (Wkt.Length != 0) hash ^= Wkt.GetHashCode();
          if (Sdesrid != 0) hash ^= Sdesrid.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Wkid != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(Wkid);
          }
          if (LastestWkid != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(LastestWkid);
          }
          if (VcsWkid != 0) {
            output.WriteRawTag(24);
            output.WriteUInt32(VcsWkid);
          }
          if (LatestVcsWkid != 0) {
            output.WriteRawTag(32);
            output.WriteUInt32(LatestVcsWkid);
          }
          if (Wkt.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Wkt);
          }
          if (Sdesrid != 0) {
            output.WriteRawTag(48);
            output.WriteUInt32(Sdesrid);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Wkid != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(Wkid);
          }
          if (LastestWkid != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(LastestWkid);
          }
          if (VcsWkid != 0) {
            output.WriteRawTag(24);
            output.WriteUInt32(VcsWkid);
          }
          if (LatestVcsWkid != 0) {
            output.WriteRawTag(32);
            output.WriteUInt32(LatestVcsWkid);
          }
          if (Wkt.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Wkt);
          }
          if (Sdesrid != 0) {
            output.WriteRawTag(48);
            output.WriteUInt32(Sdesrid);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Wkid != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Wkid);
          }
          if (LastestWkid != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LastestWkid);
          }
          if (VcsWkid != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(VcsWkid);
          }
          if (LatestVcsWkid != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LatestVcsWkid);
          }
          if (Wkt.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Wkt);
          }
          if (Sdesrid != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Sdesrid);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SpatialReference other) {
          if (other == null) {
            return;
          }
          if (other.Wkid != 0) {
            Wkid = other.Wkid;
          }
          if (other.LastestWkid != 0) {
            LastestWkid = other.LastestWkid;
          }
          if (other.VcsWkid != 0) {
            VcsWkid = other.VcsWkid;
          }
          if (other.LatestVcsWkid != 0) {
            LatestVcsWkid = other.LatestVcsWkid;
          }
          if (other.Wkt.Length != 0) {
            Wkt = other.Wkt;
          }
          if (other.Sdesrid != 0) {
            Sdesrid = other.Sdesrid;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Wkid = input.ReadUInt32();
                break;
              }
              case 16: {
                LastestWkid = input.ReadUInt32();
                break;
              }
              case 24: {
                VcsWkid = input.ReadUInt32();
                break;
              }
              case 32: {
                LatestVcsWkid = input.ReadUInt32();
                break;
              }
              case 42: {
                Wkt = input.ReadString();
                break;
              }
              case 48: {
                Sdesrid = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Wkid = input.ReadUInt32();
                break;
              }
              case 16: {
                LastestWkid = input.ReadUInt32();
                break;
              }
              case 24: {
                VcsWkid = input.ReadUInt32();
                break;
              }
              case 32: {
                LatestVcsWkid = input.ReadUInt32();
                break;
              }
              case 42: {
                Wkt = input.ReadString();
                break;
              }
              case 48: {
                Sdesrid = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class FieldIndex : pb::IMessage<FieldIndex>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<FieldIndex> _parser = new pb::MessageParser<FieldIndex>(() => new FieldIndex());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<FieldIndex> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::EsriPBuffer.EsriTypes.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FieldIndex() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FieldIndex(FieldIndex other) : this() {
          name_ = other.name_;
          fields_ = other.fields_;
          isAscending_ = other.isAscending_;
          isUnique_ = other.isUnique_;
          description_ = other.description_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FieldIndex Clone() {
          return new FieldIndex(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "fields" field.</summary>
        public const int FieldsFieldNumber = 2;
        private string fields_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Fields {
          get { return fields_; }
          set {
            fields_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "isAscending" field.</summary>
        public const int IsAscendingFieldNumber = 3;
        private bool isAscending_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsAscending {
          get { return isAscending_; }
          set {
            isAscending_ = value;
          }
        }

        /// <summary>Field number for the "isUnique" field.</summary>
        public const int IsUniqueFieldNumber = 4;
        private bool isUnique_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsUnique {
          get { return isUnique_; }
          set {
            isUnique_ = value;
          }
        }

        /// <summary>Field number for the "description" field.</summary>
        public const int DescriptionFieldNumber = 5;
        private string description_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Description {
          get { return description_; }
          set {
            description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as FieldIndex);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(FieldIndex other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (Fields != other.Fields) return false;
          if (IsAscending != other.IsAscending) return false;
          if (IsUnique != other.IsUnique) return false;
          if (Description != other.Description) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Fields.Length != 0) hash ^= Fields.GetHashCode();
          if (IsAscending != false) hash ^= IsAscending.GetHashCode();
          if (IsUnique != false) hash ^= IsUnique.GetHashCode();
          if (Description.Length != 0) hash ^= Description.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (Fields.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Fields);
          }
          if (IsAscending != false) {
            output.WriteRawTag(24);
            output.WriteBool(IsAscending);
          }
          if (IsUnique != false) {
            output.WriteRawTag(32);
            output.WriteBool(IsUnique);
          }
          if (Description.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Description);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (Fields.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Fields);
          }
          if (IsAscending != false) {
            output.WriteRawTag(24);
            output.WriteBool(IsAscending);
          }
          if (IsUnique != false) {
            output.WriteRawTag(32);
            output.WriteBool(IsUnique);
          }
          if (Description.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Description);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Fields.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Fields);
          }
          if (IsAscending != false) {
            size += 1 + 1;
          }
          if (IsUnique != false) {
            size += 1 + 1;
          }
          if (Description.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(FieldIndex other) {
          if (other == null) {
            return;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Fields.Length != 0) {
            Fields = other.Fields;
          }
          if (other.IsAscending != false) {
            IsAscending = other.IsAscending;
          }
          if (other.IsUnique != false) {
            IsUnique = other.IsUnique;
          }
          if (other.Description.Length != 0) {
            Description = other.Description;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                Fields = input.ReadString();
                break;
              }
              case 24: {
                IsAscending = input.ReadBool();
                break;
              }
              case 32: {
                IsUnique = input.ReadBool();
                break;
              }
              case 42: {
                Description = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                Fields = input.ReadString();
                break;
              }
              case 24: {
                IsAscending = input.ReadBool();
                break;
              }
              case 32: {
                IsUnique = input.ReadBool();
                break;
              }
              case 42: {
                Description = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Value : pb::IMessage<Value>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Value> _parser = new pb::MessageParser<Value>(() => new Value());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Value> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::EsriPBuffer.EsriTypes.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Value() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Value(Value other) : this() {
          switch (other.ValueTypeCase) {
            case ValueTypeOneofCase.StringValue:
              StringValue = other.StringValue;
              break;
            case ValueTypeOneofCase.FloatValue:
              FloatValue = other.FloatValue;
              break;
            case ValueTypeOneofCase.DoubleValue:
              DoubleValue = other.DoubleValue;
              break;
            case ValueTypeOneofCase.SintValue:
              SintValue = other.SintValue;
              break;
            case ValueTypeOneofCase.UintValue:
              UintValue = other.UintValue;
              break;
            case ValueTypeOneofCase.Int64Value:
              Int64Value = other.Int64Value;
              break;
            case ValueTypeOneofCase.Uint64Value:
              Uint64Value = other.Uint64Value;
              break;
            case ValueTypeOneofCase.Sint64Value:
              Sint64Value = other.Sint64Value;
              break;
            case ValueTypeOneofCase.BoolValue:
              BoolValue = other.BoolValue;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Value Clone() {
          return new Value(this);
        }

        /// <summary>Field number for the "string_value" field.</summary>
        public const int StringValueFieldNumber = 1;
        /// <summary>
        /// Exactly one of these values must be present in a valid message
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StringValue {
          get { return valueTypeCase_ == ValueTypeOneofCase.StringValue ? (string) valueType_ : ""; }
          set {
            valueType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            valueTypeCase_ = ValueTypeOneofCase.StringValue;
          }
        }

        /// <summary>Field number for the "float_value" field.</summary>
        public const int FloatValueFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float FloatValue {
          get { return valueTypeCase_ == ValueTypeOneofCase.FloatValue ? (float) valueType_ : 0F; }
          set {
            valueType_ = value;
            valueTypeCase_ = ValueTypeOneofCase.FloatValue;
          }
        }

        /// <summary>Field number for the "double_value" field.</summary>
        public const int DoubleValueFieldNumber = 3;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double DoubleValue {
          get { return valueTypeCase_ == ValueTypeOneofCase.DoubleValue ? (double) valueType_ : 0D; }
          set {
            valueType_ = value;
            valueTypeCase_ = ValueTypeOneofCase.DoubleValue;
          }
        }

        /// <summary>Field number for the "sint_value" field.</summary>
        public const int SintValueFieldNumber = 4;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int SintValue {
          get { return valueTypeCase_ == ValueTypeOneofCase.SintValue ? (int) valueType_ : 0; }
          set {
            valueType_ = value;
            valueTypeCase_ = ValueTypeOneofCase.SintValue;
          }
        }

        /// <summary>Field number for the "uint_value" field.</summary>
        public const int UintValueFieldNumber = 5;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint UintValue {
          get { return valueTypeCase_ == ValueTypeOneofCase.UintValue ? (uint) valueType_ : 0; }
          set {
            valueType_ = value;
            valueTypeCase_ = ValueTypeOneofCase.UintValue;
          }
        }

        /// <summary>Field number for the "int64_value" field.</summary>
        public const int Int64ValueFieldNumber = 6;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Int64Value {
          get { return valueTypeCase_ == ValueTypeOneofCase.Int64Value ? (long) valueType_ : 0L; }
          set {
            valueType_ = value;
            valueTypeCase_ = ValueTypeOneofCase.Int64Value;
          }
        }

        /// <summary>Field number for the "uint64_value" field.</summary>
        public const int Uint64ValueFieldNumber = 7;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Uint64Value {
          get { return valueTypeCase_ == ValueTypeOneofCase.Uint64Value ? (ulong) valueType_ : 0UL; }
          set {
            valueType_ = value;
            valueTypeCase_ = ValueTypeOneofCase.Uint64Value;
          }
        }

        /// <summary>Field number for the "sint64_value" field.</summary>
        public const int Sint64ValueFieldNumber = 8;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Sint64Value {
          get { return valueTypeCase_ == ValueTypeOneofCase.Sint64Value ? (long) valueType_ : 0L; }
          set {
            valueType_ = value;
            valueTypeCase_ = ValueTypeOneofCase.Sint64Value;
          }
        }

        /// <summary>Field number for the "bool_value" field.</summary>
        public const int BoolValueFieldNumber = 9;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool BoolValue {
          get { return valueTypeCase_ == ValueTypeOneofCase.BoolValue ? (bool) valueType_ : false; }
          set {
            valueType_ = value;
            valueTypeCase_ = ValueTypeOneofCase.BoolValue;
          }
        }

        private object valueType_;
        /// <summary>Enum of possible cases for the "value_type" oneof.</summary>
        public enum ValueTypeOneofCase {
          None = 0,
          StringValue = 1,
          FloatValue = 2,
          DoubleValue = 3,
          SintValue = 4,
          UintValue = 5,
          Int64Value = 6,
          Uint64Value = 7,
          Sint64Value = 8,
          BoolValue = 9,
        }
        private ValueTypeOneofCase valueTypeCase_ = ValueTypeOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ValueTypeOneofCase ValueTypeCase {
          get { return valueTypeCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearValueType() {
          valueTypeCase_ = ValueTypeOneofCase.None;
          valueType_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Value);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Value other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (StringValue != other.StringValue) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FloatValue, other.FloatValue)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DoubleValue, other.DoubleValue)) return false;
          if (SintValue != other.SintValue) return false;
          if (UintValue != other.UintValue) return false;
          if (Int64Value != other.Int64Value) return false;
          if (Uint64Value != other.Uint64Value) return false;
          if (Sint64Value != other.Sint64Value) return false;
          if (BoolValue != other.BoolValue) return false;
          if (ValueTypeCase != other.ValueTypeCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (valueTypeCase_ == ValueTypeOneofCase.StringValue) hash ^= StringValue.GetHashCode();
          if (valueTypeCase_ == ValueTypeOneofCase.FloatValue) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FloatValue);
          if (valueTypeCase_ == ValueTypeOneofCase.DoubleValue) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DoubleValue);
          if (valueTypeCase_ == ValueTypeOneofCase.SintValue) hash ^= SintValue.GetHashCode();
          if (valueTypeCase_ == ValueTypeOneofCase.UintValue) hash ^= UintValue.GetHashCode();
          if (valueTypeCase_ == ValueTypeOneofCase.Int64Value) hash ^= Int64Value.GetHashCode();
          if (valueTypeCase_ == ValueTypeOneofCase.Uint64Value) hash ^= Uint64Value.GetHashCode();
          if (valueTypeCase_ == ValueTypeOneofCase.Sint64Value) hash ^= Sint64Value.GetHashCode();
          if (valueTypeCase_ == ValueTypeOneofCase.BoolValue) hash ^= BoolValue.GetHashCode();
          hash ^= (int) valueTypeCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (valueTypeCase_ == ValueTypeOneofCase.StringValue) {
            output.WriteRawTag(10);
            output.WriteString(StringValue);
          }
          if (valueTypeCase_ == ValueTypeOneofCase.FloatValue) {
            output.WriteRawTag(21);
            output.WriteFloat(FloatValue);
          }
          if (valueTypeCase_ == ValueTypeOneofCase.DoubleValue) {
            output.WriteRawTag(25);
            output.WriteDouble(DoubleValue);
          }
          if (valueTypeCase_ == ValueTypeOneofCase.SintValue) {
            output.WriteRawTag(32);
            output.WriteSInt32(SintValue);
          }
          if (valueTypeCase_ == ValueTypeOneofCase.UintValue) {
            output.WriteRawTag(40);
            output.WriteUInt32(UintValue);
          }
          if (valueTypeCase_ == ValueTypeOneofCase.Int64Value) {
            output.WriteRawTag(48);
            output.WriteInt64(Int64Value);
          }
          if (valueTypeCase_ == ValueTypeOneofCase.Uint64Value) {
            output.WriteRawTag(56);
            output.WriteUInt64(Uint64Value);
          }
          if (valueTypeCase_ == ValueTypeOneofCase.Sint64Value) {
            output.WriteRawTag(64);
            output.WriteSInt64(Sint64Value);
          }
          if (valueTypeCase_ == ValueTypeOneofCase.BoolValue) {
            output.WriteRawTag(72);
            output.WriteBool(BoolValue);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (valueTypeCase_ == ValueTypeOneofCase.StringValue) {
            output.WriteRawTag(10);
            output.WriteString(StringValue);
          }
          if (valueTypeCase_ == ValueTypeOneofCase.FloatValue) {
            output.WriteRawTag(21);
            output.WriteFloat(FloatValue);
          }
          if (valueTypeCase_ == ValueTypeOneofCase.DoubleValue) {
            output.WriteRawTag(25);
            output.WriteDouble(DoubleValue);
          }
          if (valueTypeCase_ == ValueTypeOneofCase.SintValue) {
            output.WriteRawTag(32);
            output.WriteSInt32(SintValue);
          }
          if (valueTypeCase_ == ValueTypeOneofCase.UintValue) {
            output.WriteRawTag(40);
            output.WriteUInt32(UintValue);
          }
          if (valueTypeCase_ == ValueTypeOneofCase.Int64Value) {
            output.WriteRawTag(48);
            output.WriteInt64(Int64Value);
          }
          if (valueTypeCase_ == ValueTypeOneofCase.Uint64Value) {
            output.WriteRawTag(56);
            output.WriteUInt64(Uint64Value);
          }
          if (valueTypeCase_ == ValueTypeOneofCase.Sint64Value) {
            output.WriteRawTag(64);
            output.WriteSInt64(Sint64Value);
          }
          if (valueTypeCase_ == ValueTypeOneofCase.BoolValue) {
            output.WriteRawTag(72);
            output.WriteBool(BoolValue);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (valueTypeCase_ == ValueTypeOneofCase.StringValue) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(StringValue);
          }
          if (valueTypeCase_ == ValueTypeOneofCase.FloatValue) {
            size += 1 + 4;
          }
          if (valueTypeCase_ == ValueTypeOneofCase.DoubleValue) {
            size += 1 + 8;
          }
          if (valueTypeCase_ == ValueTypeOneofCase.SintValue) {
            size += 1 + pb::CodedOutputStream.ComputeSInt32Size(SintValue);
          }
          if (valueTypeCase_ == ValueTypeOneofCase.UintValue) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UintValue);
          }
          if (valueTypeCase_ == ValueTypeOneofCase.Int64Value) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Int64Value);
          }
          if (valueTypeCase_ == ValueTypeOneofCase.Uint64Value) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Uint64Value);
          }
          if (valueTypeCase_ == ValueTypeOneofCase.Sint64Value) {
            size += 1 + pb::CodedOutputStream.ComputeSInt64Size(Sint64Value);
          }
          if (valueTypeCase_ == ValueTypeOneofCase.BoolValue) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Value other) {
          if (other == null) {
            return;
          }
          switch (other.ValueTypeCase) {
            case ValueTypeOneofCase.StringValue:
              StringValue = other.StringValue;
              break;
            case ValueTypeOneofCase.FloatValue:
              FloatValue = other.FloatValue;
              break;
            case ValueTypeOneofCase.DoubleValue:
              DoubleValue = other.DoubleValue;
              break;
            case ValueTypeOneofCase.SintValue:
              SintValue = other.SintValue;
              break;
            case ValueTypeOneofCase.UintValue:
              UintValue = other.UintValue;
              break;
            case ValueTypeOneofCase.Int64Value:
              Int64Value = other.Int64Value;
              break;
            case ValueTypeOneofCase.Uint64Value:
              Uint64Value = other.Uint64Value;
              break;
            case ValueTypeOneofCase.Sint64Value:
              Sint64Value = other.Sint64Value;
              break;
            case ValueTypeOneofCase.BoolValue:
              BoolValue = other.BoolValue;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                StringValue = input.ReadString();
                break;
              }
              case 21: {
                FloatValue = input.ReadFloat();
                break;
              }
              case 25: {
                DoubleValue = input.ReadDouble();
                break;
              }
              case 32: {
                SintValue = input.ReadSInt32();
                break;
              }
              case 40: {
                UintValue = input.ReadUInt32();
                break;
              }
              case 48: {
                Int64Value = input.ReadInt64();
                break;
              }
              case 56: {
                Uint64Value = input.ReadUInt64();
                break;
              }
              case 64: {
                Sint64Value = input.ReadSInt64();
                break;
              }
              case 72: {
                BoolValue = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                StringValue = input.ReadString();
                break;
              }
              case 21: {
                FloatValue = input.ReadFloat();
                break;
              }
              case 25: {
                DoubleValue = input.ReadDouble();
                break;
              }
              case 32: {
                SintValue = input.ReadSInt32();
                break;
              }
              case 40: {
                UintValue = input.ReadUInt32();
                break;
              }
              case 48: {
                Int64Value = input.ReadInt64();
                break;
              }
              case 56: {
                Uint64Value = input.ReadUInt64();
                break;
              }
              case 64: {
                Sint64Value = input.ReadSInt64();
                break;
              }
              case 72: {
                BoolValue = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Envelope : pb::IMessage<Envelope>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Envelope> _parser = new pb::MessageParser<Envelope>(() => new Envelope());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Envelope> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::EsriPBuffer.EsriTypes.Descriptor.NestedTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Envelope() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Envelope(Envelope other) : this() {
          xMin_ = other.xMin_;
          yMin_ = other.yMin_;
          xMax_ = other.xMax_;
          yMax_ = other.yMax_;
          spatialReference_ = other.spatialReference_ != null ? other.spatialReference_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Envelope Clone() {
          return new Envelope(this);
        }

        /// <summary>Field number for the "XMin" field.</summary>
        public const int XMinFieldNumber = 1;
        private double xMin_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double XMin {
          get { return xMin_; }
          set {
            xMin_ = value;
          }
        }

        /// <summary>Field number for the "YMin" field.</summary>
        public const int YMinFieldNumber = 2;
        private double yMin_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double YMin {
          get { return yMin_; }
          set {
            yMin_ = value;
          }
        }

        /// <summary>Field number for the "XMax" field.</summary>
        public const int XMaxFieldNumber = 3;
        private double xMax_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double XMax {
          get { return xMax_; }
          set {
            xMax_ = value;
          }
        }

        /// <summary>Field number for the "YMax" field.</summary>
        public const int YMaxFieldNumber = 4;
        private double yMax_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double YMax {
          get { return yMax_; }
          set {
            yMax_ = value;
          }
        }

        /// <summary>Field number for the "SpatialReference" field.</summary>
        public const int SpatialReferenceFieldNumber = 5;
        private global::EsriPBuffer.EsriTypes.Types.SpatialReference spatialReference_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::EsriPBuffer.EsriTypes.Types.SpatialReference SpatialReference {
          get { return spatialReference_; }
          set {
            spatialReference_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Envelope);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Envelope other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(XMin, other.XMin)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(YMin, other.YMin)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(XMax, other.XMax)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(YMax, other.YMax)) return false;
          if (!object.Equals(SpatialReference, other.SpatialReference)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (XMin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(XMin);
          if (YMin != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(YMin);
          if (XMax != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(XMax);
          if (YMax != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(YMax);
          if (spatialReference_ != null) hash ^= SpatialReference.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (XMin != 0D) {
            output.WriteRawTag(9);
            output.WriteDouble(XMin);
          }
          if (YMin != 0D) {
            output.WriteRawTag(17);
            output.WriteDouble(YMin);
          }
          if (XMax != 0D) {
            output.WriteRawTag(25);
            output.WriteDouble(XMax);
          }
          if (YMax != 0D) {
            output.WriteRawTag(33);
            output.WriteDouble(YMax);
          }
          if (spatialReference_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(SpatialReference);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (XMin != 0D) {
            output.WriteRawTag(9);
            output.WriteDouble(XMin);
          }
          if (YMin != 0D) {
            output.WriteRawTag(17);
            output.WriteDouble(YMin);
          }
          if (XMax != 0D) {
            output.WriteRawTag(25);
            output.WriteDouble(XMax);
          }
          if (YMax != 0D) {
            output.WriteRawTag(33);
            output.WriteDouble(YMax);
          }
          if (spatialReference_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(SpatialReference);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (XMin != 0D) {
            size += 1 + 8;
          }
          if (YMin != 0D) {
            size += 1 + 8;
          }
          if (XMax != 0D) {
            size += 1 + 8;
          }
          if (YMax != 0D) {
            size += 1 + 8;
          }
          if (spatialReference_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpatialReference);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Envelope other) {
          if (other == null) {
            return;
          }
          if (other.XMin != 0D) {
            XMin = other.XMin;
          }
          if (other.YMin != 0D) {
            YMin = other.YMin;
          }
          if (other.XMax != 0D) {
            XMax = other.XMax;
          }
          if (other.YMax != 0D) {
            YMax = other.YMax;
          }
          if (other.spatialReference_ != null) {
            if (spatialReference_ == null) {
              SpatialReference = new global::EsriPBuffer.EsriTypes.Types.SpatialReference();
            }
            SpatialReference.MergeFrom(other.SpatialReference);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 9: {
                XMin = input.ReadDouble();
                break;
              }
              case 17: {
                YMin = input.ReadDouble();
                break;
              }
              case 25: {
                XMax = input.ReadDouble();
                break;
              }
              case 33: {
                YMax = input.ReadDouble();
                break;
              }
              case 42: {
                if (spatialReference_ == null) {
                  SpatialReference = new global::EsriPBuffer.EsriTypes.Types.SpatialReference();
                }
                input.ReadMessage(SpatialReference);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 9: {
                XMin = input.ReadDouble();
                break;
              }
              case 17: {
                YMin = input.ReadDouble();
                break;
              }
              case 25: {
                XMax = input.ReadDouble();
                break;
              }
              case 33: {
                YMax = input.ReadDouble();
                break;
              }
              case 42: {
                if (spatialReference_ == null) {
                  SpatialReference = new global::EsriPBuffer.EsriTypes.Types.SpatialReference();
                }
                input.ReadMessage(SpatialReference);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class CodedValue : pb::IMessage<CodedValue>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<CodedValue> _parser = new pb::MessageParser<CodedValue>(() => new CodedValue());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CodedValue> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::EsriPBuffer.EsriTypes.Descriptor.NestedTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CodedValue() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CodedValue(CodedValue other) : this() {
          name_ = other.name_;
          code_ = other.code_ != null ? other.code_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CodedValue Clone() {
          return new CodedValue(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "code" field.</summary>
        public const int CodeFieldNumber = 2;
        private global::EsriPBuffer.EsriTypes.Types.Value code_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::EsriPBuffer.EsriTypes.Types.Value Code {
          get { return code_; }
          set {
            code_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CodedValue);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CodedValue other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (!object.Equals(Code, other.Code)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (code_ != null) hash ^= Code.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (code_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Code);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (code_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Code);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (code_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Code);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CodedValue other) {
          if (other == null) {
            return;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.code_ != null) {
            if (code_ == null) {
              Code = new global::EsriPBuffer.EsriTypes.Types.Value();
            }
            Code.MergeFrom(other.Code);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                if (code_ == null) {
                  Code = new global::EsriPBuffer.EsriTypes.Types.Value();
                }
                input.ReadMessage(Code);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                if (code_ == null) {
                  Code = new global::EsriPBuffer.EsriTypes.Types.Value();
                }
                input.ReadMessage(Code);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class CodedValueDomain : pb::IMessage<CodedValueDomain>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<CodedValueDomain> _parser = new pb::MessageParser<CodedValueDomain>(() => new CodedValueDomain());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CodedValueDomain> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::EsriPBuffer.EsriTypes.Descriptor.NestedTypes[9]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CodedValueDomain() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CodedValueDomain(CodedValueDomain other) : this() {
          codesValues_ = other.codesValues_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CodedValueDomain Clone() {
          return new CodedValueDomain(this);
        }

        /// <summary>Field number for the "codesValues" field.</summary>
        public const int CodesValuesFieldNumber = 3;
        private static readonly pb::FieldCodec<global::EsriPBuffer.EsriTypes.Types.CodedValue> _repeated_codesValues_codec
            = pb::FieldCodec.ForMessage(26, global::EsriPBuffer.EsriTypes.Types.CodedValue.Parser);
        private readonly pbc::RepeatedField<global::EsriPBuffer.EsriTypes.Types.CodedValue> codesValues_ = new pbc::RepeatedField<global::EsriPBuffer.EsriTypes.Types.CodedValue>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::EsriPBuffer.EsriTypes.Types.CodedValue> CodesValues {
          get { return codesValues_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CodedValueDomain);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CodedValueDomain other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!codesValues_.Equals(other.codesValues_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= codesValues_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          codesValues_.WriteTo(output, _repeated_codesValues_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          codesValues_.WriteTo(ref output, _repeated_codesValues_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += codesValues_.CalculateSize(_repeated_codesValues_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CodedValueDomain other) {
          if (other == null) {
            return;
          }
          codesValues_.Add(other.codesValues_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 26: {
                codesValues_.AddEntriesFrom(input, _repeated_codesValues_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 26: {
                codesValues_.AddEntriesFrom(ref input, _repeated_codesValues_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class RangeDomain : pb::IMessage<RangeDomain>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<RangeDomain> _parser = new pb::MessageParser<RangeDomain>(() => new RangeDomain());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RangeDomain> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::EsriPBuffer.EsriTypes.Descriptor.NestedTypes[10]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RangeDomain() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RangeDomain(RangeDomain other) : this() {
          range_ = other.range_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RangeDomain Clone() {
          return new RangeDomain(this);
        }

        /// <summary>Field number for the "range" field.</summary>
        public const int RangeFieldNumber = 3;
        private static readonly pb::FieldCodec<global::EsriPBuffer.EsriTypes.Types.Value> _repeated_range_codec
            = pb::FieldCodec.ForMessage(26, global::EsriPBuffer.EsriTypes.Types.Value.Parser);
        private readonly pbc::RepeatedField<global::EsriPBuffer.EsriTypes.Types.Value> range_ = new pbc::RepeatedField<global::EsriPBuffer.EsriTypes.Types.Value>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::EsriPBuffer.EsriTypes.Types.Value> Range {
          get { return range_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RangeDomain);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RangeDomain other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!range_.Equals(other.range_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= range_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          range_.WriteTo(output, _repeated_range_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          range_.WriteTo(ref output, _repeated_range_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += range_.CalculateSize(_repeated_range_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RangeDomain other) {
          if (other == null) {
            return;
          }
          range_.Add(other.range_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 26: {
                range_.AddEntriesFrom(input, _repeated_range_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 26: {
                range_.AddEntriesFrom(ref input, _repeated_range_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Domain : pb::IMessage<Domain>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Domain> _parser = new pb::MessageParser<Domain>(() => new Domain());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Domain> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::EsriPBuffer.EsriTypes.Descriptor.NestedTypes[11]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Domain() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Domain(Domain other) : this() {
          type_ = other.type_;
          name_ = other.name_;
          fieldType_ = other.fieldType_;
          mergePolicyType_ = other.mergePolicyType_;
          splitPolicyType_ = other.splitPolicyType_;
          switch (other.OfCase) {
            case OfOneofCase.CodedValueDomain:
              CodedValueDomain = other.CodedValueDomain.Clone();
              break;
            case OfOneofCase.RangeDomain:
              RangeDomain = other.RangeDomain.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Domain Clone() {
          return new Domain(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;
        private string type_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Type {
          get { return type_; }
          set {
            type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "codedValueDomain" field.</summary>
        public const int CodedValueDomainFieldNumber = 3;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::EsriPBuffer.EsriTypes.Types.CodedValueDomain CodedValueDomain {
          get { return ofCase_ == OfOneofCase.CodedValueDomain ? (global::EsriPBuffer.EsriTypes.Types.CodedValueDomain) of_ : null; }
          set {
            of_ = value;
            ofCase_ = value == null ? OfOneofCase.None : OfOneofCase.CodedValueDomain;
          }
        }

        /// <summary>Field number for the "rangeDomain" field.</summary>
        public const int RangeDomainFieldNumber = 4;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::EsriPBuffer.EsriTypes.Types.RangeDomain RangeDomain {
          get { return ofCase_ == OfOneofCase.RangeDomain ? (global::EsriPBuffer.EsriTypes.Types.RangeDomain) of_ : null; }
          set {
            of_ = value;
            ofCase_ = value == null ? OfOneofCase.None : OfOneofCase.RangeDomain;
          }
        }

        /// <summary>Field number for the "fieldType" field.</summary>
        public const int FieldTypeFieldNumber = 5;
        private global::EsriPBuffer.EsriExtendedTypes.FieldType fieldType_ = global::EsriPBuffer.EsriExtendedTypes.FieldType.EsriFieldTypeUnspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::EsriPBuffer.EsriExtendedTypes.FieldType FieldType {
          get { return fieldType_; }
          set {
            fieldType_ = value;
          }
        }

        /// <summary>Field number for the "mergePolicyType" field.</summary>
        public const int MergePolicyTypeFieldNumber = 6;
        private global::EsriPBuffer.EsriTypes.Types.MergePolicyType mergePolicyType_ = global::EsriPBuffer.EsriTypes.Types.MergePolicyType.EsriMergePolicyTypeUnspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::EsriPBuffer.EsriTypes.Types.MergePolicyType MergePolicyType {
          get { return mergePolicyType_; }
          set {
            mergePolicyType_ = value;
          }
        }

        /// <summary>Field number for the "splitPolicyType" field.</summary>
        public const int SplitPolicyTypeFieldNumber = 7;
        private global::EsriPBuffer.EsriTypes.Types.SplitPolicyType splitPolicyType_ = global::EsriPBuffer.EsriTypes.Types.SplitPolicyType.EsriSplitPolicyTypeUnspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::EsriPBuffer.EsriTypes.Types.SplitPolicyType SplitPolicyType {
          get { return splitPolicyType_; }
          set {
            splitPolicyType_ = value;
          }
        }

        private object of_;
        /// <summary>Enum of possible cases for the "of" oneof.</summary>
        public enum OfOneofCase {
          None = 0,
          CodedValueDomain = 3,
          RangeDomain = 4,
        }
        private OfOneofCase ofCase_ = OfOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OfOneofCase OfCase {
          get { return ofCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearOf() {
          ofCase_ = OfOneofCase.None;
          of_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Domain);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Domain other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Type != other.Type) return false;
          if (Name != other.Name) return false;
          if (!object.Equals(CodedValueDomain, other.CodedValueDomain)) return false;
          if (!object.Equals(RangeDomain, other.RangeDomain)) return false;
          if (FieldType != other.FieldType) return false;
          if (MergePolicyType != other.MergePolicyType) return false;
          if (SplitPolicyType != other.SplitPolicyType) return false;
          if (OfCase != other.OfCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Type.Length != 0) hash ^= Type.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (ofCase_ == OfOneofCase.CodedValueDomain) hash ^= CodedValueDomain.GetHashCode();
          if (ofCase_ == OfOneofCase.RangeDomain) hash ^= RangeDomain.GetHashCode();
          if (FieldType != global::EsriPBuffer.EsriExtendedTypes.FieldType.EsriFieldTypeUnspecified) hash ^= FieldType.GetHashCode();
          if (MergePolicyType != global::EsriPBuffer.EsriTypes.Types.MergePolicyType.EsriMergePolicyTypeUnspecified) hash ^= MergePolicyType.GetHashCode();
          if (SplitPolicyType != global::EsriPBuffer.EsriTypes.Types.SplitPolicyType.EsriSplitPolicyTypeUnspecified) hash ^= SplitPolicyType.GetHashCode();
          hash ^= (int) ofCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Type.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Type);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (ofCase_ == OfOneofCase.CodedValueDomain) {
            output.WriteRawTag(26);
            output.WriteMessage(CodedValueDomain);
          }
          if (ofCase_ == OfOneofCase.RangeDomain) {
            output.WriteRawTag(34);
            output.WriteMessage(RangeDomain);
          }
          if (FieldType != global::EsriPBuffer.EsriExtendedTypes.FieldType.EsriFieldTypeUnspecified) {
            output.WriteRawTag(40);
            output.WriteEnum((int) FieldType);
          }
          if (MergePolicyType != global::EsriPBuffer.EsriTypes.Types.MergePolicyType.EsriMergePolicyTypeUnspecified) {
            output.WriteRawTag(48);
            output.WriteEnum((int) MergePolicyType);
          }
          if (SplitPolicyType != global::EsriPBuffer.EsriTypes.Types.SplitPolicyType.EsriSplitPolicyTypeUnspecified) {
            output.WriteRawTag(56);
            output.WriteEnum((int) SplitPolicyType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Type.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Type);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (ofCase_ == OfOneofCase.CodedValueDomain) {
            output.WriteRawTag(26);
            output.WriteMessage(CodedValueDomain);
          }
          if (ofCase_ == OfOneofCase.RangeDomain) {
            output.WriteRawTag(34);
            output.WriteMessage(RangeDomain);
          }
          if (FieldType != global::EsriPBuffer.EsriExtendedTypes.FieldType.EsriFieldTypeUnspecified) {
            output.WriteRawTag(40);
            output.WriteEnum((int) FieldType);
          }
          if (MergePolicyType != global::EsriPBuffer.EsriTypes.Types.MergePolicyType.EsriMergePolicyTypeUnspecified) {
            output.WriteRawTag(48);
            output.WriteEnum((int) MergePolicyType);
          }
          if (SplitPolicyType != global::EsriPBuffer.EsriTypes.Types.SplitPolicyType.EsriSplitPolicyTypeUnspecified) {
            output.WriteRawTag(56);
            output.WriteEnum((int) SplitPolicyType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Type.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (ofCase_ == OfOneofCase.CodedValueDomain) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(CodedValueDomain);
          }
          if (ofCase_ == OfOneofCase.RangeDomain) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(RangeDomain);
          }
          if (FieldType != global::EsriPBuffer.EsriExtendedTypes.FieldType.EsriFieldTypeUnspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FieldType);
          }
          if (MergePolicyType != global::EsriPBuffer.EsriTypes.Types.MergePolicyType.EsriMergePolicyTypeUnspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MergePolicyType);
          }
          if (SplitPolicyType != global::EsriPBuffer.EsriTypes.Types.SplitPolicyType.EsriSplitPolicyTypeUnspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SplitPolicyType);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Domain other) {
          if (other == null) {
            return;
          }
          if (other.Type.Length != 0) {
            Type = other.Type;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.FieldType != global::EsriPBuffer.EsriExtendedTypes.FieldType.EsriFieldTypeUnspecified) {
            FieldType = other.FieldType;
          }
          if (other.MergePolicyType != global::EsriPBuffer.EsriTypes.Types.MergePolicyType.EsriMergePolicyTypeUnspecified) {
            MergePolicyType = other.MergePolicyType;
          }
          if (other.SplitPolicyType != global::EsriPBuffer.EsriTypes.Types.SplitPolicyType.EsriSplitPolicyTypeUnspecified) {
            SplitPolicyType = other.SplitPolicyType;
          }
          switch (other.OfCase) {
            case OfOneofCase.CodedValueDomain:
              if (CodedValueDomain == null) {
                CodedValueDomain = new global::EsriPBuffer.EsriTypes.Types.CodedValueDomain();
              }
              CodedValueDomain.MergeFrom(other.CodedValueDomain);
              break;
            case OfOneofCase.RangeDomain:
              if (RangeDomain == null) {
                RangeDomain = new global::EsriPBuffer.EsriTypes.Types.RangeDomain();
              }
              RangeDomain.MergeFrom(other.RangeDomain);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Type = input.ReadString();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                global::EsriPBuffer.EsriTypes.Types.CodedValueDomain subBuilder = new global::EsriPBuffer.EsriTypes.Types.CodedValueDomain();
                if (ofCase_ == OfOneofCase.CodedValueDomain) {
                  subBuilder.MergeFrom(CodedValueDomain);
                }
                input.ReadMessage(subBuilder);
                CodedValueDomain = subBuilder;
                break;
              }
              case 34: {
                global::EsriPBuffer.EsriTypes.Types.RangeDomain subBuilder = new global::EsriPBuffer.EsriTypes.Types.RangeDomain();
                if (ofCase_ == OfOneofCase.RangeDomain) {
                  subBuilder.MergeFrom(RangeDomain);
                }
                input.ReadMessage(subBuilder);
                RangeDomain = subBuilder;
                break;
              }
              case 40: {
                FieldType = (global::EsriPBuffer.EsriExtendedTypes.FieldType) input.ReadEnum();
                break;
              }
              case 48: {
                MergePolicyType = (global::EsriPBuffer.EsriTypes.Types.MergePolicyType) input.ReadEnum();
                break;
              }
              case 56: {
                SplitPolicyType = (global::EsriPBuffer.EsriTypes.Types.SplitPolicyType) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Type = input.ReadString();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                global::EsriPBuffer.EsriTypes.Types.CodedValueDomain subBuilder = new global::EsriPBuffer.EsriTypes.Types.CodedValueDomain();
                if (ofCase_ == OfOneofCase.CodedValueDomain) {
                  subBuilder.MergeFrom(CodedValueDomain);
                }
                input.ReadMessage(subBuilder);
                CodedValueDomain = subBuilder;
                break;
              }
              case 34: {
                global::EsriPBuffer.EsriTypes.Types.RangeDomain subBuilder = new global::EsriPBuffer.EsriTypes.Types.RangeDomain();
                if (ofCase_ == OfOneofCase.RangeDomain) {
                  subBuilder.MergeFrom(RangeDomain);
                }
                input.ReadMessage(subBuilder);
                RangeDomain = subBuilder;
                break;
              }
              case 40: {
                FieldType = (global::EsriPBuffer.EsriExtendedTypes.FieldType) input.ReadEnum();
                break;
              }
              case 48: {
                MergePolicyType = (global::EsriPBuffer.EsriTypes.Types.MergePolicyType) input.ReadEnum();
                break;
              }
              case 56: {
                SplitPolicyType = (global::EsriPBuffer.EsriTypes.Types.SplitPolicyType) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class DatumTransformation : pb::IMessage<DatumTransformation>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DatumTransformation> _parser = new pb::MessageParser<DatumTransformation>(() => new DatumTransformation());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DatumTransformation> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::EsriPBuffer.EsriTypes.Descriptor.NestedTypes[12]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DatumTransformation() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DatumTransformation(DatumTransformation other) : this() {
          wkid_ = other.wkid_;
          wkt_ = other.wkt_;
          transformDirection_ = other.transformDirection_;
          transformJson_ = other.transformJson_;
          fromSR_ = other.fromSR_ != null ? other.fromSR_.Clone() : null;
          toSR_ = other.toSR_ != null ? other.toSR_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DatumTransformation Clone() {
          return new DatumTransformation(this);
        }

        /// <summary>Field number for the "wkid" field.</summary>
        public const int WkidFieldNumber = 1;
        private uint wkid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Wkid {
          get { return wkid_; }
          set {
            wkid_ = value;
          }
        }

        /// <summary>Field number for the "wkt" field.</summary>
        public const int WktFieldNumber = 2;
        private string wkt_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Wkt {
          get { return wkt_; }
          set {
            wkt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "transformDirection" field.</summary>
        public const int TransformDirectionFieldNumber = 3;
        private string transformDirection_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TransformDirection {
          get { return transformDirection_; }
          set {
            transformDirection_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "transformJson" field.</summary>
        public const int TransformJsonFieldNumber = 4;
        private string transformJson_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TransformJson {
          get { return transformJson_; }
          set {
            transformJson_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "fromSR" field.</summary>
        public const int FromSRFieldNumber = 5;
        private global::EsriPBuffer.EsriTypes.Types.SpatialReference fromSR_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::EsriPBuffer.EsriTypes.Types.SpatialReference FromSR {
          get { return fromSR_; }
          set {
            fromSR_ = value;
          }
        }

        /// <summary>Field number for the "toSR" field.</summary>
        public const int ToSRFieldNumber = 6;
        private global::EsriPBuffer.EsriTypes.Types.SpatialReference toSR_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::EsriPBuffer.EsriTypes.Types.SpatialReference ToSR {
          get { return toSR_; }
          set {
            toSR_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DatumTransformation);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DatumTransformation other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Wkid != other.Wkid) return false;
          if (Wkt != other.Wkt) return false;
          if (TransformDirection != other.TransformDirection) return false;
          if (TransformJson != other.TransformJson) return false;
          if (!object.Equals(FromSR, other.FromSR)) return false;
          if (!object.Equals(ToSR, other.ToSR)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Wkid != 0) hash ^= Wkid.GetHashCode();
          if (Wkt.Length != 0) hash ^= Wkt.GetHashCode();
          if (TransformDirection.Length != 0) hash ^= TransformDirection.GetHashCode();
          if (TransformJson.Length != 0) hash ^= TransformJson.GetHashCode();
          if (fromSR_ != null) hash ^= FromSR.GetHashCode();
          if (toSR_ != null) hash ^= ToSR.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Wkid != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(Wkid);
          }
          if (Wkt.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Wkt);
          }
          if (TransformDirection.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(TransformDirection);
          }
          if (TransformJson.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(TransformJson);
          }
          if (fromSR_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(FromSR);
          }
          if (toSR_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(ToSR);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Wkid != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(Wkid);
          }
          if (Wkt.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Wkt);
          }
          if (TransformDirection.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(TransformDirection);
          }
          if (TransformJson.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(TransformJson);
          }
          if (fromSR_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(FromSR);
          }
          if (toSR_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(ToSR);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Wkid != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Wkid);
          }
          if (Wkt.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Wkt);
          }
          if (TransformDirection.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TransformDirection);
          }
          if (TransformJson.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TransformJson);
          }
          if (fromSR_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(FromSR);
          }
          if (toSR_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ToSR);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DatumTransformation other) {
          if (other == null) {
            return;
          }
          if (other.Wkid != 0) {
            Wkid = other.Wkid;
          }
          if (other.Wkt.Length != 0) {
            Wkt = other.Wkt;
          }
          if (other.TransformDirection.Length != 0) {
            TransformDirection = other.TransformDirection;
          }
          if (other.TransformJson.Length != 0) {
            TransformJson = other.TransformJson;
          }
          if (other.fromSR_ != null) {
            if (fromSR_ == null) {
              FromSR = new global::EsriPBuffer.EsriTypes.Types.SpatialReference();
            }
            FromSR.MergeFrom(other.FromSR);
          }
          if (other.toSR_ != null) {
            if (toSR_ == null) {
              ToSR = new global::EsriPBuffer.EsriTypes.Types.SpatialReference();
            }
            ToSR.MergeFrom(other.ToSR);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Wkid = input.ReadUInt32();
                break;
              }
              case 18: {
                Wkt = input.ReadString();
                break;
              }
              case 26: {
                TransformDirection = input.ReadString();
                break;
              }
              case 34: {
                TransformJson = input.ReadString();
                break;
              }
              case 42: {
                if (fromSR_ == null) {
                  FromSR = new global::EsriPBuffer.EsriTypes.Types.SpatialReference();
                }
                input.ReadMessage(FromSR);
                break;
              }
              case 50: {
                if (toSR_ == null) {
                  ToSR = new global::EsriPBuffer.EsriTypes.Types.SpatialReference();
                }
                input.ReadMessage(ToSR);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Wkid = input.ReadUInt32();
                break;
              }
              case 18: {
                Wkt = input.ReadString();
                break;
              }
              case 26: {
                TransformDirection = input.ReadString();
                break;
              }
              case 34: {
                TransformJson = input.ReadString();
                break;
              }
              case 42: {
                if (fromSR_ == null) {
                  FromSR = new global::EsriPBuffer.EsriTypes.Types.SpatialReference();
                }
                input.ReadMessage(FromSR);
                break;
              }
              case 50: {
                if (toSR_ == null) {
                  ToSR = new global::EsriPBuffer.EsriTypes.Types.SpatialReference();
                }
                input.ReadMessage(ToSR);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
