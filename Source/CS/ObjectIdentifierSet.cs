// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: esriPBuffer/ObjectIdentifierSet.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EsriPBuffer {

  /// <summary>Holder for reflection information generated from esriPBuffer/ObjectIdentifierSet.proto</summary>
  public static partial class ObjectIdentifierSetReflection {

    #region Descriptor
    /// <summary>File descriptor for esriPBuffer/ObjectIdentifierSet.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ObjectIdentifierSetReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVlc3JpUEJ1ZmZlci9PYmplY3RJZGVudGlmaWVyU2V0LnByb3RvEgtlc3Jp",
            "UEJ1ZmZlciIiCg1PYmplY3RJZEFycmF5EhEKBXZhbHVlGAEgAygEQgIQASJs",
            "ChNPYmplY3RJZGVudGlmaWVyU2V0Ei8KCW9pZF9hcnJheRgBIAEoCzIaLmVz",
            "cmlQQnVmZmVyLk9iamVjdElkQXJyYXlIABIYCg5nbG9iYWxpZF9hcnJheRgC",
            "IAEoDEgAQgoKCGlkX2FycmF5Qh8KGGNvbS5lc3JpLmFyY2dpcy5wcm90b2J1",
            "ZkgD+AEBYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.ObjectIdArray), global::EsriPBuffer.ObjectIdArray.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.ObjectIdentifierSet), global::EsriPBuffer.ObjectIdentifierSet.Parser, new[]{ "OidArray", "GlobalidArray" }, new[]{ "IdArray" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ObjectIdArray : pb::IMessage<ObjectIdArray>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObjectIdArray> _parser = new pb::MessageParser<ObjectIdArray>(() => new ObjectIdArray());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjectIdArray> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EsriPBuffer.ObjectIdentifierSetReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectIdArray() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectIdArray(ObjectIdArray other) : this() {
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectIdArray Clone() {
      return new ObjectIdArray(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<ulong> _repeated_value_codec
        = pb::FieldCodec.ForUInt64(10);
    private readonly pbc::RepeatedField<ulong> value_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjectIdArray);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjectIdArray other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      value_.WriteTo(ref output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjectIdArray other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            value_.AddEntriesFrom(ref input, _repeated_value_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ObjectIdentifierSet : pb::IMessage<ObjectIdentifierSet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObjectIdentifierSet> _parser = new pb::MessageParser<ObjectIdentifierSet>(() => new ObjectIdentifierSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjectIdentifierSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EsriPBuffer.ObjectIdentifierSetReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectIdentifierSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectIdentifierSet(ObjectIdentifierSet other) : this() {
      switch (other.IdArrayCase) {
        case IdArrayOneofCase.OidArray:
          OidArray = other.OidArray.Clone();
          break;
        case IdArrayOneofCase.GlobalidArray:
          GlobalidArray = other.GlobalidArray;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectIdentifierSet Clone() {
      return new ObjectIdentifierSet(this);
    }

    /// <summary>Field number for the "oid_array" field.</summary>
    public const int OidArrayFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.ObjectIdArray OidArray {
      get { return idArrayCase_ == IdArrayOneofCase.OidArray ? (global::EsriPBuffer.ObjectIdArray) idArray_ : null; }
      set {
        idArray_ = value;
        idArrayCase_ = value == null ? IdArrayOneofCase.None : IdArrayOneofCase.OidArray;
      }
    }

    /// <summary>Field number for the "globalid_array" field.</summary>
    public const int GlobalidArrayFieldNumber = 2;
    /// <summary>
    /// `globalid_array` is a concatenation of 1..N RFC4122 UUIDs. Size must be multiple of 16.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString GlobalidArray {
      get { return idArrayCase_ == IdArrayOneofCase.GlobalidArray ? (pb::ByteString) idArray_ : pb::ByteString.Empty; }
      set {
        idArray_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        idArrayCase_ = IdArrayOneofCase.GlobalidArray;
      }
    }

    private object idArray_;
    /// <summary>Enum of possible cases for the "id_array" oneof.</summary>
    public enum IdArrayOneofCase {
      None = 0,
      OidArray = 1,
      GlobalidArray = 2,
    }
    private IdArrayOneofCase idArrayCase_ = IdArrayOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdArrayOneofCase IdArrayCase {
      get { return idArrayCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIdArray() {
      idArrayCase_ = IdArrayOneofCase.None;
      idArray_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjectIdentifierSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjectIdentifierSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OidArray, other.OidArray)) return false;
      if (GlobalidArray != other.GlobalidArray) return false;
      if (IdArrayCase != other.IdArrayCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (idArrayCase_ == IdArrayOneofCase.OidArray) hash ^= OidArray.GetHashCode();
      if (idArrayCase_ == IdArrayOneofCase.GlobalidArray) hash ^= GlobalidArray.GetHashCode();
      hash ^= (int) idArrayCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (idArrayCase_ == IdArrayOneofCase.OidArray) {
        output.WriteRawTag(10);
        output.WriteMessage(OidArray);
      }
      if (idArrayCase_ == IdArrayOneofCase.GlobalidArray) {
        output.WriteRawTag(18);
        output.WriteBytes(GlobalidArray);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (idArrayCase_ == IdArrayOneofCase.OidArray) {
        output.WriteRawTag(10);
        output.WriteMessage(OidArray);
      }
      if (idArrayCase_ == IdArrayOneofCase.GlobalidArray) {
        output.WriteRawTag(18);
        output.WriteBytes(GlobalidArray);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (idArrayCase_ == IdArrayOneofCase.OidArray) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OidArray);
      }
      if (idArrayCase_ == IdArrayOneofCase.GlobalidArray) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(GlobalidArray);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjectIdentifierSet other) {
      if (other == null) {
        return;
      }
      switch (other.IdArrayCase) {
        case IdArrayOneofCase.OidArray:
          if (OidArray == null) {
            OidArray = new global::EsriPBuffer.ObjectIdArray();
          }
          OidArray.MergeFrom(other.OidArray);
          break;
        case IdArrayOneofCase.GlobalidArray:
          GlobalidArray = other.GlobalidArray;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::EsriPBuffer.ObjectIdArray subBuilder = new global::EsriPBuffer.ObjectIdArray();
            if (idArrayCase_ == IdArrayOneofCase.OidArray) {
              subBuilder.MergeFrom(OidArray);
            }
            input.ReadMessage(subBuilder);
            OidArray = subBuilder;
            break;
          }
          case 18: {
            GlobalidArray = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::EsriPBuffer.ObjectIdArray subBuilder = new global::EsriPBuffer.ObjectIdArray();
            if (idArrayCase_ == IdArrayOneofCase.OidArray) {
              subBuilder.MergeFrom(OidArray);
            }
            input.ReadMessage(subBuilder);
            OidArray = subBuilder;
            break;
          }
          case 18: {
            GlobalidArray = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
