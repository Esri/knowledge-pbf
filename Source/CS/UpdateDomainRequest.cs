// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: esriPBuffer/graph/UpdateDomainRequest.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EsriPBuffer.Graph {

  /// <summary>Holder for reflection information generated from esriPBuffer/graph/UpdateDomainRequest.proto</summary>
  public static partial class UpdateDomainRequestReflection {

    #region Descriptor
    /// <summary>File descriptor for esriPBuffer/graph/UpdateDomainRequest.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UpdateDomainRequestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Citlc3JpUEJ1ZmZlci9ncmFwaC9VcGRhdGVEb21haW5SZXF1ZXN0LnByb3Rv",
            "EhFlc3JpUEJ1ZmZlci5ncmFwaBobZXNyaVBCdWZmZXIvRXNyaVR5cGVzLnBy",
            "b3RvIqIBCgpEb21haW5NYXNrEhMKC3VwZGF0ZV90eXBlGAEgASgIEhMKC3Vw",
            "ZGF0ZV9uYW1lGAIgASgIEhUKDXVwZGF0ZV9kb21haW4YAyABKAgSGQoRdXBk",
            "YXRlX2ZpZWxkX3R5cGUYBCABKAgSGwoTdXBkYXRlX21lcmdlX3BvbGljeRgF",
            "IAEoCBIbChN1cGRhdGVfc3BsaXRfcG9saWN5GAYgASgIInEKE0RvbWFpblVw",
            "ZGF0ZVJlcXVlc3QSKwoEbWFzaxgBIAEoCzIdLmVzcmlQQnVmZmVyLmdyYXBo",
            "LkRvbWFpbk1hc2sSLQoGZG9tYWluGAIgASgLMh0uZXNyaVBCdWZmZXIuRXNy",
            "aVR5cGVzLkRvbWFpbkIlCh5jb20uZXNyaS5hcmNnaXMucHJvdG9idWYuZ3Jh",
            "cGhIA/gBAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EsriPBuffer.EsriTypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.Graph.DomainMask), global::EsriPBuffer.Graph.DomainMask.Parser, new[]{ "UpdateType", "UpdateName", "UpdateDomain", "UpdateFieldType", "UpdateMergePolicy", "UpdateSplitPolicy" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.Graph.DomainUpdateRequest), global::EsriPBuffer.Graph.DomainUpdateRequest.Parser, new[]{ "Mask", "Domain" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DomainMask : pb::IMessage<DomainMask>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DomainMask> _parser = new pb::MessageParser<DomainMask>(() => new DomainMask());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DomainMask> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EsriPBuffer.Graph.UpdateDomainRequestReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DomainMask() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DomainMask(DomainMask other) : this() {
      updateType_ = other.updateType_;
      updateName_ = other.updateName_;
      updateDomain_ = other.updateDomain_;
      updateFieldType_ = other.updateFieldType_;
      updateMergePolicy_ = other.updateMergePolicy_;
      updateSplitPolicy_ = other.updateSplitPolicy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DomainMask Clone() {
      return new DomainMask(this);
    }

    /// <summary>Field number for the "update_type" field.</summary>
    public const int UpdateTypeFieldNumber = 1;
    private bool updateType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UpdateType {
      get { return updateType_; }
      set {
        updateType_ = value;
      }
    }

    /// <summary>Field number for the "update_name" field.</summary>
    public const int UpdateNameFieldNumber = 2;
    private bool updateName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UpdateName {
      get { return updateName_; }
      set {
        updateName_ = value;
      }
    }

    /// <summary>Field number for the "update_domain" field.</summary>
    public const int UpdateDomainFieldNumber = 3;
    private bool updateDomain_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UpdateDomain {
      get { return updateDomain_; }
      set {
        updateDomain_ = value;
      }
    }

    /// <summary>Field number for the "update_field_type" field.</summary>
    public const int UpdateFieldTypeFieldNumber = 4;
    private bool updateFieldType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UpdateFieldType {
      get { return updateFieldType_; }
      set {
        updateFieldType_ = value;
      }
    }

    /// <summary>Field number for the "update_merge_policy" field.</summary>
    public const int UpdateMergePolicyFieldNumber = 5;
    private bool updateMergePolicy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UpdateMergePolicy {
      get { return updateMergePolicy_; }
      set {
        updateMergePolicy_ = value;
      }
    }

    /// <summary>Field number for the "update_split_policy" field.</summary>
    public const int UpdateSplitPolicyFieldNumber = 6;
    private bool updateSplitPolicy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UpdateSplitPolicy {
      get { return updateSplitPolicy_; }
      set {
        updateSplitPolicy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DomainMask);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DomainMask other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UpdateType != other.UpdateType) return false;
      if (UpdateName != other.UpdateName) return false;
      if (UpdateDomain != other.UpdateDomain) return false;
      if (UpdateFieldType != other.UpdateFieldType) return false;
      if (UpdateMergePolicy != other.UpdateMergePolicy) return false;
      if (UpdateSplitPolicy != other.UpdateSplitPolicy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UpdateType != false) hash ^= UpdateType.GetHashCode();
      if (UpdateName != false) hash ^= UpdateName.GetHashCode();
      if (UpdateDomain != false) hash ^= UpdateDomain.GetHashCode();
      if (UpdateFieldType != false) hash ^= UpdateFieldType.GetHashCode();
      if (UpdateMergePolicy != false) hash ^= UpdateMergePolicy.GetHashCode();
      if (UpdateSplitPolicy != false) hash ^= UpdateSplitPolicy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UpdateType != false) {
        output.WriteRawTag(8);
        output.WriteBool(UpdateType);
      }
      if (UpdateName != false) {
        output.WriteRawTag(16);
        output.WriteBool(UpdateName);
      }
      if (UpdateDomain != false) {
        output.WriteRawTag(24);
        output.WriteBool(UpdateDomain);
      }
      if (UpdateFieldType != false) {
        output.WriteRawTag(32);
        output.WriteBool(UpdateFieldType);
      }
      if (UpdateMergePolicy != false) {
        output.WriteRawTag(40);
        output.WriteBool(UpdateMergePolicy);
      }
      if (UpdateSplitPolicy != false) {
        output.WriteRawTag(48);
        output.WriteBool(UpdateSplitPolicy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UpdateType != false) {
        output.WriteRawTag(8);
        output.WriteBool(UpdateType);
      }
      if (UpdateName != false) {
        output.WriteRawTag(16);
        output.WriteBool(UpdateName);
      }
      if (UpdateDomain != false) {
        output.WriteRawTag(24);
        output.WriteBool(UpdateDomain);
      }
      if (UpdateFieldType != false) {
        output.WriteRawTag(32);
        output.WriteBool(UpdateFieldType);
      }
      if (UpdateMergePolicy != false) {
        output.WriteRawTag(40);
        output.WriteBool(UpdateMergePolicy);
      }
      if (UpdateSplitPolicy != false) {
        output.WriteRawTag(48);
        output.WriteBool(UpdateSplitPolicy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UpdateType != false) {
        size += 1 + 1;
      }
      if (UpdateName != false) {
        size += 1 + 1;
      }
      if (UpdateDomain != false) {
        size += 1 + 1;
      }
      if (UpdateFieldType != false) {
        size += 1 + 1;
      }
      if (UpdateMergePolicy != false) {
        size += 1 + 1;
      }
      if (UpdateSplitPolicy != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DomainMask other) {
      if (other == null) {
        return;
      }
      if (other.UpdateType != false) {
        UpdateType = other.UpdateType;
      }
      if (other.UpdateName != false) {
        UpdateName = other.UpdateName;
      }
      if (other.UpdateDomain != false) {
        UpdateDomain = other.UpdateDomain;
      }
      if (other.UpdateFieldType != false) {
        UpdateFieldType = other.UpdateFieldType;
      }
      if (other.UpdateMergePolicy != false) {
        UpdateMergePolicy = other.UpdateMergePolicy;
      }
      if (other.UpdateSplitPolicy != false) {
        UpdateSplitPolicy = other.UpdateSplitPolicy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UpdateType = input.ReadBool();
            break;
          }
          case 16: {
            UpdateName = input.ReadBool();
            break;
          }
          case 24: {
            UpdateDomain = input.ReadBool();
            break;
          }
          case 32: {
            UpdateFieldType = input.ReadBool();
            break;
          }
          case 40: {
            UpdateMergePolicy = input.ReadBool();
            break;
          }
          case 48: {
            UpdateSplitPolicy = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UpdateType = input.ReadBool();
            break;
          }
          case 16: {
            UpdateName = input.ReadBool();
            break;
          }
          case 24: {
            UpdateDomain = input.ReadBool();
            break;
          }
          case 32: {
            UpdateFieldType = input.ReadBool();
            break;
          }
          case 40: {
            UpdateMergePolicy = input.ReadBool();
            break;
          }
          case 48: {
            UpdateSplitPolicy = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DomainUpdateRequest : pb::IMessage<DomainUpdateRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DomainUpdateRequest> _parser = new pb::MessageParser<DomainUpdateRequest>(() => new DomainUpdateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DomainUpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EsriPBuffer.Graph.UpdateDomainRequestReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DomainUpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DomainUpdateRequest(DomainUpdateRequest other) : this() {
      mask_ = other.mask_ != null ? other.mask_.Clone() : null;
      domain_ = other.domain_ != null ? other.domain_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DomainUpdateRequest Clone() {
      return new DomainUpdateRequest(this);
    }

    /// <summary>Field number for the "mask" field.</summary>
    public const int MaskFieldNumber = 1;
    private global::EsriPBuffer.Graph.DomainMask mask_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.Graph.DomainMask Mask {
      get { return mask_; }
      set {
        mask_ = value;
      }
    }

    /// <summary>Field number for the "domain" field.</summary>
    public const int DomainFieldNumber = 2;
    private global::EsriPBuffer.EsriTypes.Types.Domain domain_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.EsriTypes.Types.Domain Domain {
      get { return domain_; }
      set {
        domain_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DomainUpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DomainUpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Mask, other.Mask)) return false;
      if (!object.Equals(Domain, other.Domain)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (mask_ != null) hash ^= Mask.GetHashCode();
      if (domain_ != null) hash ^= Domain.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (mask_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Mask);
      }
      if (domain_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Domain);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (mask_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Mask);
      }
      if (domain_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Domain);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (mask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Mask);
      }
      if (domain_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Domain);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DomainUpdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.mask_ != null) {
        if (mask_ == null) {
          Mask = new global::EsriPBuffer.Graph.DomainMask();
        }
        Mask.MergeFrom(other.Mask);
      }
      if (other.domain_ != null) {
        if (domain_ == null) {
          Domain = new global::EsriPBuffer.EsriTypes.Types.Domain();
        }
        Domain.MergeFrom(other.Domain);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (mask_ == null) {
              Mask = new global::EsriPBuffer.Graph.DomainMask();
            }
            input.ReadMessage(Mask);
            break;
          }
          case 18: {
            if (domain_ == null) {
              Domain = new global::EsriPBuffer.EsriTypes.Types.Domain();
            }
            input.ReadMessage(Domain);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (mask_ == null) {
              Mask = new global::EsriPBuffer.Graph.DomainMask();
            }
            input.ReadMessage(Mask);
            break;
          }
          case 18: {
            if (domain_ == null) {
              Domain = new global::EsriPBuffer.EsriTypes.Types.Domain();
            }
            input.ReadMessage(Domain);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
