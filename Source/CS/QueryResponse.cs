// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: esriPBuffer/graph/QueryResponse.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EsriPBuffer.Graph {

  /// <summary>Holder for reflection information generated from esriPBuffer/graph/QueryResponse.proto</summary>
  public static partial class QueryResponseReflection {

    #region Descriptor
    /// <summary>File descriptor for esriPBuffer/graph/QueryResponse.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static QueryResponseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVlc3JpUEJ1ZmZlci9ncmFwaC9RdWVyeVJlc3BvbnNlLnByb3RvEhFlc3Jp",
            "UEJ1ZmZlci5ncmFwaBomZXNyaVBCdWZmZXIvZ3JhcGgvRXNyaUdyYXBoVHlw",
            "ZXMucHJvdG8iwAEKFkdyYXBoUXVlcnlSZXN1bHRIZWFkZXISHAoUZGF0YV9t",
            "b2RlbF90aW1lc3RhbXAYASABKAQSLwoJdHJhbnNmb3JtGAIgASgLMhwuZXNy",
            "aVBCdWZmZXIuZ3JhcGguVHJhbnNmb3JtEicKBWVycm9yGAMgASgLMhguZXNy",
            "aVBCdWZmZXIuZ3JhcGguRXJyb3ISEwoLZmllbGRfbmFtZXMYBCADKAkSGQoR",
            "Y29tcHJlc3NlZF9mcmFtZXMYBSABKAgiPAoNR3JhcGhRdWVyeVJvdxIrCgZ2",
            "YWx1ZXMYASADKAsyGy5lc3JpUEJ1ZmZlci5ncmFwaC5BbnlWYWx1ZSKRAQoV",
            "R3JhcGhRdWVyeVJlc3VsdEZyYW1lEicKBWVycm9yGAEgASgLMhguZXNyaVBC",
            "dWZmZXIuZ3JhcGguRXJyb3ISLgoEcm93cxgCIAMoCzIgLmVzcmlQQnVmZmVy",
            "LmdyYXBoLkdyYXBoUXVlcnlSb3cSHwoXZXhjZWVkZWRfdHJhbnNmZXJfbGlt",
            "aXQYAyABKAhCJQoeY29tLmVzcmkuYXJjZ2lzLnByb3RvYnVmLmdyYXBoSAP4",
            "AQFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EsriPBuffer.Graph.EsriGraphTypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.Graph.GraphQueryResultHeader), global::EsriPBuffer.Graph.GraphQueryResultHeader.Parser, new[]{ "DataModelTimestamp", "Transform", "Error", "FieldNames", "CompressedFrames" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.Graph.GraphQueryRow), global::EsriPBuffer.Graph.GraphQueryRow.Parser, new[]{ "Values" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EsriPBuffer.Graph.GraphQueryResultFrame), global::EsriPBuffer.Graph.GraphQueryResultFrame.Parser, new[]{ "Error", "Rows", "ExceededTransferLimit" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GraphQueryResultHeader : pb::IMessage<GraphQueryResultHeader>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GraphQueryResultHeader> _parser = new pb::MessageParser<GraphQueryResultHeader>(() => new GraphQueryResultHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GraphQueryResultHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EsriPBuffer.Graph.QueryResponseReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GraphQueryResultHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GraphQueryResultHeader(GraphQueryResultHeader other) : this() {
      dataModelTimestamp_ = other.dataModelTimestamp_;
      transform_ = other.transform_ != null ? other.transform_.Clone() : null;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      fieldNames_ = other.fieldNames_.Clone();
      compressedFrames_ = other.compressedFrames_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GraphQueryResultHeader Clone() {
      return new GraphQueryResultHeader(this);
    }

    /// <summary>Field number for the "data_model_timestamp" field.</summary>
    public const int DataModelTimestampFieldNumber = 1;
    private ulong dataModelTimestamp_;
    /// <summary>
    /// UTC UNIX epoch in milliseconds
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong DataModelTimestamp {
      get { return dataModelTimestamp_; }
      set {
        dataModelTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "transform" field.</summary>
    public const int TransformFieldNumber = 2;
    private global::EsriPBuffer.Graph.Transform transform_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.Graph.Transform Transform {
      get { return transform_; }
      set {
        transform_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 3;
    private global::EsriPBuffer.Graph.Error error_;
    /// <summary>
    /// optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.Graph.Error Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "field_names" field.</summary>
    public const int FieldNamesFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_fieldNames_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> fieldNames_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> FieldNames {
      get { return fieldNames_; }
    }

    /// <summary>Field number for the "compressed_frames" field.</summary>
    public const int CompressedFramesFieldNumber = 5;
    private bool compressedFrames_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CompressedFrames {
      get { return compressedFrames_; }
      set {
        compressedFrames_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GraphQueryResultHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GraphQueryResultHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DataModelTimestamp != other.DataModelTimestamp) return false;
      if (!object.Equals(Transform, other.Transform)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      if(!fieldNames_.Equals(other.fieldNames_)) return false;
      if (CompressedFrames != other.CompressedFrames) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DataModelTimestamp != 0UL) hash ^= DataModelTimestamp.GetHashCode();
      if (transform_ != null) hash ^= Transform.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      hash ^= fieldNames_.GetHashCode();
      if (CompressedFrames != false) hash ^= CompressedFrames.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DataModelTimestamp != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(DataModelTimestamp);
      }
      if (transform_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Transform);
      }
      if (error_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Error);
      }
      fieldNames_.WriteTo(output, _repeated_fieldNames_codec);
      if (CompressedFrames != false) {
        output.WriteRawTag(40);
        output.WriteBool(CompressedFrames);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DataModelTimestamp != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(DataModelTimestamp);
      }
      if (transform_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Transform);
      }
      if (error_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Error);
      }
      fieldNames_.WriteTo(ref output, _repeated_fieldNames_codec);
      if (CompressedFrames != false) {
        output.WriteRawTag(40);
        output.WriteBool(CompressedFrames);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DataModelTimestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DataModelTimestamp);
      }
      if (transform_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transform);
      }
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      size += fieldNames_.CalculateSize(_repeated_fieldNames_codec);
      if (CompressedFrames != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GraphQueryResultHeader other) {
      if (other == null) {
        return;
      }
      if (other.DataModelTimestamp != 0UL) {
        DataModelTimestamp = other.DataModelTimestamp;
      }
      if (other.transform_ != null) {
        if (transform_ == null) {
          Transform = new global::EsriPBuffer.Graph.Transform();
        }
        Transform.MergeFrom(other.Transform);
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::EsriPBuffer.Graph.Error();
        }
        Error.MergeFrom(other.Error);
      }
      fieldNames_.Add(other.fieldNames_);
      if (other.CompressedFrames != false) {
        CompressedFrames = other.CompressedFrames;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DataModelTimestamp = input.ReadUInt64();
            break;
          }
          case 18: {
            if (transform_ == null) {
              Transform = new global::EsriPBuffer.Graph.Transform();
            }
            input.ReadMessage(Transform);
            break;
          }
          case 26: {
            if (error_ == null) {
              Error = new global::EsriPBuffer.Graph.Error();
            }
            input.ReadMessage(Error);
            break;
          }
          case 34: {
            fieldNames_.AddEntriesFrom(input, _repeated_fieldNames_codec);
            break;
          }
          case 40: {
            CompressedFrames = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            DataModelTimestamp = input.ReadUInt64();
            break;
          }
          case 18: {
            if (transform_ == null) {
              Transform = new global::EsriPBuffer.Graph.Transform();
            }
            input.ReadMessage(Transform);
            break;
          }
          case 26: {
            if (error_ == null) {
              Error = new global::EsriPBuffer.Graph.Error();
            }
            input.ReadMessage(Error);
            break;
          }
          case 34: {
            fieldNames_.AddEntriesFrom(ref input, _repeated_fieldNames_codec);
            break;
          }
          case 40: {
            CompressedFrames = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GraphQueryRow : pb::IMessage<GraphQueryRow>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GraphQueryRow> _parser = new pb::MessageParser<GraphQueryRow>(() => new GraphQueryRow());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GraphQueryRow> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EsriPBuffer.Graph.QueryResponseReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GraphQueryRow() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GraphQueryRow(GraphQueryRow other) : this() {
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GraphQueryRow Clone() {
      return new GraphQueryRow(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::EsriPBuffer.Graph.AnyValue> _repeated_values_codec
        = pb::FieldCodec.ForMessage(10, global::EsriPBuffer.Graph.AnyValue.Parser);
    private readonly pbc::RepeatedField<global::EsriPBuffer.Graph.AnyValue> values_ = new pbc::RepeatedField<global::EsriPBuffer.Graph.AnyValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::EsriPBuffer.Graph.AnyValue> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GraphQueryRow);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GraphQueryRow other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      values_.WriteTo(output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      values_.WriteTo(ref output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GraphQueryRow other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            values_.AddEntriesFrom(ref input, _repeated_values_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GraphQueryResultFrame : pb::IMessage<GraphQueryResultFrame>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GraphQueryResultFrame> _parser = new pb::MessageParser<GraphQueryResultFrame>(() => new GraphQueryResultFrame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GraphQueryResultFrame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EsriPBuffer.Graph.QueryResponseReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GraphQueryResultFrame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GraphQueryResultFrame(GraphQueryResultFrame other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      rows_ = other.rows_.Clone();
      exceededTransferLimit_ = other.exceededTransferLimit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GraphQueryResultFrame Clone() {
      return new GraphQueryResultFrame(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::EsriPBuffer.Graph.Error error_;
    /// <summary>
    /// optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EsriPBuffer.Graph.Error Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "rows" field.</summary>
    public const int RowsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::EsriPBuffer.Graph.GraphQueryRow> _repeated_rows_codec
        = pb::FieldCodec.ForMessage(18, global::EsriPBuffer.Graph.GraphQueryRow.Parser);
    private readonly pbc::RepeatedField<global::EsriPBuffer.Graph.GraphQueryRow> rows_ = new pbc::RepeatedField<global::EsriPBuffer.Graph.GraphQueryRow>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::EsriPBuffer.Graph.GraphQueryRow> Rows {
      get { return rows_; }
    }

    /// <summary>Field number for the "exceeded_transfer_limit" field.</summary>
    public const int ExceededTransferLimitFieldNumber = 3;
    private bool exceededTransferLimit_;
    /// <summary>
    ///exceeded_transfer_limit property can only be set on the last frame of the graph query response
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ExceededTransferLimit {
      get { return exceededTransferLimit_; }
      set {
        exceededTransferLimit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GraphQueryResultFrame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GraphQueryResultFrame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if(!rows_.Equals(other.rows_)) return false;
      if (ExceededTransferLimit != other.ExceededTransferLimit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      hash ^= rows_.GetHashCode();
      if (ExceededTransferLimit != false) hash ^= ExceededTransferLimit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      rows_.WriteTo(output, _repeated_rows_codec);
      if (ExceededTransferLimit != false) {
        output.WriteRawTag(24);
        output.WriteBool(ExceededTransferLimit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      rows_.WriteTo(ref output, _repeated_rows_codec);
      if (ExceededTransferLimit != false) {
        output.WriteRawTag(24);
        output.WriteBool(ExceededTransferLimit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      size += rows_.CalculateSize(_repeated_rows_codec);
      if (ExceededTransferLimit != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GraphQueryResultFrame other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::EsriPBuffer.Graph.Error();
        }
        Error.MergeFrom(other.Error);
      }
      rows_.Add(other.rows_);
      if (other.ExceededTransferLimit != false) {
        ExceededTransferLimit = other.ExceededTransferLimit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (error_ == null) {
              Error = new global::EsriPBuffer.Graph.Error();
            }
            input.ReadMessage(Error);
            break;
          }
          case 18: {
            rows_.AddEntriesFrom(input, _repeated_rows_codec);
            break;
          }
          case 24: {
            ExceededTransferLimit = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (error_ == null) {
              Error = new global::EsriPBuffer.Graph.Error();
            }
            input.ReadMessage(Error);
            break;
          }
          case 18: {
            rows_.AddEntriesFrom(ref input, _repeated_rows_codec);
            break;
          }
          case 24: {
            ExceededTransferLimit = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
