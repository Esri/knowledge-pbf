// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: esriPBuffer/graph/ApplyEditsResponse.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_esriPBuffer_2fgraph_2fApplyEditsResponse_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_esriPBuffer_2fgraph_2fApplyEditsResponse_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3013000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3013000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry_lite.h>
#include <google/protobuf/map_field_lite.h>
#include "esriPBuffer/graph/EsriGraphTypes.pb.h"
#include "esriPBuffer/ObjectIdentifierSet.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_esriPBuffer_2fgraph_2fApplyEditsResponse_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_esriPBuffer_2fgraph_2fApplyEditsResponse_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[13]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace esriPBuffer {
namespace graph {
class CascadingRelationshipDeletes;
class CascadingRelationshipDeletesDefaultTypeInternal;
extern CascadingRelationshipDeletesDefaultTypeInternal _CascadingRelationshipDeletes_default_instance_;
class EditResults;
class EditResultsDefaultTypeInternal;
extern EditResultsDefaultTypeInternal _EditResults_default_instance_;
class EditResults_ErrorsEntry_DoNotUse;
class EditResults_ErrorsEntry_DoNotUseDefaultTypeInternal;
extern EditResults_ErrorsEntry_DoNotUseDefaultTypeInternal _EditResults_ErrorsEntry_DoNotUse_default_instance_;
class GraphApplyEditsResult;
class GraphApplyEditsResultDefaultTypeInternal;
extern GraphApplyEditsResultDefaultTypeInternal _GraphApplyEditsResult_default_instance_;
class GraphApplyEditsResult_CascadingRelationshipDeleteResultsEntry_DoNotUse;
class GraphApplyEditsResult_CascadingRelationshipDeleteResultsEntry_DoNotUseDefaultTypeInternal;
extern GraphApplyEditsResult_CascadingRelationshipDeleteResultsEntry_DoNotUseDefaultTypeInternal _GraphApplyEditsResult_CascadingRelationshipDeleteResultsEntry_DoNotUse_default_instance_;
class GraphApplyEditsResult_EntityAddResultsEntry_DoNotUse;
class GraphApplyEditsResult_EntityAddResultsEntry_DoNotUseDefaultTypeInternal;
extern GraphApplyEditsResult_EntityAddResultsEntry_DoNotUseDefaultTypeInternal _GraphApplyEditsResult_EntityAddResultsEntry_DoNotUse_default_instance_;
class GraphApplyEditsResult_EntityDeleteResultsEntry_DoNotUse;
class GraphApplyEditsResult_EntityDeleteResultsEntry_DoNotUseDefaultTypeInternal;
extern GraphApplyEditsResult_EntityDeleteResultsEntry_DoNotUseDefaultTypeInternal _GraphApplyEditsResult_EntityDeleteResultsEntry_DoNotUse_default_instance_;
class GraphApplyEditsResult_EntityUpdateResultsEntry_DoNotUse;
class GraphApplyEditsResult_EntityUpdateResultsEntry_DoNotUseDefaultTypeInternal;
extern GraphApplyEditsResult_EntityUpdateResultsEntry_DoNotUseDefaultTypeInternal _GraphApplyEditsResult_EntityUpdateResultsEntry_DoNotUse_default_instance_;
class GraphApplyEditsResult_RelTypeSchemaChangesEntry_DoNotUse;
class GraphApplyEditsResult_RelTypeSchemaChangesEntry_DoNotUseDefaultTypeInternal;
extern GraphApplyEditsResult_RelTypeSchemaChangesEntry_DoNotUseDefaultTypeInternal _GraphApplyEditsResult_RelTypeSchemaChangesEntry_DoNotUse_default_instance_;
class GraphApplyEditsResult_RelationshipAddResultsEntry_DoNotUse;
class GraphApplyEditsResult_RelationshipAddResultsEntry_DoNotUseDefaultTypeInternal;
extern GraphApplyEditsResult_RelationshipAddResultsEntry_DoNotUseDefaultTypeInternal _GraphApplyEditsResult_RelationshipAddResultsEntry_DoNotUse_default_instance_;
class GraphApplyEditsResult_RelationshipDeleteResultsEntry_DoNotUse;
class GraphApplyEditsResult_RelationshipDeleteResultsEntry_DoNotUseDefaultTypeInternal;
extern GraphApplyEditsResult_RelationshipDeleteResultsEntry_DoNotUseDefaultTypeInternal _GraphApplyEditsResult_RelationshipDeleteResultsEntry_DoNotUse_default_instance_;
class GraphApplyEditsResult_RelationshipUpdateResultsEntry_DoNotUse;
class GraphApplyEditsResult_RelationshipUpdateResultsEntry_DoNotUseDefaultTypeInternal;
extern GraphApplyEditsResult_RelationshipUpdateResultsEntry_DoNotUseDefaultTypeInternal _GraphApplyEditsResult_RelationshipUpdateResultsEntry_DoNotUse_default_instance_;
class RelationshipTypeSchemaChanges;
class RelationshipTypeSchemaChangesDefaultTypeInternal;
extern RelationshipTypeSchemaChangesDefaultTypeInternal _RelationshipTypeSchemaChanges_default_instance_;
}  // namespace graph
}  // namespace esriPBuffer
PROTOBUF_NAMESPACE_OPEN
template<> ::esriPBuffer::graph::CascadingRelationshipDeletes* Arena::CreateMaybeMessage<::esriPBuffer::graph::CascadingRelationshipDeletes>(Arena*);
template<> ::esriPBuffer::graph::EditResults* Arena::CreateMaybeMessage<::esriPBuffer::graph::EditResults>(Arena*);
template<> ::esriPBuffer::graph::EditResults_ErrorsEntry_DoNotUse* Arena::CreateMaybeMessage<::esriPBuffer::graph::EditResults_ErrorsEntry_DoNotUse>(Arena*);
template<> ::esriPBuffer::graph::GraphApplyEditsResult* Arena::CreateMaybeMessage<::esriPBuffer::graph::GraphApplyEditsResult>(Arena*);
template<> ::esriPBuffer::graph::GraphApplyEditsResult_CascadingRelationshipDeleteResultsEntry_DoNotUse* Arena::CreateMaybeMessage<::esriPBuffer::graph::GraphApplyEditsResult_CascadingRelationshipDeleteResultsEntry_DoNotUse>(Arena*);
template<> ::esriPBuffer::graph::GraphApplyEditsResult_EntityAddResultsEntry_DoNotUse* Arena::CreateMaybeMessage<::esriPBuffer::graph::GraphApplyEditsResult_EntityAddResultsEntry_DoNotUse>(Arena*);
template<> ::esriPBuffer::graph::GraphApplyEditsResult_EntityDeleteResultsEntry_DoNotUse* Arena::CreateMaybeMessage<::esriPBuffer::graph::GraphApplyEditsResult_EntityDeleteResultsEntry_DoNotUse>(Arena*);
template<> ::esriPBuffer::graph::GraphApplyEditsResult_EntityUpdateResultsEntry_DoNotUse* Arena::CreateMaybeMessage<::esriPBuffer::graph::GraphApplyEditsResult_EntityUpdateResultsEntry_DoNotUse>(Arena*);
template<> ::esriPBuffer::graph::GraphApplyEditsResult_RelTypeSchemaChangesEntry_DoNotUse* Arena::CreateMaybeMessage<::esriPBuffer::graph::GraphApplyEditsResult_RelTypeSchemaChangesEntry_DoNotUse>(Arena*);
template<> ::esriPBuffer::graph::GraphApplyEditsResult_RelationshipAddResultsEntry_DoNotUse* Arena::CreateMaybeMessage<::esriPBuffer::graph::GraphApplyEditsResult_RelationshipAddResultsEntry_DoNotUse>(Arena*);
template<> ::esriPBuffer::graph::GraphApplyEditsResult_RelationshipDeleteResultsEntry_DoNotUse* Arena::CreateMaybeMessage<::esriPBuffer::graph::GraphApplyEditsResult_RelationshipDeleteResultsEntry_DoNotUse>(Arena*);
template<> ::esriPBuffer::graph::GraphApplyEditsResult_RelationshipUpdateResultsEntry_DoNotUse* Arena::CreateMaybeMessage<::esriPBuffer::graph::GraphApplyEditsResult_RelationshipUpdateResultsEntry_DoNotUse>(Arena*);
template<> ::esriPBuffer::graph::RelationshipTypeSchemaChanges* Arena::CreateMaybeMessage<::esriPBuffer::graph::RelationshipTypeSchemaChanges>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace esriPBuffer {
namespace graph {

// ===================================================================

class EditResults_ErrorsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntryLite<EditResults_ErrorsEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::uint64, ::esriPBuffer::graph::Error,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntryLite<EditResults_ErrorsEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::uint64, ::esriPBuffer::graph::Error,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  EditResults_ErrorsEntry_DoNotUse();
  explicit EditResults_ErrorsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const EditResults_ErrorsEntry_DoNotUse& other);
  static const EditResults_ErrorsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const EditResults_ErrorsEntry_DoNotUse*>(&_EditResults_ErrorsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
};

// -------------------------------------------------------------------

class EditResults PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:esriPBuffer.graph.EditResults) */ {
 public:
  inline EditResults() : EditResults(nullptr) {}
  virtual ~EditResults();

  EditResults(const EditResults& from);
  EditResults(EditResults&& from) noexcept
    : EditResults() {
    *this = ::std::move(from);
  }

  inline EditResults& operator=(const EditResults& from) {
    CopyFrom(from);
    return *this;
  }
  inline EditResults& operator=(EditResults&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const EditResults& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EditResults* internal_default_instance() {
    return reinterpret_cast<const EditResults*>(
               &_EditResults_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(EditResults& a, EditResults& b) {
    a.Swap(&b);
  }
  inline void Swap(EditResults* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EditResults* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline EditResults* New() const final {
    return CreateMaybeMessage<EditResults>(nullptr);
  }

  EditResults* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<EditResults>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const EditResults& from);
  void MergeFrom(const EditResults& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EditResults* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "esriPBuffer.graph.EditResults";
  }
  protected:
  explicit EditResults(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kErrorsFieldNumber = 3,
    kGlobalidArrayFieldNumber = 2,
    kOidArrayFieldNumber = 1,
  };
  // map<uint64, .esriPBuffer.graph.Error> errors = 3;
  int errors_size() const;
  private:
  int _internal_errors_size() const;
  public:
  void clear_errors();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::esriPBuffer::graph::Error >&
      _internal_errors() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::esriPBuffer::graph::Error >*
      _internal_mutable_errors();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::esriPBuffer::graph::Error >&
      errors() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::esriPBuffer::graph::Error >*
      mutable_errors();

  // bytes globalid_array = 2;
  void clear_globalid_array();
  const std::string& globalid_array() const;
  void set_globalid_array(const std::string& value);
  void set_globalid_array(std::string&& value);
  void set_globalid_array(const char* value);
  void set_globalid_array(const void* value, size_t size);
  std::string* mutable_globalid_array();
  std::string* release_globalid_array();
  void set_allocated_globalid_array(std::string* globalid_array);
  private:
  const std::string& _internal_globalid_array() const;
  void _internal_set_globalid_array(const std::string& value);
  std::string* _internal_mutable_globalid_array();
  public:

  // .esriPBuffer.ObjectIdArray oid_array = 1;
  bool has_oid_array() const;
  private:
  bool _internal_has_oid_array() const;
  public:
  void clear_oid_array();
  const ::esriPBuffer::ObjectIdArray& oid_array() const;
  ::esriPBuffer::ObjectIdArray* release_oid_array();
  ::esriPBuffer::ObjectIdArray* mutable_oid_array();
  void set_allocated_oid_array(::esriPBuffer::ObjectIdArray* oid_array);
  private:
  const ::esriPBuffer::ObjectIdArray& _internal_oid_array() const;
  ::esriPBuffer::ObjectIdArray* _internal_mutable_oid_array();
  public:
  void unsafe_arena_set_allocated_oid_array(
      ::esriPBuffer::ObjectIdArray* oid_array);
  ::esriPBuffer::ObjectIdArray* unsafe_arena_release_oid_array();

  // @@protoc_insertion_point(class_scope:esriPBuffer.graph.EditResults)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapFieldLite<
      EditResults_ErrorsEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::uint64, ::esriPBuffer::graph::Error,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > errors_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr globalid_array_;
  ::esriPBuffer::ObjectIdArray* oid_array_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_esriPBuffer_2fgraph_2fApplyEditsResponse_2eproto;
};
// -------------------------------------------------------------------

class CascadingRelationshipDeletes PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:esriPBuffer.graph.CascadingRelationshipDeletes) */ {
 public:
  inline CascadingRelationshipDeletes() : CascadingRelationshipDeletes(nullptr) {}
  virtual ~CascadingRelationshipDeletes();

  CascadingRelationshipDeletes(const CascadingRelationshipDeletes& from);
  CascadingRelationshipDeletes(CascadingRelationshipDeletes&& from) noexcept
    : CascadingRelationshipDeletes() {
    *this = ::std::move(from);
  }

  inline CascadingRelationshipDeletes& operator=(const CascadingRelationshipDeletes& from) {
    CopyFrom(from);
    return *this;
  }
  inline CascadingRelationshipDeletes& operator=(CascadingRelationshipDeletes&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const CascadingRelationshipDeletes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CascadingRelationshipDeletes* internal_default_instance() {
    return reinterpret_cast<const CascadingRelationshipDeletes*>(
               &_CascadingRelationshipDeletes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CascadingRelationshipDeletes& a, CascadingRelationshipDeletes& b) {
    a.Swap(&b);
  }
  inline void Swap(CascadingRelationshipDeletes* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CascadingRelationshipDeletes* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CascadingRelationshipDeletes* New() const final {
    return CreateMaybeMessage<CascadingRelationshipDeletes>(nullptr);
  }

  CascadingRelationshipDeletes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CascadingRelationshipDeletes>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const CascadingRelationshipDeletes& from);
  void MergeFrom(const CascadingRelationshipDeletes& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CascadingRelationshipDeletes* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "esriPBuffer.graph.CascadingRelationshipDeletes";
  }
  protected:
  explicit CascadingRelationshipDeletes(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOriginEntityGlobalidArrayFieldNumber = 2,
    kDestEntityGlobalidArrayFieldNumber = 3,
    kRelationshipDeleteResultsFieldNumber = 1,
  };
  // bytes origin_entity_globalid_array = 2;
  void clear_origin_entity_globalid_array();
  const std::string& origin_entity_globalid_array() const;
  void set_origin_entity_globalid_array(const std::string& value);
  void set_origin_entity_globalid_array(std::string&& value);
  void set_origin_entity_globalid_array(const char* value);
  void set_origin_entity_globalid_array(const void* value, size_t size);
  std::string* mutable_origin_entity_globalid_array();
  std::string* release_origin_entity_globalid_array();
  void set_allocated_origin_entity_globalid_array(std::string* origin_entity_globalid_array);
  private:
  const std::string& _internal_origin_entity_globalid_array() const;
  void _internal_set_origin_entity_globalid_array(const std::string& value);
  std::string* _internal_mutable_origin_entity_globalid_array();
  public:

  // bytes dest_entity_globalid_array = 3;
  void clear_dest_entity_globalid_array();
  const std::string& dest_entity_globalid_array() const;
  void set_dest_entity_globalid_array(const std::string& value);
  void set_dest_entity_globalid_array(std::string&& value);
  void set_dest_entity_globalid_array(const char* value);
  void set_dest_entity_globalid_array(const void* value, size_t size);
  std::string* mutable_dest_entity_globalid_array();
  std::string* release_dest_entity_globalid_array();
  void set_allocated_dest_entity_globalid_array(std::string* dest_entity_globalid_array);
  private:
  const std::string& _internal_dest_entity_globalid_array() const;
  void _internal_set_dest_entity_globalid_array(const std::string& value);
  std::string* _internal_mutable_dest_entity_globalid_array();
  public:

  // .esriPBuffer.graph.EditResults relationship_delete_results = 1;
  bool has_relationship_delete_results() const;
  private:
  bool _internal_has_relationship_delete_results() const;
  public:
  void clear_relationship_delete_results();
  const ::esriPBuffer::graph::EditResults& relationship_delete_results() const;
  ::esriPBuffer::graph::EditResults* release_relationship_delete_results();
  ::esriPBuffer::graph::EditResults* mutable_relationship_delete_results();
  void set_allocated_relationship_delete_results(::esriPBuffer::graph::EditResults* relationship_delete_results);
  private:
  const ::esriPBuffer::graph::EditResults& _internal_relationship_delete_results() const;
  ::esriPBuffer::graph::EditResults* _internal_mutable_relationship_delete_results();
  public:
  void unsafe_arena_set_allocated_relationship_delete_results(
      ::esriPBuffer::graph::EditResults* relationship_delete_results);
  ::esriPBuffer::graph::EditResults* unsafe_arena_release_relationship_delete_results();

  // @@protoc_insertion_point(class_scope:esriPBuffer.graph.CascadingRelationshipDeletes)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr origin_entity_globalid_array_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr dest_entity_globalid_array_;
  ::esriPBuffer::graph::EditResults* relationship_delete_results_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_esriPBuffer_2fgraph_2fApplyEditsResponse_2eproto;
};
// -------------------------------------------------------------------

class RelationshipTypeSchemaChanges PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:esriPBuffer.graph.RelationshipTypeSchemaChanges) */ {
 public:
  inline RelationshipTypeSchemaChanges() : RelationshipTypeSchemaChanges(nullptr) {}
  virtual ~RelationshipTypeSchemaChanges();

  RelationshipTypeSchemaChanges(const RelationshipTypeSchemaChanges& from);
  RelationshipTypeSchemaChanges(RelationshipTypeSchemaChanges&& from) noexcept
    : RelationshipTypeSchemaChanges() {
    *this = ::std::move(from);
  }

  inline RelationshipTypeSchemaChanges& operator=(const RelationshipTypeSchemaChanges& from) {
    CopyFrom(from);
    return *this;
  }
  inline RelationshipTypeSchemaChanges& operator=(RelationshipTypeSchemaChanges&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const RelationshipTypeSchemaChanges& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RelationshipTypeSchemaChanges* internal_default_instance() {
    return reinterpret_cast<const RelationshipTypeSchemaChanges*>(
               &_RelationshipTypeSchemaChanges_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(RelationshipTypeSchemaChanges& a, RelationshipTypeSchemaChanges& b) {
    a.Swap(&b);
  }
  inline void Swap(RelationshipTypeSchemaChanges* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RelationshipTypeSchemaChanges* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RelationshipTypeSchemaChanges* New() const final {
    return CreateMaybeMessage<RelationshipTypeSchemaChanges>(nullptr);
  }

  RelationshipTypeSchemaChanges* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RelationshipTypeSchemaChanges>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const RelationshipTypeSchemaChanges& from);
  void MergeFrom(const RelationshipTypeSchemaChanges& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RelationshipTypeSchemaChanges* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "esriPBuffer.graph.RelationshipTypeSchemaChanges";
  }
  protected:
  explicit RelationshipTypeSchemaChanges(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOriginEntityTypesFieldNumber = 1,
    kDestEntityTypesFieldNumber = 2,
  };
  // repeated string origin_entity_types = 1;
  int origin_entity_types_size() const;
  private:
  int _internal_origin_entity_types_size() const;
  public:
  void clear_origin_entity_types();
  const std::string& origin_entity_types(int index) const;
  std::string* mutable_origin_entity_types(int index);
  void set_origin_entity_types(int index, const std::string& value);
  void set_origin_entity_types(int index, std::string&& value);
  void set_origin_entity_types(int index, const char* value);
  void set_origin_entity_types(int index, const char* value, size_t size);
  std::string* add_origin_entity_types();
  void add_origin_entity_types(const std::string& value);
  void add_origin_entity_types(std::string&& value);
  void add_origin_entity_types(const char* value);
  void add_origin_entity_types(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& origin_entity_types() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_origin_entity_types();
  private:
  const std::string& _internal_origin_entity_types(int index) const;
  std::string* _internal_add_origin_entity_types();
  public:

  // repeated string dest_entity_types = 2;
  int dest_entity_types_size() const;
  private:
  int _internal_dest_entity_types_size() const;
  public:
  void clear_dest_entity_types();
  const std::string& dest_entity_types(int index) const;
  std::string* mutable_dest_entity_types(int index);
  void set_dest_entity_types(int index, const std::string& value);
  void set_dest_entity_types(int index, std::string&& value);
  void set_dest_entity_types(int index, const char* value);
  void set_dest_entity_types(int index, const char* value, size_t size);
  std::string* add_dest_entity_types();
  void add_dest_entity_types(const std::string& value);
  void add_dest_entity_types(std::string&& value);
  void add_dest_entity_types(const char* value);
  void add_dest_entity_types(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& dest_entity_types() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_dest_entity_types();
  private:
  const std::string& _internal_dest_entity_types(int index) const;
  std::string* _internal_add_dest_entity_types();
  public:

  // @@protoc_insertion_point(class_scope:esriPBuffer.graph.RelationshipTypeSchemaChanges)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> origin_entity_types_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> dest_entity_types_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_esriPBuffer_2fgraph_2fApplyEditsResponse_2eproto;
};
// -------------------------------------------------------------------

class GraphApplyEditsResult_EntityAddResultsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntryLite<GraphApplyEditsResult_EntityAddResultsEntry_DoNotUse, 
    std::string, ::esriPBuffer::graph::EditResults,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntryLite<GraphApplyEditsResult_EntityAddResultsEntry_DoNotUse, 
    std::string, ::esriPBuffer::graph::EditResults,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  GraphApplyEditsResult_EntityAddResultsEntry_DoNotUse();
  explicit GraphApplyEditsResult_EntityAddResultsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const GraphApplyEditsResult_EntityAddResultsEntry_DoNotUse& other);
  static const GraphApplyEditsResult_EntityAddResultsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GraphApplyEditsResult_EntityAddResultsEntry_DoNotUse*>(&_GraphApplyEditsResult_EntityAddResultsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "esriPBuffer.graph.GraphApplyEditsResult.EntityAddResultsEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
};

// -------------------------------------------------------------------

class GraphApplyEditsResult_RelationshipAddResultsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntryLite<GraphApplyEditsResult_RelationshipAddResultsEntry_DoNotUse, 
    std::string, ::esriPBuffer::graph::EditResults,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntryLite<GraphApplyEditsResult_RelationshipAddResultsEntry_DoNotUse, 
    std::string, ::esriPBuffer::graph::EditResults,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  GraphApplyEditsResult_RelationshipAddResultsEntry_DoNotUse();
  explicit GraphApplyEditsResult_RelationshipAddResultsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const GraphApplyEditsResult_RelationshipAddResultsEntry_DoNotUse& other);
  static const GraphApplyEditsResult_RelationshipAddResultsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GraphApplyEditsResult_RelationshipAddResultsEntry_DoNotUse*>(&_GraphApplyEditsResult_RelationshipAddResultsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "esriPBuffer.graph.GraphApplyEditsResult.RelationshipAddResultsEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
};

// -------------------------------------------------------------------

class GraphApplyEditsResult_EntityUpdateResultsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntryLite<GraphApplyEditsResult_EntityUpdateResultsEntry_DoNotUse, 
    std::string, ::esriPBuffer::graph::EditResults,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntryLite<GraphApplyEditsResult_EntityUpdateResultsEntry_DoNotUse, 
    std::string, ::esriPBuffer::graph::EditResults,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  GraphApplyEditsResult_EntityUpdateResultsEntry_DoNotUse();
  explicit GraphApplyEditsResult_EntityUpdateResultsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const GraphApplyEditsResult_EntityUpdateResultsEntry_DoNotUse& other);
  static const GraphApplyEditsResult_EntityUpdateResultsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GraphApplyEditsResult_EntityUpdateResultsEntry_DoNotUse*>(&_GraphApplyEditsResult_EntityUpdateResultsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "esriPBuffer.graph.GraphApplyEditsResult.EntityUpdateResultsEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
};

// -------------------------------------------------------------------

class GraphApplyEditsResult_RelationshipUpdateResultsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntryLite<GraphApplyEditsResult_RelationshipUpdateResultsEntry_DoNotUse, 
    std::string, ::esriPBuffer::graph::EditResults,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntryLite<GraphApplyEditsResult_RelationshipUpdateResultsEntry_DoNotUse, 
    std::string, ::esriPBuffer::graph::EditResults,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  GraphApplyEditsResult_RelationshipUpdateResultsEntry_DoNotUse();
  explicit GraphApplyEditsResult_RelationshipUpdateResultsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const GraphApplyEditsResult_RelationshipUpdateResultsEntry_DoNotUse& other);
  static const GraphApplyEditsResult_RelationshipUpdateResultsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GraphApplyEditsResult_RelationshipUpdateResultsEntry_DoNotUse*>(&_GraphApplyEditsResult_RelationshipUpdateResultsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "esriPBuffer.graph.GraphApplyEditsResult.RelationshipUpdateResultsEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
};

// -------------------------------------------------------------------

class GraphApplyEditsResult_EntityDeleteResultsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntryLite<GraphApplyEditsResult_EntityDeleteResultsEntry_DoNotUse, 
    std::string, ::esriPBuffer::graph::EditResults,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntryLite<GraphApplyEditsResult_EntityDeleteResultsEntry_DoNotUse, 
    std::string, ::esriPBuffer::graph::EditResults,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  GraphApplyEditsResult_EntityDeleteResultsEntry_DoNotUse();
  explicit GraphApplyEditsResult_EntityDeleteResultsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const GraphApplyEditsResult_EntityDeleteResultsEntry_DoNotUse& other);
  static const GraphApplyEditsResult_EntityDeleteResultsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GraphApplyEditsResult_EntityDeleteResultsEntry_DoNotUse*>(&_GraphApplyEditsResult_EntityDeleteResultsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "esriPBuffer.graph.GraphApplyEditsResult.EntityDeleteResultsEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
};

// -------------------------------------------------------------------

class GraphApplyEditsResult_RelationshipDeleteResultsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntryLite<GraphApplyEditsResult_RelationshipDeleteResultsEntry_DoNotUse, 
    std::string, ::esriPBuffer::graph::EditResults,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntryLite<GraphApplyEditsResult_RelationshipDeleteResultsEntry_DoNotUse, 
    std::string, ::esriPBuffer::graph::EditResults,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  GraphApplyEditsResult_RelationshipDeleteResultsEntry_DoNotUse();
  explicit GraphApplyEditsResult_RelationshipDeleteResultsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const GraphApplyEditsResult_RelationshipDeleteResultsEntry_DoNotUse& other);
  static const GraphApplyEditsResult_RelationshipDeleteResultsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GraphApplyEditsResult_RelationshipDeleteResultsEntry_DoNotUse*>(&_GraphApplyEditsResult_RelationshipDeleteResultsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "esriPBuffer.graph.GraphApplyEditsResult.RelationshipDeleteResultsEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
};

// -------------------------------------------------------------------

class GraphApplyEditsResult_CascadingRelationshipDeleteResultsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntryLite<GraphApplyEditsResult_CascadingRelationshipDeleteResultsEntry_DoNotUse, 
    std::string, ::esriPBuffer::graph::CascadingRelationshipDeletes,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntryLite<GraphApplyEditsResult_CascadingRelationshipDeleteResultsEntry_DoNotUse, 
    std::string, ::esriPBuffer::graph::CascadingRelationshipDeletes,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  GraphApplyEditsResult_CascadingRelationshipDeleteResultsEntry_DoNotUse();
  explicit GraphApplyEditsResult_CascadingRelationshipDeleteResultsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const GraphApplyEditsResult_CascadingRelationshipDeleteResultsEntry_DoNotUse& other);
  static const GraphApplyEditsResult_CascadingRelationshipDeleteResultsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GraphApplyEditsResult_CascadingRelationshipDeleteResultsEntry_DoNotUse*>(&_GraphApplyEditsResult_CascadingRelationshipDeleteResultsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "esriPBuffer.graph.GraphApplyEditsResult.CascadingRelationshipDeleteResultsEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
};

// -------------------------------------------------------------------

class GraphApplyEditsResult_RelTypeSchemaChangesEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntryLite<GraphApplyEditsResult_RelTypeSchemaChangesEntry_DoNotUse, 
    std::string, ::esriPBuffer::graph::RelationshipTypeSchemaChanges,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntryLite<GraphApplyEditsResult_RelTypeSchemaChangesEntry_DoNotUse, 
    std::string, ::esriPBuffer::graph::RelationshipTypeSchemaChanges,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  GraphApplyEditsResult_RelTypeSchemaChangesEntry_DoNotUse();
  explicit GraphApplyEditsResult_RelTypeSchemaChangesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const GraphApplyEditsResult_RelTypeSchemaChangesEntry_DoNotUse& other);
  static const GraphApplyEditsResult_RelTypeSchemaChangesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GraphApplyEditsResult_RelTypeSchemaChangesEntry_DoNotUse*>(&_GraphApplyEditsResult_RelTypeSchemaChangesEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "esriPBuffer.graph.GraphApplyEditsResult.RelTypeSchemaChangesEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
};

// -------------------------------------------------------------------

class GraphApplyEditsResult PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:esriPBuffer.graph.GraphApplyEditsResult) */ {
 public:
  inline GraphApplyEditsResult() : GraphApplyEditsResult(nullptr) {}
  virtual ~GraphApplyEditsResult();

  GraphApplyEditsResult(const GraphApplyEditsResult& from);
  GraphApplyEditsResult(GraphApplyEditsResult&& from) noexcept
    : GraphApplyEditsResult() {
    *this = ::std::move(from);
  }

  inline GraphApplyEditsResult& operator=(const GraphApplyEditsResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline GraphApplyEditsResult& operator=(GraphApplyEditsResult&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const GraphApplyEditsResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GraphApplyEditsResult* internal_default_instance() {
    return reinterpret_cast<const GraphApplyEditsResult*>(
               &_GraphApplyEditsResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(GraphApplyEditsResult& a, GraphApplyEditsResult& b) {
    a.Swap(&b);
  }
  inline void Swap(GraphApplyEditsResult* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GraphApplyEditsResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GraphApplyEditsResult* New() const final {
    return CreateMaybeMessage<GraphApplyEditsResult>(nullptr);
  }

  GraphApplyEditsResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GraphApplyEditsResult>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const GraphApplyEditsResult& from);
  void MergeFrom(const GraphApplyEditsResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GraphApplyEditsResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "esriPBuffer.graph.GraphApplyEditsResult";
  }
  protected:
  explicit GraphApplyEditsResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kEntityAddResultsFieldNumber = 2,
    kRelationshipAddResultsFieldNumber = 3,
    kEntityUpdateResultsFieldNumber = 4,
    kRelationshipUpdateResultsFieldNumber = 5,
    kEntityDeleteResultsFieldNumber = 6,
    kRelationshipDeleteResultsFieldNumber = 7,
    kCascadingRelationshipDeleteResultsFieldNumber = 8,
    kRelTypeSchemaChangesFieldNumber = 9,
    kErrorFieldNumber = 1,
  };
  // map<string, .esriPBuffer.graph.EditResults> entity_add_results = 2;
  int entity_add_results_size() const;
  private:
  int _internal_entity_add_results_size() const;
  public:
  void clear_entity_add_results();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >&
      _internal_entity_add_results() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >*
      _internal_mutable_entity_add_results();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >&
      entity_add_results() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >*
      mutable_entity_add_results();

  // map<string, .esriPBuffer.graph.EditResults> relationship_add_results = 3;
  int relationship_add_results_size() const;
  private:
  int _internal_relationship_add_results_size() const;
  public:
  void clear_relationship_add_results();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >&
      _internal_relationship_add_results() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >*
      _internal_mutable_relationship_add_results();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >&
      relationship_add_results() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >*
      mutable_relationship_add_results();

  // map<string, .esriPBuffer.graph.EditResults> entity_update_results = 4;
  int entity_update_results_size() const;
  private:
  int _internal_entity_update_results_size() const;
  public:
  void clear_entity_update_results();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >&
      _internal_entity_update_results() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >*
      _internal_mutable_entity_update_results();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >&
      entity_update_results() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >*
      mutable_entity_update_results();

  // map<string, .esriPBuffer.graph.EditResults> relationship_update_results = 5;
  int relationship_update_results_size() const;
  private:
  int _internal_relationship_update_results_size() const;
  public:
  void clear_relationship_update_results();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >&
      _internal_relationship_update_results() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >*
      _internal_mutable_relationship_update_results();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >&
      relationship_update_results() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >*
      mutable_relationship_update_results();

  // map<string, .esriPBuffer.graph.EditResults> entity_delete_results = 6;
  int entity_delete_results_size() const;
  private:
  int _internal_entity_delete_results_size() const;
  public:
  void clear_entity_delete_results();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >&
      _internal_entity_delete_results() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >*
      _internal_mutable_entity_delete_results();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >&
      entity_delete_results() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >*
      mutable_entity_delete_results();

  // map<string, .esriPBuffer.graph.EditResults> relationship_delete_results = 7;
  int relationship_delete_results_size() const;
  private:
  int _internal_relationship_delete_results_size() const;
  public:
  void clear_relationship_delete_results();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >&
      _internal_relationship_delete_results() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >*
      _internal_mutable_relationship_delete_results();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >&
      relationship_delete_results() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >*
      mutable_relationship_delete_results();

  // map<string, .esriPBuffer.graph.CascadingRelationshipDeletes> cascading_relationship_delete_results = 8;
  int cascading_relationship_delete_results_size() const;
  private:
  int _internal_cascading_relationship_delete_results_size() const;
  public:
  void clear_cascading_relationship_delete_results();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::CascadingRelationshipDeletes >&
      _internal_cascading_relationship_delete_results() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::CascadingRelationshipDeletes >*
      _internal_mutable_cascading_relationship_delete_results();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::CascadingRelationshipDeletes >&
      cascading_relationship_delete_results() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::CascadingRelationshipDeletes >*
      mutable_cascading_relationship_delete_results();

  // map<string, .esriPBuffer.graph.RelationshipTypeSchemaChanges> rel_type_schema_changes = 9;
  int rel_type_schema_changes_size() const;
  private:
  int _internal_rel_type_schema_changes_size() const;
  public:
  void clear_rel_type_schema_changes();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::RelationshipTypeSchemaChanges >&
      _internal_rel_type_schema_changes() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::RelationshipTypeSchemaChanges >*
      _internal_mutable_rel_type_schema_changes();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::RelationshipTypeSchemaChanges >&
      rel_type_schema_changes() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::RelationshipTypeSchemaChanges >*
      mutable_rel_type_schema_changes();

  // .esriPBuffer.graph.Error error = 1;
  bool has_error() const;
  private:
  bool _internal_has_error() const;
  public:
  void clear_error();
  const ::esriPBuffer::graph::Error& error() const;
  ::esriPBuffer::graph::Error* release_error();
  ::esriPBuffer::graph::Error* mutable_error();
  void set_allocated_error(::esriPBuffer::graph::Error* error);
  private:
  const ::esriPBuffer::graph::Error& _internal_error() const;
  ::esriPBuffer::graph::Error* _internal_mutable_error();
  public:
  void unsafe_arena_set_allocated_error(
      ::esriPBuffer::graph::Error* error);
  ::esriPBuffer::graph::Error* unsafe_arena_release_error();

  // @@protoc_insertion_point(class_scope:esriPBuffer.graph.GraphApplyEditsResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapFieldLite<
      GraphApplyEditsResult_EntityAddResultsEntry_DoNotUse,
      std::string, ::esriPBuffer::graph::EditResults,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > entity_add_results_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapFieldLite<
      GraphApplyEditsResult_RelationshipAddResultsEntry_DoNotUse,
      std::string, ::esriPBuffer::graph::EditResults,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > relationship_add_results_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapFieldLite<
      GraphApplyEditsResult_EntityUpdateResultsEntry_DoNotUse,
      std::string, ::esriPBuffer::graph::EditResults,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > entity_update_results_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapFieldLite<
      GraphApplyEditsResult_RelationshipUpdateResultsEntry_DoNotUse,
      std::string, ::esriPBuffer::graph::EditResults,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > relationship_update_results_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapFieldLite<
      GraphApplyEditsResult_EntityDeleteResultsEntry_DoNotUse,
      std::string, ::esriPBuffer::graph::EditResults,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > entity_delete_results_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapFieldLite<
      GraphApplyEditsResult_RelationshipDeleteResultsEntry_DoNotUse,
      std::string, ::esriPBuffer::graph::EditResults,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > relationship_delete_results_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapFieldLite<
      GraphApplyEditsResult_CascadingRelationshipDeleteResultsEntry_DoNotUse,
      std::string, ::esriPBuffer::graph::CascadingRelationshipDeletes,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > cascading_relationship_delete_results_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapFieldLite<
      GraphApplyEditsResult_RelTypeSchemaChangesEntry_DoNotUse,
      std::string, ::esriPBuffer::graph::RelationshipTypeSchemaChanges,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > rel_type_schema_changes_;
  ::esriPBuffer::graph::Error* error_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_esriPBuffer_2fgraph_2fApplyEditsResponse_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// EditResults

// .esriPBuffer.ObjectIdArray oid_array = 1;
inline bool EditResults::_internal_has_oid_array() const {
  return this != internal_default_instance() && oid_array_ != nullptr;
}
inline bool EditResults::has_oid_array() const {
  return _internal_has_oid_array();
}
inline const ::esriPBuffer::ObjectIdArray& EditResults::_internal_oid_array() const {
  const ::esriPBuffer::ObjectIdArray* p = oid_array_;
  return p != nullptr ? *p : *reinterpret_cast<const ::esriPBuffer::ObjectIdArray*>(
      &::esriPBuffer::_ObjectIdArray_default_instance_);
}
inline const ::esriPBuffer::ObjectIdArray& EditResults::oid_array() const {
  // @@protoc_insertion_point(field_get:esriPBuffer.graph.EditResults.oid_array)
  return _internal_oid_array();
}
inline void EditResults::unsafe_arena_set_allocated_oid_array(
    ::esriPBuffer::ObjectIdArray* oid_array) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(oid_array_);
  }
  oid_array_ = oid_array;
  if (oid_array) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:esriPBuffer.graph.EditResults.oid_array)
}
inline ::esriPBuffer::ObjectIdArray* EditResults::release_oid_array() {
  
  ::esriPBuffer::ObjectIdArray* temp = oid_array_;
  oid_array_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::esriPBuffer::ObjectIdArray* EditResults::unsafe_arena_release_oid_array() {
  // @@protoc_insertion_point(field_release:esriPBuffer.graph.EditResults.oid_array)
  
  ::esriPBuffer::ObjectIdArray* temp = oid_array_;
  oid_array_ = nullptr;
  return temp;
}
inline ::esriPBuffer::ObjectIdArray* EditResults::_internal_mutable_oid_array() {
  
  if (oid_array_ == nullptr) {
    auto* p = CreateMaybeMessage<::esriPBuffer::ObjectIdArray>(GetArena());
    oid_array_ = p;
  }
  return oid_array_;
}
inline ::esriPBuffer::ObjectIdArray* EditResults::mutable_oid_array() {
  // @@protoc_insertion_point(field_mutable:esriPBuffer.graph.EditResults.oid_array)
  return _internal_mutable_oid_array();
}
inline void EditResults::set_allocated_oid_array(::esriPBuffer::ObjectIdArray* oid_array) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(oid_array_);
  }
  if (oid_array) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(oid_array)->GetArena();
    if (message_arena != submessage_arena) {
      oid_array = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, oid_array, submessage_arena);
    }
    
  } else {
    
  }
  oid_array_ = oid_array;
  // @@protoc_insertion_point(field_set_allocated:esriPBuffer.graph.EditResults.oid_array)
}

// bytes globalid_array = 2;
inline void EditResults::clear_globalid_array() {
  globalid_array_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& EditResults::globalid_array() const {
  // @@protoc_insertion_point(field_get:esriPBuffer.graph.EditResults.globalid_array)
  return _internal_globalid_array();
}
inline void EditResults::set_globalid_array(const std::string& value) {
  _internal_set_globalid_array(value);
  // @@protoc_insertion_point(field_set:esriPBuffer.graph.EditResults.globalid_array)
}
inline std::string* EditResults::mutable_globalid_array() {
  // @@protoc_insertion_point(field_mutable:esriPBuffer.graph.EditResults.globalid_array)
  return _internal_mutable_globalid_array();
}
inline const std::string& EditResults::_internal_globalid_array() const {
  return globalid_array_.Get();
}
inline void EditResults::_internal_set_globalid_array(const std::string& value) {
  
  globalid_array_.SetLite(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void EditResults::set_globalid_array(std::string&& value) {
  
  globalid_array_.SetLite(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:esriPBuffer.graph.EditResults.globalid_array)
}
inline void EditResults::set_globalid_array(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  globalid_array_.SetLite(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:esriPBuffer.graph.EditResults.globalid_array)
}
inline void EditResults::set_globalid_array(const void* value,
    size_t size) {
  
  globalid_array_.SetLite(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:esriPBuffer.graph.EditResults.globalid_array)
}
inline std::string* EditResults::_internal_mutable_globalid_array() {
  
  return globalid_array_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* EditResults::release_globalid_array() {
  // @@protoc_insertion_point(field_release:esriPBuffer.graph.EditResults.globalid_array)
  return globalid_array_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void EditResults::set_allocated_globalid_array(std::string* globalid_array) {
  if (globalid_array != nullptr) {
    
  } else {
    
  }
  globalid_array_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), globalid_array,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:esriPBuffer.graph.EditResults.globalid_array)
}

// map<uint64, .esriPBuffer.graph.Error> errors = 3;
inline int EditResults::_internal_errors_size() const {
  return errors_.size();
}
inline int EditResults::errors_size() const {
  return _internal_errors_size();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::esriPBuffer::graph::Error >&
EditResults::_internal_errors() const {
  return errors_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::esriPBuffer::graph::Error >&
EditResults::errors() const {
  // @@protoc_insertion_point(field_map:esriPBuffer.graph.EditResults.errors)
  return _internal_errors();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::esriPBuffer::graph::Error >*
EditResults::_internal_mutable_errors() {
  return errors_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::esriPBuffer::graph::Error >*
EditResults::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_map:esriPBuffer.graph.EditResults.errors)
  return _internal_mutable_errors();
}

// -------------------------------------------------------------------

// CascadingRelationshipDeletes

// .esriPBuffer.graph.EditResults relationship_delete_results = 1;
inline bool CascadingRelationshipDeletes::_internal_has_relationship_delete_results() const {
  return this != internal_default_instance() && relationship_delete_results_ != nullptr;
}
inline bool CascadingRelationshipDeletes::has_relationship_delete_results() const {
  return _internal_has_relationship_delete_results();
}
inline void CascadingRelationshipDeletes::clear_relationship_delete_results() {
  if (GetArena() == nullptr && relationship_delete_results_ != nullptr) {
    delete relationship_delete_results_;
  }
  relationship_delete_results_ = nullptr;
}
inline const ::esriPBuffer::graph::EditResults& CascadingRelationshipDeletes::_internal_relationship_delete_results() const {
  const ::esriPBuffer::graph::EditResults* p = relationship_delete_results_;
  return p != nullptr ? *p : *reinterpret_cast<const ::esriPBuffer::graph::EditResults*>(
      &::esriPBuffer::graph::_EditResults_default_instance_);
}
inline const ::esriPBuffer::graph::EditResults& CascadingRelationshipDeletes::relationship_delete_results() const {
  // @@protoc_insertion_point(field_get:esriPBuffer.graph.CascadingRelationshipDeletes.relationship_delete_results)
  return _internal_relationship_delete_results();
}
inline void CascadingRelationshipDeletes::unsafe_arena_set_allocated_relationship_delete_results(
    ::esriPBuffer::graph::EditResults* relationship_delete_results) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(relationship_delete_results_);
  }
  relationship_delete_results_ = relationship_delete_results;
  if (relationship_delete_results) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:esriPBuffer.graph.CascadingRelationshipDeletes.relationship_delete_results)
}
inline ::esriPBuffer::graph::EditResults* CascadingRelationshipDeletes::release_relationship_delete_results() {
  
  ::esriPBuffer::graph::EditResults* temp = relationship_delete_results_;
  relationship_delete_results_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::esriPBuffer::graph::EditResults* CascadingRelationshipDeletes::unsafe_arena_release_relationship_delete_results() {
  // @@protoc_insertion_point(field_release:esriPBuffer.graph.CascadingRelationshipDeletes.relationship_delete_results)
  
  ::esriPBuffer::graph::EditResults* temp = relationship_delete_results_;
  relationship_delete_results_ = nullptr;
  return temp;
}
inline ::esriPBuffer::graph::EditResults* CascadingRelationshipDeletes::_internal_mutable_relationship_delete_results() {
  
  if (relationship_delete_results_ == nullptr) {
    auto* p = CreateMaybeMessage<::esriPBuffer::graph::EditResults>(GetArena());
    relationship_delete_results_ = p;
  }
  return relationship_delete_results_;
}
inline ::esriPBuffer::graph::EditResults* CascadingRelationshipDeletes::mutable_relationship_delete_results() {
  // @@protoc_insertion_point(field_mutable:esriPBuffer.graph.CascadingRelationshipDeletes.relationship_delete_results)
  return _internal_mutable_relationship_delete_results();
}
inline void CascadingRelationshipDeletes::set_allocated_relationship_delete_results(::esriPBuffer::graph::EditResults* relationship_delete_results) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete relationship_delete_results_;
  }
  if (relationship_delete_results) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(relationship_delete_results);
    if (message_arena != submessage_arena) {
      relationship_delete_results = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, relationship_delete_results, submessage_arena);
    }
    
  } else {
    
  }
  relationship_delete_results_ = relationship_delete_results;
  // @@protoc_insertion_point(field_set_allocated:esriPBuffer.graph.CascadingRelationshipDeletes.relationship_delete_results)
}

// bytes origin_entity_globalid_array = 2;
inline void CascadingRelationshipDeletes::clear_origin_entity_globalid_array() {
  origin_entity_globalid_array_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CascadingRelationshipDeletes::origin_entity_globalid_array() const {
  // @@protoc_insertion_point(field_get:esriPBuffer.graph.CascadingRelationshipDeletes.origin_entity_globalid_array)
  return _internal_origin_entity_globalid_array();
}
inline void CascadingRelationshipDeletes::set_origin_entity_globalid_array(const std::string& value) {
  _internal_set_origin_entity_globalid_array(value);
  // @@protoc_insertion_point(field_set:esriPBuffer.graph.CascadingRelationshipDeletes.origin_entity_globalid_array)
}
inline std::string* CascadingRelationshipDeletes::mutable_origin_entity_globalid_array() {
  // @@protoc_insertion_point(field_mutable:esriPBuffer.graph.CascadingRelationshipDeletes.origin_entity_globalid_array)
  return _internal_mutable_origin_entity_globalid_array();
}
inline const std::string& CascadingRelationshipDeletes::_internal_origin_entity_globalid_array() const {
  return origin_entity_globalid_array_.Get();
}
inline void CascadingRelationshipDeletes::_internal_set_origin_entity_globalid_array(const std::string& value) {
  
  origin_entity_globalid_array_.SetLite(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CascadingRelationshipDeletes::set_origin_entity_globalid_array(std::string&& value) {
  
  origin_entity_globalid_array_.SetLite(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:esriPBuffer.graph.CascadingRelationshipDeletes.origin_entity_globalid_array)
}
inline void CascadingRelationshipDeletes::set_origin_entity_globalid_array(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  origin_entity_globalid_array_.SetLite(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:esriPBuffer.graph.CascadingRelationshipDeletes.origin_entity_globalid_array)
}
inline void CascadingRelationshipDeletes::set_origin_entity_globalid_array(const void* value,
    size_t size) {
  
  origin_entity_globalid_array_.SetLite(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:esriPBuffer.graph.CascadingRelationshipDeletes.origin_entity_globalid_array)
}
inline std::string* CascadingRelationshipDeletes::_internal_mutable_origin_entity_globalid_array() {
  
  return origin_entity_globalid_array_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CascadingRelationshipDeletes::release_origin_entity_globalid_array() {
  // @@protoc_insertion_point(field_release:esriPBuffer.graph.CascadingRelationshipDeletes.origin_entity_globalid_array)
  return origin_entity_globalid_array_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CascadingRelationshipDeletes::set_allocated_origin_entity_globalid_array(std::string* origin_entity_globalid_array) {
  if (origin_entity_globalid_array != nullptr) {
    
  } else {
    
  }
  origin_entity_globalid_array_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), origin_entity_globalid_array,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:esriPBuffer.graph.CascadingRelationshipDeletes.origin_entity_globalid_array)
}

// bytes dest_entity_globalid_array = 3;
inline void CascadingRelationshipDeletes::clear_dest_entity_globalid_array() {
  dest_entity_globalid_array_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CascadingRelationshipDeletes::dest_entity_globalid_array() const {
  // @@protoc_insertion_point(field_get:esriPBuffer.graph.CascadingRelationshipDeletes.dest_entity_globalid_array)
  return _internal_dest_entity_globalid_array();
}
inline void CascadingRelationshipDeletes::set_dest_entity_globalid_array(const std::string& value) {
  _internal_set_dest_entity_globalid_array(value);
  // @@protoc_insertion_point(field_set:esriPBuffer.graph.CascadingRelationshipDeletes.dest_entity_globalid_array)
}
inline std::string* CascadingRelationshipDeletes::mutable_dest_entity_globalid_array() {
  // @@protoc_insertion_point(field_mutable:esriPBuffer.graph.CascadingRelationshipDeletes.dest_entity_globalid_array)
  return _internal_mutable_dest_entity_globalid_array();
}
inline const std::string& CascadingRelationshipDeletes::_internal_dest_entity_globalid_array() const {
  return dest_entity_globalid_array_.Get();
}
inline void CascadingRelationshipDeletes::_internal_set_dest_entity_globalid_array(const std::string& value) {
  
  dest_entity_globalid_array_.SetLite(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CascadingRelationshipDeletes::set_dest_entity_globalid_array(std::string&& value) {
  
  dest_entity_globalid_array_.SetLite(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:esriPBuffer.graph.CascadingRelationshipDeletes.dest_entity_globalid_array)
}
inline void CascadingRelationshipDeletes::set_dest_entity_globalid_array(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  dest_entity_globalid_array_.SetLite(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:esriPBuffer.graph.CascadingRelationshipDeletes.dest_entity_globalid_array)
}
inline void CascadingRelationshipDeletes::set_dest_entity_globalid_array(const void* value,
    size_t size) {
  
  dest_entity_globalid_array_.SetLite(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:esriPBuffer.graph.CascadingRelationshipDeletes.dest_entity_globalid_array)
}
inline std::string* CascadingRelationshipDeletes::_internal_mutable_dest_entity_globalid_array() {
  
  return dest_entity_globalid_array_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CascadingRelationshipDeletes::release_dest_entity_globalid_array() {
  // @@protoc_insertion_point(field_release:esriPBuffer.graph.CascadingRelationshipDeletes.dest_entity_globalid_array)
  return dest_entity_globalid_array_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CascadingRelationshipDeletes::set_allocated_dest_entity_globalid_array(std::string* dest_entity_globalid_array) {
  if (dest_entity_globalid_array != nullptr) {
    
  } else {
    
  }
  dest_entity_globalid_array_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), dest_entity_globalid_array,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:esriPBuffer.graph.CascadingRelationshipDeletes.dest_entity_globalid_array)
}

// -------------------------------------------------------------------

// RelationshipTypeSchemaChanges

// repeated string origin_entity_types = 1;
inline int RelationshipTypeSchemaChanges::_internal_origin_entity_types_size() const {
  return origin_entity_types_.size();
}
inline int RelationshipTypeSchemaChanges::origin_entity_types_size() const {
  return _internal_origin_entity_types_size();
}
inline void RelationshipTypeSchemaChanges::clear_origin_entity_types() {
  origin_entity_types_.Clear();
}
inline std::string* RelationshipTypeSchemaChanges::add_origin_entity_types() {
  // @@protoc_insertion_point(field_add_mutable:esriPBuffer.graph.RelationshipTypeSchemaChanges.origin_entity_types)
  return _internal_add_origin_entity_types();
}
inline const std::string& RelationshipTypeSchemaChanges::_internal_origin_entity_types(int index) const {
  return origin_entity_types_.Get(index);
}
inline const std::string& RelationshipTypeSchemaChanges::origin_entity_types(int index) const {
  // @@protoc_insertion_point(field_get:esriPBuffer.graph.RelationshipTypeSchemaChanges.origin_entity_types)
  return _internal_origin_entity_types(index);
}
inline std::string* RelationshipTypeSchemaChanges::mutable_origin_entity_types(int index) {
  // @@protoc_insertion_point(field_mutable:esriPBuffer.graph.RelationshipTypeSchemaChanges.origin_entity_types)
  return origin_entity_types_.Mutable(index);
}
inline void RelationshipTypeSchemaChanges::set_origin_entity_types(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:esriPBuffer.graph.RelationshipTypeSchemaChanges.origin_entity_types)
  origin_entity_types_.Mutable(index)->assign(value);
}
inline void RelationshipTypeSchemaChanges::set_origin_entity_types(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:esriPBuffer.graph.RelationshipTypeSchemaChanges.origin_entity_types)
  origin_entity_types_.Mutable(index)->assign(std::move(value));
}
inline void RelationshipTypeSchemaChanges::set_origin_entity_types(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  origin_entity_types_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:esriPBuffer.graph.RelationshipTypeSchemaChanges.origin_entity_types)
}
inline void RelationshipTypeSchemaChanges::set_origin_entity_types(int index, const char* value, size_t size) {
  origin_entity_types_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:esriPBuffer.graph.RelationshipTypeSchemaChanges.origin_entity_types)
}
inline std::string* RelationshipTypeSchemaChanges::_internal_add_origin_entity_types() {
  return origin_entity_types_.Add();
}
inline void RelationshipTypeSchemaChanges::add_origin_entity_types(const std::string& value) {
  origin_entity_types_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:esriPBuffer.graph.RelationshipTypeSchemaChanges.origin_entity_types)
}
inline void RelationshipTypeSchemaChanges::add_origin_entity_types(std::string&& value) {
  origin_entity_types_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:esriPBuffer.graph.RelationshipTypeSchemaChanges.origin_entity_types)
}
inline void RelationshipTypeSchemaChanges::add_origin_entity_types(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  origin_entity_types_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:esriPBuffer.graph.RelationshipTypeSchemaChanges.origin_entity_types)
}
inline void RelationshipTypeSchemaChanges::add_origin_entity_types(const char* value, size_t size) {
  origin_entity_types_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:esriPBuffer.graph.RelationshipTypeSchemaChanges.origin_entity_types)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
RelationshipTypeSchemaChanges::origin_entity_types() const {
  // @@protoc_insertion_point(field_list:esriPBuffer.graph.RelationshipTypeSchemaChanges.origin_entity_types)
  return origin_entity_types_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
RelationshipTypeSchemaChanges::mutable_origin_entity_types() {
  // @@protoc_insertion_point(field_mutable_list:esriPBuffer.graph.RelationshipTypeSchemaChanges.origin_entity_types)
  return &origin_entity_types_;
}

// repeated string dest_entity_types = 2;
inline int RelationshipTypeSchemaChanges::_internal_dest_entity_types_size() const {
  return dest_entity_types_.size();
}
inline int RelationshipTypeSchemaChanges::dest_entity_types_size() const {
  return _internal_dest_entity_types_size();
}
inline void RelationshipTypeSchemaChanges::clear_dest_entity_types() {
  dest_entity_types_.Clear();
}
inline std::string* RelationshipTypeSchemaChanges::add_dest_entity_types() {
  // @@protoc_insertion_point(field_add_mutable:esriPBuffer.graph.RelationshipTypeSchemaChanges.dest_entity_types)
  return _internal_add_dest_entity_types();
}
inline const std::string& RelationshipTypeSchemaChanges::_internal_dest_entity_types(int index) const {
  return dest_entity_types_.Get(index);
}
inline const std::string& RelationshipTypeSchemaChanges::dest_entity_types(int index) const {
  // @@protoc_insertion_point(field_get:esriPBuffer.graph.RelationshipTypeSchemaChanges.dest_entity_types)
  return _internal_dest_entity_types(index);
}
inline std::string* RelationshipTypeSchemaChanges::mutable_dest_entity_types(int index) {
  // @@protoc_insertion_point(field_mutable:esriPBuffer.graph.RelationshipTypeSchemaChanges.dest_entity_types)
  return dest_entity_types_.Mutable(index);
}
inline void RelationshipTypeSchemaChanges::set_dest_entity_types(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:esriPBuffer.graph.RelationshipTypeSchemaChanges.dest_entity_types)
  dest_entity_types_.Mutable(index)->assign(value);
}
inline void RelationshipTypeSchemaChanges::set_dest_entity_types(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:esriPBuffer.graph.RelationshipTypeSchemaChanges.dest_entity_types)
  dest_entity_types_.Mutable(index)->assign(std::move(value));
}
inline void RelationshipTypeSchemaChanges::set_dest_entity_types(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  dest_entity_types_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:esriPBuffer.graph.RelationshipTypeSchemaChanges.dest_entity_types)
}
inline void RelationshipTypeSchemaChanges::set_dest_entity_types(int index, const char* value, size_t size) {
  dest_entity_types_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:esriPBuffer.graph.RelationshipTypeSchemaChanges.dest_entity_types)
}
inline std::string* RelationshipTypeSchemaChanges::_internal_add_dest_entity_types() {
  return dest_entity_types_.Add();
}
inline void RelationshipTypeSchemaChanges::add_dest_entity_types(const std::string& value) {
  dest_entity_types_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:esriPBuffer.graph.RelationshipTypeSchemaChanges.dest_entity_types)
}
inline void RelationshipTypeSchemaChanges::add_dest_entity_types(std::string&& value) {
  dest_entity_types_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:esriPBuffer.graph.RelationshipTypeSchemaChanges.dest_entity_types)
}
inline void RelationshipTypeSchemaChanges::add_dest_entity_types(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  dest_entity_types_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:esriPBuffer.graph.RelationshipTypeSchemaChanges.dest_entity_types)
}
inline void RelationshipTypeSchemaChanges::add_dest_entity_types(const char* value, size_t size) {
  dest_entity_types_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:esriPBuffer.graph.RelationshipTypeSchemaChanges.dest_entity_types)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
RelationshipTypeSchemaChanges::dest_entity_types() const {
  // @@protoc_insertion_point(field_list:esriPBuffer.graph.RelationshipTypeSchemaChanges.dest_entity_types)
  return dest_entity_types_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
RelationshipTypeSchemaChanges::mutable_dest_entity_types() {
  // @@protoc_insertion_point(field_mutable_list:esriPBuffer.graph.RelationshipTypeSchemaChanges.dest_entity_types)
  return &dest_entity_types_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GraphApplyEditsResult

// .esriPBuffer.graph.Error error = 1;
inline bool GraphApplyEditsResult::_internal_has_error() const {
  return this != internal_default_instance() && error_ != nullptr;
}
inline bool GraphApplyEditsResult::has_error() const {
  return _internal_has_error();
}
inline const ::esriPBuffer::graph::Error& GraphApplyEditsResult::_internal_error() const {
  const ::esriPBuffer::graph::Error* p = error_;
  return p != nullptr ? *p : *reinterpret_cast<const ::esriPBuffer::graph::Error*>(
      &::esriPBuffer::graph::_Error_default_instance_);
}
inline const ::esriPBuffer::graph::Error& GraphApplyEditsResult::error() const {
  // @@protoc_insertion_point(field_get:esriPBuffer.graph.GraphApplyEditsResult.error)
  return _internal_error();
}
inline void GraphApplyEditsResult::unsafe_arena_set_allocated_error(
    ::esriPBuffer::graph::Error* error) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(error_);
  }
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:esriPBuffer.graph.GraphApplyEditsResult.error)
}
inline ::esriPBuffer::graph::Error* GraphApplyEditsResult::release_error() {
  
  ::esriPBuffer::graph::Error* temp = error_;
  error_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::esriPBuffer::graph::Error* GraphApplyEditsResult::unsafe_arena_release_error() {
  // @@protoc_insertion_point(field_release:esriPBuffer.graph.GraphApplyEditsResult.error)
  
  ::esriPBuffer::graph::Error* temp = error_;
  error_ = nullptr;
  return temp;
}
inline ::esriPBuffer::graph::Error* GraphApplyEditsResult::_internal_mutable_error() {
  
  if (error_ == nullptr) {
    auto* p = CreateMaybeMessage<::esriPBuffer::graph::Error>(GetArena());
    error_ = p;
  }
  return error_;
}
inline ::esriPBuffer::graph::Error* GraphApplyEditsResult::mutable_error() {
  // @@protoc_insertion_point(field_mutable:esriPBuffer.graph.GraphApplyEditsResult.error)
  return _internal_mutable_error();
}
inline void GraphApplyEditsResult::set_allocated_error(::esriPBuffer::graph::Error* error) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(error_);
  }
  if (error) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(error)->GetArena();
    if (message_arena != submessage_arena) {
      error = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, error, submessage_arena);
    }
    
  } else {
    
  }
  error_ = error;
  // @@protoc_insertion_point(field_set_allocated:esriPBuffer.graph.GraphApplyEditsResult.error)
}

// map<string, .esriPBuffer.graph.EditResults> entity_add_results = 2;
inline int GraphApplyEditsResult::_internal_entity_add_results_size() const {
  return entity_add_results_.size();
}
inline int GraphApplyEditsResult::entity_add_results_size() const {
  return _internal_entity_add_results_size();
}
inline void GraphApplyEditsResult::clear_entity_add_results() {
  entity_add_results_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >&
GraphApplyEditsResult::_internal_entity_add_results() const {
  return entity_add_results_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >&
GraphApplyEditsResult::entity_add_results() const {
  // @@protoc_insertion_point(field_map:esriPBuffer.graph.GraphApplyEditsResult.entity_add_results)
  return _internal_entity_add_results();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >*
GraphApplyEditsResult::_internal_mutable_entity_add_results() {
  return entity_add_results_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >*
GraphApplyEditsResult::mutable_entity_add_results() {
  // @@protoc_insertion_point(field_mutable_map:esriPBuffer.graph.GraphApplyEditsResult.entity_add_results)
  return _internal_mutable_entity_add_results();
}

// map<string, .esriPBuffer.graph.EditResults> relationship_add_results = 3;
inline int GraphApplyEditsResult::_internal_relationship_add_results_size() const {
  return relationship_add_results_.size();
}
inline int GraphApplyEditsResult::relationship_add_results_size() const {
  return _internal_relationship_add_results_size();
}
inline void GraphApplyEditsResult::clear_relationship_add_results() {
  relationship_add_results_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >&
GraphApplyEditsResult::_internal_relationship_add_results() const {
  return relationship_add_results_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >&
GraphApplyEditsResult::relationship_add_results() const {
  // @@protoc_insertion_point(field_map:esriPBuffer.graph.GraphApplyEditsResult.relationship_add_results)
  return _internal_relationship_add_results();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >*
GraphApplyEditsResult::_internal_mutable_relationship_add_results() {
  return relationship_add_results_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >*
GraphApplyEditsResult::mutable_relationship_add_results() {
  // @@protoc_insertion_point(field_mutable_map:esriPBuffer.graph.GraphApplyEditsResult.relationship_add_results)
  return _internal_mutable_relationship_add_results();
}

// map<string, .esriPBuffer.graph.EditResults> entity_update_results = 4;
inline int GraphApplyEditsResult::_internal_entity_update_results_size() const {
  return entity_update_results_.size();
}
inline int GraphApplyEditsResult::entity_update_results_size() const {
  return _internal_entity_update_results_size();
}
inline void GraphApplyEditsResult::clear_entity_update_results() {
  entity_update_results_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >&
GraphApplyEditsResult::_internal_entity_update_results() const {
  return entity_update_results_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >&
GraphApplyEditsResult::entity_update_results() const {
  // @@protoc_insertion_point(field_map:esriPBuffer.graph.GraphApplyEditsResult.entity_update_results)
  return _internal_entity_update_results();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >*
GraphApplyEditsResult::_internal_mutable_entity_update_results() {
  return entity_update_results_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >*
GraphApplyEditsResult::mutable_entity_update_results() {
  // @@protoc_insertion_point(field_mutable_map:esriPBuffer.graph.GraphApplyEditsResult.entity_update_results)
  return _internal_mutable_entity_update_results();
}

// map<string, .esriPBuffer.graph.EditResults> relationship_update_results = 5;
inline int GraphApplyEditsResult::_internal_relationship_update_results_size() const {
  return relationship_update_results_.size();
}
inline int GraphApplyEditsResult::relationship_update_results_size() const {
  return _internal_relationship_update_results_size();
}
inline void GraphApplyEditsResult::clear_relationship_update_results() {
  relationship_update_results_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >&
GraphApplyEditsResult::_internal_relationship_update_results() const {
  return relationship_update_results_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >&
GraphApplyEditsResult::relationship_update_results() const {
  // @@protoc_insertion_point(field_map:esriPBuffer.graph.GraphApplyEditsResult.relationship_update_results)
  return _internal_relationship_update_results();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >*
GraphApplyEditsResult::_internal_mutable_relationship_update_results() {
  return relationship_update_results_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >*
GraphApplyEditsResult::mutable_relationship_update_results() {
  // @@protoc_insertion_point(field_mutable_map:esriPBuffer.graph.GraphApplyEditsResult.relationship_update_results)
  return _internal_mutable_relationship_update_results();
}

// map<string, .esriPBuffer.graph.EditResults> entity_delete_results = 6;
inline int GraphApplyEditsResult::_internal_entity_delete_results_size() const {
  return entity_delete_results_.size();
}
inline int GraphApplyEditsResult::entity_delete_results_size() const {
  return _internal_entity_delete_results_size();
}
inline void GraphApplyEditsResult::clear_entity_delete_results() {
  entity_delete_results_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >&
GraphApplyEditsResult::_internal_entity_delete_results() const {
  return entity_delete_results_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >&
GraphApplyEditsResult::entity_delete_results() const {
  // @@protoc_insertion_point(field_map:esriPBuffer.graph.GraphApplyEditsResult.entity_delete_results)
  return _internal_entity_delete_results();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >*
GraphApplyEditsResult::_internal_mutable_entity_delete_results() {
  return entity_delete_results_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >*
GraphApplyEditsResult::mutable_entity_delete_results() {
  // @@protoc_insertion_point(field_mutable_map:esriPBuffer.graph.GraphApplyEditsResult.entity_delete_results)
  return _internal_mutable_entity_delete_results();
}

// map<string, .esriPBuffer.graph.EditResults> relationship_delete_results = 7;
inline int GraphApplyEditsResult::_internal_relationship_delete_results_size() const {
  return relationship_delete_results_.size();
}
inline int GraphApplyEditsResult::relationship_delete_results_size() const {
  return _internal_relationship_delete_results_size();
}
inline void GraphApplyEditsResult::clear_relationship_delete_results() {
  relationship_delete_results_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >&
GraphApplyEditsResult::_internal_relationship_delete_results() const {
  return relationship_delete_results_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >&
GraphApplyEditsResult::relationship_delete_results() const {
  // @@protoc_insertion_point(field_map:esriPBuffer.graph.GraphApplyEditsResult.relationship_delete_results)
  return _internal_relationship_delete_results();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >*
GraphApplyEditsResult::_internal_mutable_relationship_delete_results() {
  return relationship_delete_results_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::EditResults >*
GraphApplyEditsResult::mutable_relationship_delete_results() {
  // @@protoc_insertion_point(field_mutable_map:esriPBuffer.graph.GraphApplyEditsResult.relationship_delete_results)
  return _internal_mutable_relationship_delete_results();
}

// map<string, .esriPBuffer.graph.CascadingRelationshipDeletes> cascading_relationship_delete_results = 8;
inline int GraphApplyEditsResult::_internal_cascading_relationship_delete_results_size() const {
  return cascading_relationship_delete_results_.size();
}
inline int GraphApplyEditsResult::cascading_relationship_delete_results_size() const {
  return _internal_cascading_relationship_delete_results_size();
}
inline void GraphApplyEditsResult::clear_cascading_relationship_delete_results() {
  cascading_relationship_delete_results_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::CascadingRelationshipDeletes >&
GraphApplyEditsResult::_internal_cascading_relationship_delete_results() const {
  return cascading_relationship_delete_results_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::CascadingRelationshipDeletes >&
GraphApplyEditsResult::cascading_relationship_delete_results() const {
  // @@protoc_insertion_point(field_map:esriPBuffer.graph.GraphApplyEditsResult.cascading_relationship_delete_results)
  return _internal_cascading_relationship_delete_results();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::CascadingRelationshipDeletes >*
GraphApplyEditsResult::_internal_mutable_cascading_relationship_delete_results() {
  return cascading_relationship_delete_results_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::CascadingRelationshipDeletes >*
GraphApplyEditsResult::mutable_cascading_relationship_delete_results() {
  // @@protoc_insertion_point(field_mutable_map:esriPBuffer.graph.GraphApplyEditsResult.cascading_relationship_delete_results)
  return _internal_mutable_cascading_relationship_delete_results();
}

// map<string, .esriPBuffer.graph.RelationshipTypeSchemaChanges> rel_type_schema_changes = 9;
inline int GraphApplyEditsResult::_internal_rel_type_schema_changes_size() const {
  return rel_type_schema_changes_.size();
}
inline int GraphApplyEditsResult::rel_type_schema_changes_size() const {
  return _internal_rel_type_schema_changes_size();
}
inline void GraphApplyEditsResult::clear_rel_type_schema_changes() {
  rel_type_schema_changes_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::RelationshipTypeSchemaChanges >&
GraphApplyEditsResult::_internal_rel_type_schema_changes() const {
  return rel_type_schema_changes_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::RelationshipTypeSchemaChanges >&
GraphApplyEditsResult::rel_type_schema_changes() const {
  // @@protoc_insertion_point(field_map:esriPBuffer.graph.GraphApplyEditsResult.rel_type_schema_changes)
  return _internal_rel_type_schema_changes();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::RelationshipTypeSchemaChanges >*
GraphApplyEditsResult::_internal_mutable_rel_type_schema_changes() {
  return rel_type_schema_changes_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::esriPBuffer::graph::RelationshipTypeSchemaChanges >*
GraphApplyEditsResult::mutable_rel_type_schema_changes() {
  // @@protoc_insertion_point(field_mutable_map:esriPBuffer.graph.GraphApplyEditsResult.rel_type_schema_changes)
  return _internal_mutable_rel_type_schema_changes();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace graph
}  // namespace esriPBuffer

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_esriPBuffer_2fgraph_2fApplyEditsResponse_2eproto
